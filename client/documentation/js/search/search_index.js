var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.604,1,2.53]],["body/injectables/ApiService.html",[0,1.901,1,2.998,2,1.813,3,0.2,4,0.2,5,0.2,6,2.742,7,0.289,8,0.946,9,2.331,10,1.9,11,5.384,12,5.384,13,4.586,14,1.452,15,2.342,16,2.342,17,0.573,18,3.174,19,5.897,20,2.924,21,1.08,22,3.174,23,1.719,24,0.017,25,0.885,26,0.901,27,1.299,28,1.901,29,4.586,30,5.277,31,4.64,32,3.174,33,4.095,34,1.055,35,3.376,36,3.174,37,5.897,38,5.327,39,1.565,40,3.174,41,1.944,42,3.174,43,1.767,44,2.474,45,1.794,46,2.517,47,3.174,48,4.586,49,3.174,50,1.146,51,1.789,52,3.174,53,4.586,54,2.736,55,1.78,56,3.174,57,0.884,58,3.174,59,6.518,60,2.13,61,3.174,62,3.174,63,2.13,64,3.174,65,0.565,66,0.627,67,4.586,68,2.742,69,1.381,70,3.174,71,6.254,72,1.097,73,1.934,74,1.613,75,2.458,76,3.174,77,1.813,78,1.789,79,2.322,80,1.944,81,3.243,82,3.174,83,1.097,84,3.174,85,1.256,86,2.333,87,1.934,88,1.707,89,0.217,90,0.007,91,1.613,92,3.174,93,1.344,94,3.174,95,7.01,96,4.842,97,1.672,98,0.812,99,6.518,100,3.174,101,0.778,102,5.897,103,3.174,104,1.814,105,1.381,106,3.174,107,4.586,108,1.316,109,3.174,110,1.097,111,3.174,112,3.174,113,3.174,114,3.174,115,4.171,116,3.174,117,3.174,118,3.174,119,1.934,120,4.566,121,5.384,122,5.384,123,5.897,124,5.897,125,5.897,126,3.174,127,4.586,128,3.174,129,3.174,130,3.174,131,0.007,132,0.01,133,0.007]],["title/components/AppComponent.html",[134,0.699,135,1.398]],["body/components/AppComponent.html",[3,0.184,4,0.184,5,0.184,7,0.391,8,0.888,10,1.687,17,0.777,20,2.845,21,1.077,23,1.055,24,0.017,25,0.727,26,0.813,27,0.812,34,0.675,35,2.465,50,2.043,51,1.716,54,3.412,55,1.422,57,1.681,65,0.554,66,0.574,69,1.266,72,1.005,74,1.478,88,2.314,89,0.199,90,0.006,96,4.38,97,0.683,98,1.447,115,2.057,131,0.006,132,0.009,133,0.006,134,0.924,135,2.043,136,1.784,137,0.776,138,1.266,139,1.266,140,1.266,141,2.513,142,1.266,143,2.757,144,2.601,145,1.625,146,5.119,147,1.625,148,4.302,149,0.777,150,6.857,151,6.857,152,2.362,153,6.037,154,4.302,155,5.657,156,2.909,157,6.32,158,3.735,159,2.909,160,4.302,161,2.909,162,4.302,163,3.043,164,2.909,165,2.909,166,4.302,167,4.302,168,4.302,169,4.302,170,2.909,171,2.909,172,5.119,173,3.331,174,4.302,175,2.909,176,3.716,177,2.909,178,2.909,179,1.902,180,2.909,181,2.252,182,2.513,183,2.314,184,2.513,185,2.513,186,2.057,187,2.513,188,2.043,189,2.057,190,1.266,191,5.119,192,2.909,193,2.909,194,2.909,195,1.902,196,2.909,197,2.909,198,2.909,199,4.302,200,2.909,201,2.909,202,2.909,203,2.909,204,4.999,205,4.302,206,3.331,207,4.302,208,3.331,209,4.302,210,2.909,211,2.909,212,4.302,213,6.714,214,4.302,215,3.331,216,4.302,217,4.302,218,4.302,219,2.909,220,4.302,221,4.302,222,2.621,223,5.657,224,4.302,225,5.657,226,3.835,227,3.447,228,2.909,229,5.657,230,5.657,231,5.657,232,5.657,233,2.909,234,2.909,235,2.909,236,3.043,237,2.909,238,3.716,239,2.909,240,5.657,241,2.909,242,3.447,243,3.331,244,2.909,245,2.909,246,4.302,247,2.909,248,3.716,249,4.302,250,3.716,251,4.302,252,2.909,253,2.909,254,4.302,255,4.302,256,4.302,257,2.909,258,3.716,259,4.302,260,4.302,261,3.964,262,4.302,263,4.302,264,3.716,265,1.554,266,3.331,267,4.302,268,2.513,269,1.902,270,2.909,271,2.513,272,2.909,273,2.252,274,3.331,275,2.909,276,2.057,277,2.909,278,2.909,279,2.909,280,2.057,281,3.331,282,2.909,283,2.909,284,2.252,285,1.902,286,2.513,287,2.057,288,2.909,289,0.962,290,1.872,291,1.784,292,1.266,293,2.461,294,1.266,295,2.909,296,2.909,297,2.909,298,2.909,299,2.909,300,2.909,301,2.909,302,2.909,303,2.909,304,2.909,305,2.909,306,2.909,307,2.909,308,2.909,309,2.909,310,2.909,311,2.909,312,1.266,313,1.005,314,1.266,315,1.005,316,0.812,317,2.227,318,1.005,319,1.872,320,1.005,321,1.011,322,1.266,323,1.005,324,1.005,325,1.05,326,1.266,327,0.962,328,1.05,329,1.266,330,1.266,331,1.005,332,1.266,333,1.266,334,1.266]],["title/modules/AppModule.html",[335,1.531,336,2.737]],["body/modules/AppModule.html",[3,0.311,4,0.311,5,0.311,24,0.017,65,0.624,66,0.974,89,0.338,90,0.01,131,0.01,132,0.013,133,0.01,135,2.824,144,1.705,187,4.263,261,3.821,289,1.632,335,1.952,336,5.504,337,2.257,338,2.654,339,4.109,340,4.109,341,3.007,342,2.508,343,4.263,344,4.263,345,4.263,346,4.263,347,4.854,348,4.854,349,3.764,350,2.654,351,2.819,352,4.935,353,3.323,354,6.178,355,5.337,356,3.491,357,3.323,358,6.178,359,4.935,360,5.337,361,4.263,362,6.178,363,4.263,364,4.263,365,5.337,366,4.263,367,6.178,368,5.337,369,4.263,370,4.935,371,6.178,372,4.935,373,4.935,374,4.935,375,5.337,376,4.263]],["title/classes/AppPage.html",[90,0.008,377,2.996]],["body/classes/AppPage.html",[3,0.361,4,0.361,5,0.361,7,0.52,8,1.395,21,1.061,24,0.017,34,1.061,65,0.455,88,3.078,89,0.392,90,0.012,97,1.588,131,0.012,132,0.014,133,0.012,236,4.048,291,2.373,356,4.048,377,5.234,378,1.977,379,4.944,380,7.434,381,7.434,382,5.722,383,7.69,384,5.722,385,4.944,386,5.722,387,5.722,388,5.722]],["title/modules/AppRoutingModule.html",[335,1.531,347,2.53]],["body/modules/AppRoutingModule.html",[3,0.34,4,0.34,5,0.34,24,0.017,33,4.438,65,0.557,66,1.062,89,0.446,90,0.011,101,1.319,131,0.011,132,0.014,133,0.011,134,0.971,331,2.251,337,2.46,342,2.734,347,4.259,353,2.893,357,3.504,389,5.379,390,5.379,391,3.97,392,4.608,393,3.073,394,5.379,395,3.805,396,4.647,397,5.379,398,4.957,399,2.317,400,4.582,401,6.515,402,5.379,403,5.379,404,5.044,405,5.379,406,5.379,407,5.379,408,5.379,409,5.379,410,4.647,411,5.379]],["title/classes/BaseEntityModel.html",[78,1.174,90,0.008]],["body/classes/BaseEntityModel.html",[3,0.135,4,0.135,5,0.135,10,1.404,14,1.078,15,0.933,16,0.933,17,0.387,21,0.337,24,0.017,25,0.544,26,0.843,28,1.412,34,0.879,39,1.939,41,2.593,43,1.76,44,2.542,45,1.404,46,2.667,55,1.126,60,0.775,63,0.775,65,0.271,72,2.397,78,1.78,79,0.741,80,1.23,83,2.027,85,1.675,86,0.849,89,0.513,90,0.015,93,1.108,97,1.568,98,1.644,101,1.575,104,2.409,105,2.854,108,2.181,110,0.741,131,0.01,132,0.007,133,0.004,137,1.494,190,1.843,265,0.775,316,0.643,321,0.672,378,0.741,399,2.429,412,0.849,413,0.741,414,2.181,415,2.788,416,0.849,417,1.853,418,2.269,419,2.145,420,1.557,421,0.775,422,0.81,423,0.933,424,2.506,425,1.482,426,1.843,427,0.933,428,0.889,429,0.849,430,1.756,431,1.463,432,1.236,433,0.933,434,0.775,435,1.465,436,0.709,437,0.849,438,0.775,439,3.077,440,2.405,441,1.627,442,1.557,443,1.557,444,0.981,445,1.847,446,2.217,447,2.205,448,2.56,449,1.412,450,0.849,451,2.205,452,2.649,453,2.436,454,1.482,455,2.6,456,1.412,457,2.524,458,1.557,459,0.981,460,0.981,461,0.981,462,3.26,463,1.937,464,1.937,465,0.981,466,2.405,467,0.981,468,0.981,469,0.889,470,1.557,471,0.981,472,1.557,473,0.981,474,0.981,475,1.557,476,0.981,477,0.981,478,0.981,479,0.981,480,1.937,481,2.56,482,3.305,483,2.999,484,2.436,485,2.405,486,2.181,487,2.785,488,1.937,489,1.937,490,1.937,491,0.981,492,2.205,493,2.205,494,1.557,495,2.205,496,1.557,497,1.557,498,1.557,499,1.557,500,0.981,501,0.981,502,1.557,503,0.981,504,1.557,505,1.557,506,1.23,507,1.23,508,1.347,509,0.981,510,0.981,511,0.981,512,1.557,513,0.981,514,0.981,515,0.981,516,0.981,517,0.981,518,1.557,519,0.981,520,0.981,521,2.205,522,0.981,523,0.981,524,1.557,525,1.463,526,1.033]],["title/classes/BaseIdModel.html",[90,0.008,525,1.337]],["body/classes/BaseIdModel.html",[3,0.134,4,0.134,5,0.134,7,0.194,10,1.399,14,1.072,15,0.927,16,0.927,17,0.385,21,0.532,24,0.017,25,0.542,26,0.856,28,1.404,34,0.876,39,1.936,41,2.59,43,1.758,44,2.537,45,1.399,46,2.666,55,1.12,60,0.769,63,0.769,65,0.269,72,2.394,78,1.693,79,0.736,80,1.223,83,2.022,85,1.668,86,0.843,89,0.513,90,0.015,93,1.105,97,1.565,98,1.641,101,1.572,104,2.403,105,2.848,108,2.173,110,0.736,131,0.01,132,0.007,133,0.004,137,1.49,149,0.611,190,1.834,265,0.769,316,0.64,321,0.669,378,0.736,399,2.427,412,0.843,413,0.736,414,2.173,415,2.787,416,0.843,417,1.84,418,2.265,420,1.549,421,0.769,422,0.805,423,0.927,424,2.502,425,1.474,426,1.834,427,0.927,428,0.883,429,0.843,430,1.748,431,1.456,432,1.231,433,0.927,434,0.769,435,1.555,436,0.704,437,0.843,438,0.769,439,3.073,440,2.397,441,1.622,442,1.549,443,1.549,444,0.974,445,1.842,446,2.211,447,2.197,448,2.553,449,1.404,450,0.843,451,2.197,452,2.643,453,2.429,454,1.474,455,2.594,456,1.404,457,2.518,458,1.549,459,0.974,460,0.974,461,0.974,462,3.256,463,1.928,464,1.928,465,0.974,466,2.397,467,0.974,468,0.974,469,0.883,470,1.549,471,0.974,472,1.549,473,0.974,474,0.974,475,1.549,476,0.974,477,0.974,478,0.974,479,0.974,480,1.928,481,2.553,482,3.302,483,2.994,484,2.429,485,2.397,486,2.173,487,2.778,488,1.928,489,1.928,490,1.928,491,0.974,492,2.197,493,2.197,494,1.549,495,2.197,496,1.549,497,1.549,498,1.549,499,1.549,500,0.974,501,0.974,502,1.549,503,0.974,504,1.549,505,1.549,506,1.223,507,1.223,508,1.34,509,0.974,510,0.974,511,0.974,512,1.549,513,0.974,514,0.974,515,0.974,516,0.974,517,0.974,518,1.549,519,0.974,520,0.974,521,2.197,522,0.974,523,0.974,524,1.549,525,1.659,526,1.59,527,3.387]],["title/classes/BooleanResponse.html",[80,1.398,90,0.008]],["body/classes/BooleanResponse.html",[3,0.13,4,0.13,5,0.13,7,0.187,8,0.679,10,1.375,14,1.042,15,0.894,16,0.894,17,0.594,21,0.863,23,0.504,24,0.017,25,0.605,26,0.884,27,0.388,28,1.365,34,0.942,39,2.11,41,2.591,43,1.734,44,2.509,45,1.375,46,2.653,55,1.361,60,0.742,63,0.742,65,0.261,72,2.375,78,1.667,79,0.71,80,1.487,83,1.994,85,2.037,86,0.813,89,0.51,90,0.014,93,1.09,97,1.55,98,1.623,101,1.555,104,2.372,105,2.82,108,1.952,110,0.71,131,0.01,132,0.007,133,0.004,137,1.467,149,0.594,190,1.791,265,0.742,316,0.622,321,0.65,378,0.71,399,2.447,412,0.813,413,0.71,414,1.952,415,2.773,416,0.813,418,2.216,420,1.505,421,0.742,422,0.777,423,0.894,424,2.509,425,1.432,426,1.791,427,0.894,428,0.852,429,0.813,430,1.707,431,1.422,432,1.291,433,0.894,434,0.742,435,1.434,436,0.68,437,0.813,438,0.742,439,3.077,440,2.355,441,1.918,442,1.505,443,1.505,444,2.639,445,1.876,446,2.448,447,2.153,448,2.513,449,1.952,450,0.813,451,2.355,452,2.609,453,2.391,454,1.432,455,2.564,456,1.365,457,2.486,458,1.505,459,0.94,460,0.94,461,0.94,462,3.234,463,1.883,464,1.883,465,0.94,466,2.355,467,0.94,468,0.94,469,0.852,470,1.505,471,0.94,472,1.505,473,0.94,474,0.94,475,1.505,476,0.94,477,0.94,478,0.94,479,0.94,480,1.883,481,2.513,482,3.281,483,2.964,484,2.391,485,2.355,486,2.135,487,2.742,488,1.883,489,1.883,490,1.883,491,0.94,492,2.153,493,2.153,494,1.505,495,2.153,496,1.505,497,1.505,498,1.505,499,1.505,500,0.94,501,0.94,502,1.505,503,0.94,504,1.505,505,1.505,506,1.189,507,1.189,508,1.302,509,0.94,510,0.94,511,0.94,512,1.505,513,0.94,514,0.94,515,0.94,516,0.94,517,0.94,518,1.505,519,0.94,520,0.94,521,2.153,522,0.94,523,0.94,524,1.505,525,1.422,526,0.998,528,2.056,529,3.138,530,1.592,531,1.592,532,1.454,533,1.592,534,1.454]],["title/interfaces/BooleanResponseData.html",[432,0.909,449,1.604]],["body/interfaces/BooleanResponseData.html",[3,0.135,4,0.135,5,0.135,7,0.194,10,1.402,14,1.076,15,0.93,16,0.93,17,0.386,24,0.017,25,0.543,26,0.87,28,1.408,34,0.878,39,1.938,41,2.592,43,1.747,44,2.54,45,1.402,46,2.662,55,1.592,60,0.772,63,0.772,65,0.27,72,2.396,78,1.696,79,0.739,80,1.526,83,2.025,85,1.672,86,0.846,89,0.513,90,0.015,93,1.107,97,1.566,98,1.642,101,1.574,104,2.406,105,2.851,108,1.996,110,0.739,131,0.01,132,0.007,133,0.004,137,1.492,149,0.613,190,1.839,265,0.772,316,0.642,321,0.671,399,2.44,412,0.846,413,0.739,414,1.996,415,2.783,418,2.238,420,1.554,421,0.772,422,0.808,423,0.93,424,2.53,425,1.478,426,1.839,427,0.93,428,0.887,429,0.846,430,1.752,431,1.46,432,1.313,433,0.93,434,0.772,435,1.463,436,0.707,437,0.846,438,0.772,439,3.075,440,2.402,441,1.625,442,1.554,443,1.554,444,0.978,445,1.845,446,2.214,447,2.201,448,2.557,449,1.752,450,1.904,451,2.201,452,2.646,453,2.433,454,1.478,455,2.598,456,1.408,457,2.522,458,1.554,459,0.978,460,0.978,461,0.978,462,3.258,463,1.933,464,1.933,465,0.978,466,2.402,467,0.978,468,0.978,469,0.887,470,1.554,471,0.978,472,1.554,473,0.978,474,0.978,475,1.554,476,0.978,477,0.978,478,0.978,479,0.978,480,1.933,481,2.557,482,3.304,483,2.997,484,2.433,485,2.402,486,2.177,487,2.781,488,1.933,489,1.933,490,1.933,491,0.978,492,2.201,493,2.201,494,1.554,495,2.201,496,1.554,497,1.554,498,1.554,499,1.554,500,0.978,501,0.978,502,1.554,503,0.978,504,1.554,505,1.554,506,1.227,507,1.227,508,1.344,509,0.978,510,0.978,511,0.978,512,1.554,513,0.978,514,0.978,515,0.978,516,0.978,517,0.978,518,1.554,519,0.978,520,0.978,521,2.201,522,0.978,523,0.978,524,1.554,525,1.46,526,1.03,535,1.15]],["title/components/BreadcrumbComponent.html",[134,0.699,313,1.337]],["body/components/BreadcrumbComponent.html",[3,0.214,4,0.214,5,0.214,7,0.308,8,0.992,10,0.905,14,1.074,17,0.612,21,0.954,23,1.179,24,0.017,25,0.781,26,0.718,27,0.908,33,3.704,34,0.755,43,1.573,50,1.225,51,1.029,57,0.945,65,0.483,66,0.67,73,2.067,74,1.724,89,0.416,90,0.007,91,1.724,97,1.13,98,1.642,101,1.634,104,1.342,119,2.067,131,0.007,132,0.01,133,0.007,134,1.159,135,1.225,136,1.994,137,0.905,138,1.476,139,1.476,140,1.476,142,1.476,143,2.83,144,2.524,145,1.817,147,1.817,149,0.868,152,1.225,188,1.225,215,3.723,222,2.93,226,1.938,227,2.067,236,3.401,265,1.225,266,5.16,269,2.218,276,2.399,281,4.326,284,2.626,287,4.299,289,1.122,290,2.092,291,1.994,292,1.476,293,2.645,294,1.476,312,1.476,313,2.1,314,1.476,315,1.172,316,0.908,317,2.431,318,1.172,319,2.092,320,1.172,321,1.103,322,1.476,323,1.172,324,1.172,325,1.225,326,1.476,327,1.122,328,1.225,329,1.476,330,1.476,331,1.172,332,1.476,333,1.476,334,1.476,393,1.938,400,4.722,413,1.172,416,1.342,432,1.13,441,1.624,536,2.626,537,1.902,538,2.431,539,4.826,540,4.154,541,6.239,542,4.826,543,2.645,544,3.392,545,6.239,546,4.809,547,3.392,548,5.921,549,5.038,550,3.392,551,4.826,552,3.392,553,4.154,554,4.154,555,3.144,556,4.706,557,4.154,558,4.154,559,2.931,560,2.931,561,1.938,562,2.218,563,4.154,564,4.154,565,2.931,566,2.931,567,2.931,568,2.626,569,2.931,570,2.931,571,2.931,572,4.154,573,2.931,574,2.931,575,2.931,576,2.931,577,2.931,578,4.154,579,4.826,580,2.931,581,4.826,582,4.826,583,2.931,584,2.931,585,4.809,586,3.392,587,3.392,588,3.392,589,4.154,590,4.809,591,3.392,592,3.392,593,2.067,594,2.931,595,4.809,596,3.723,597,2.931,598,3.392,599,3.951,600,3.392,601,2.931,602,3.392,603,3.392,604,2.626,605,3.392,606,2.931,607,3.392,608,2.931,609,2.931,610,2.931,611,2.931,612,3.392,613,3.392,614,3.392,615,2.931,616,4.154,617,2.931,618,3.392,619,3.392,620,3.392,621,3.392,622,3.392,623,3.392,624,3.392]],["title/modules/CoreModule.html",[335,1.531,348,2.53]],["body/modules/CoreModule.html",[3,0.294,4,0.294,5,0.294,24,0.017,27,0.881,65,0.619,66,0.921,68,4.03,89,0.319,90,0.01,131,0.01,132,0.012,133,0.01,152,2.802,181,3.612,285,3.05,289,1.542,313,2.681,325,2.802,331,2.681,335,1.845,337,2.133,338,2.509,339,4.004,340,2.842,341,2.842,342,3.339,348,5.178,349,3.633,350,2.509,351,2.665,353,2.509,357,3.207,368,5.15,369,4.03,392,4.217,393,2.665,395,3.299,396,4.03,625,4.03,626,4.03,627,4.03,628,4.665,629,5.962,630,5.962,631,3.612,632,4.665,633,5.15,634,4.03,635,4.665,636,4.665,637,5.15,638,2.842,639,4.665,640,5.15,641,5.15,642,3.612,643,4.665,644,4.03,645,4.03]],["title/classes/DataSourceSubjData.html",[90,0.008,646,1.967]],["body/classes/DataSourceSubjData.html",[3,0.239,4,0.421,5,0.239,7,0.344,8,1.07,17,0.936,21,1.146,23,1.451,24,0.017,25,0.761,26,0.887,27,1.118,30,3.668,34,1.048,38,2.927,39,1.851,41,2.301,43,1.562,46,2.045,50,1.873,51,2.025,54,3.655,55,2.378,57,1.649,65,0.3,72,2.382,78,1.146,83,2.045,89,0.436,90,0.015,93,0.979,97,1.568,98,1.514,101,1.271,120,2.927,131,0.008,132,0.011,133,0.008,149,0.936,195,4.165,227,2.303,350,3.427,378,1.306,399,2.28,413,1.306,414,2.15,415,2.138,416,1.495,418,2.107,424,1.873,435,1.774,441,2.291,445,1.573,446,2.668,455,2.928,456,2.15,469,1.567,486,1.567,646,3.505,647,2.927,648,4.48,649,6.101,650,5.114,651,5.504,652,5.504,653,5.114,654,5.186,655,4.48,656,5.186,657,3.78,658,3.78,659,3.78,660,3.78,661,3.78,662,3.78,663,3.78,664,3.78,665,3.78,666,2.674,667,3.265,668,3.265,669,4.48,670,3.265,671,3.265,672,4.48,673,3.265,674,3.265,675,3.265,676,3.265,677,3.265,678,3.265,679,3.265,680,3.265,681,3.265,682,3.265,683,3.265,684,3.265,685,3.265,686,3.265,687,5.504,688,3.265,689,3.265,690,3.265,691,3.265]],["title/classes/Department.html",[90,0.008,316,0.731]],["body/classes/Department.html",[3,0.349,4,0.349,5,0.349,7,0.503,21,1.114,24,0.017,25,0.912,26,0.912,27,1.252,43,1.625,46,2.29,65,0.527,89,0.454,90,0.011,131,0.012,132,0.014,133,0.012,149,1.197,316,1.389,321,1.401,378,1.913,398,5.018,413,1.913,415,2.394,416,2.19,435,1.542,445,2.152,525,2.597,526,2.011,529,3.374,666,3.916,692,4.783,693,5.537,694,5.537,695,4.783,696,4.287]],["title/components/DepartmentListPage.html",[134,0.699,315,1.337]],["body/components/DepartmentListPage.html",[3,0.198,4,0.198,5,0.198,7,0.285,8,0.938,9,3.403,10,1.565,14,0.993,17,0.821,20,2.824,21,1.152,23,1.526,24,0.017,25,0.985,26,0.913,27,1.176,34,0.921,45,1.427,50,2.248,51,2.12,54,1.594,55,1.768,57,1.633,65,0.545,66,0.619,77,1.791,89,0.215,90,0.009,93,0.859,98,1.163,110,1.57,131,0.007,132,0.009,133,0.007,134,1.059,135,1.133,136,1.885,137,0.837,138,1.365,139,1.365,140,1.365,142,1.365,143,2.794,144,2.534,145,1.717,147,1.717,149,0.821,152,1.133,158,3.825,188,1.133,226,3.825,242,3.955,289,1.037,290,1.978,291,1.885,292,1.365,293,2.551,294,1.365,312,1.365,313,1.083,314,1.365,315,2.026,316,1.373,317,2.327,318,1.083,319,1.978,320,1.083,321,1.056,322,1.365,323,1.083,324,1.083,325,1.133,326,1.365,327,1.037,328,1.133,329,1.365,330,1.365,331,1.083,332,1.365,333,1.365,334,1.365,399,1.768,404,4.14,418,1.939,434,1.642,435,1.266,436,1.503,438,1.642,450,1.798,506,1.133,507,1.133,526,2.08,561,3.825,697,2.709,698,4.619,699,3.927,700,3.496,701,5.347,702,5.347,703,5.347,704,3.496,705,4.619,706,3.496,707,6.038,708,4.736,709,3.927,710,2.709,711,4.055,712,4.619,713,4.546,714,3.927,715,3.136,716,3.927,717,3.136,718,3.927,719,3.136,720,3.927,721,3.136,722,3.573,723,4.546,724,4.546,725,3.136,726,4.147,727,3.136,728,4.546,729,3.136,730,3.136,731,3.136,732,2.972,733,3.556,734,3.955,735,3.927,736,3.927,737,3.136,738,3.927,739,3.136,740,3.136,741,1.791,742,2.218,743,2.709,744,2.428,745,2.218,746,2.709,747,3.136,748,2.709,749,2.709,750,2.709,751,2.709,752,2.709,753,2.709,754,2.709,755,2.709,756,4.14,757,4.619,758,2.709,759,2.709,760,2.709,761,3.136,762,3.136,763,2.709,764,2.709,765,2.709,766,2.709,767,2.709,768,3.136,769,3.136,770,2.709,771,2.709,772,2.709]],["title/modules/DepartmentModule.html",[335,1.531,773,2.737]],["body/modules/DepartmentModule.html",[3,0.303,4,0.303,5,0.303,24,0.017,65,0.624,66,0.948,89,0.329,90,0.01,131,0.01,132,0.013,133,0.01,261,3.719,289,1.588,315,2.617,318,2.617,335,1.9,337,2.196,338,2.583,339,4.059,340,2.927,341,2.927,342,3.385,349,3.701,350,2.583,351,2.743,353,3.267,357,3.267,375,5.247,376,4.149,421,1.735,773,5.534,774,4.149,775,4.149,776,4.149,777,4.149,778,5.094,779,4.493,780,4.803,781,5.247,782,4.803,783,5.247,784,5.247,785,3.719,786,4.149,787,4.803,788,4.803,789,5.247,790,4.149,791,5.247,792,3.14,793,5.247,794,5.247,795,4.149,796,3.719,797,5.247,798,4.149,799,5.247,800,4.149,801,5.247,802,4.149]],["title/components/DepartmentNewPage.html",[134,0.699,318,1.337]],["body/components/DepartmentNewPage.html",[3,0.312,4,0.312,5,0.312,7,0.45,8,1.277,17,1.219,21,0.972,24,0.017,25,0.796,34,0.777,57,1.378,65,0.393,66,0.977,89,0.339,90,0.01,93,1.336,131,0.01,132,0.013,133,0.01,134,1.219,135,1.787,136,2.566,137,1.321,138,2.154,139,2.154,140,2.154,142,2.154,143,2.978,144,2.655,145,2.338,147,2.338,152,1.787,188,1.787,222,3.771,289,1.637,290,2.693,291,2.566,292,2.154,293,3.079,294,2.154,312,2.154,313,1.71,314,2.154,315,1.71,316,1.403,317,2.938,318,2.444,319,2.693,320,1.71,321,1.333,322,2.154,323,1.71,324,1.71,325,1.787,326,2.154,327,1.637,328,1.787,329,2.154,330,2.154,331,1.71,332,2.154,333,2.154,334,2.154,436,2.047,537,2.448,538,2.938,543,3.079,803,4.276,804,5.834,805,5.347,806,4.949,807,4.949]],["title/modules/DepartmentRoutingModule.html",[335,1.531,778,2.53]],["body/modules/DepartmentRoutingModule.html",[3,0.356,4,0.356,5,0.356,24,0.017,33,4.087,65,0.588,66,1.115,89,0.459,90,0.012,93,1.267,101,1.384,131,0.012,132,0.014,133,0.012,134,1.211,315,2.317,318,2.317,337,2.582,342,2.87,353,3.037,357,3.607,391,4.087,392,4.744,393,3.225,399,1.867,400,3.692,778,4.385,808,5.647,809,5.647,810,5.647,811,5.647,812,5.647]],["title/injectables/DepartmentService.html",[0,1.604,711,2.21]],["body/injectables/DepartmentService.html",[0,2.38,1,4.711,2,2.513,3,0.278,4,0.278,5,0.278,7,0.4,8,1.185,9,2.918,10,1.706,17,0.794,21,1.152,23,1.722,24,0.017,25,0.903,26,0.943,27,1.327,31,3.894,34,1.063,35,3.683,44,2.271,45,1.808,50,1.589,51,1.334,54,3.248,60,1.589,63,1.589,65,0.572,66,0.869,69,1.914,77,2.513,79,1.52,80,1.589,81,3.112,87,2.681,88,2.366,89,0.301,90,0.009,91,2.236,93,1.207,97,1.591,131,0.009,132,0.012,133,0.009,149,1.036,195,2.877,316,1.479,429,1.74,430,2.38,441,2.267,711,3.279,813,3.801,814,4.947,815,4.959,816,4.959,817,3.801,818,5.741,819,5.741,820,4.4,821,5.741,822,4.4,823,4.959,824,4.4,825,5.741,826,4.4,827,4.4,828,3.801,829,3.407,830,6.069,831,3.407,832,3.407,833,3.801,834,4.4,835,3.801,836,4.4,837,4.4,838,3.801,839,3.801,840,4.4,841,3.801,842,4.4]],["title/classes/DepartmentsDataSource.html",[90,0.008,726,2.737]],["body/classes/DepartmentsDataSource.html",[3,0.266,4,0.266,5,0.266,7,0.384,8,1.153,10,1.992,17,0.762,20,1.836,21,1.158,23,1.634,24,0.017,25,0.857,26,0.857,27,1.259,31,4.223,34,0.983,35,3.015,45,1.779,50,2.407,51,2.021,57,1.744,65,0.603,69,2.43,72,1.458,74,2.145,77,2.41,89,0.289,90,0.009,91,2.145,93,1.345,97,0.991,131,0.009,132,0.012,133,0.009,149,1.008,316,1.055,378,1.458,431,1.458,441,2.07,445,1.694,525,1.458,537,2.209,646,3.692,711,4.068,726,3.951,741,3.576,742,2.985,744,3.267,745,2.985,829,3.267,843,6.448,844,3.267,845,3.576,846,5.409,847,6.261,848,4.825,849,4.825,850,4.325,851,3.646,852,5.585,853,4.825,854,3.646,855,4.825,856,4.825,857,3.646,858,4.22,859,4.825,860,6.448,861,4.22,862,4.825,863,4.22,864,3.652,865,4.22,866,2.759,867,3.646,868,3.646,869,2.985,870,3.646,871,3.646,872,4.22,873,4.22,874,4.22,875,3.646,876,3.646,877,4.22,878,3.646,879,4.22,880,4.22,881,3.646,882,3.646,883,4.22,884,4.22,885,4.22,886,3.646]],["title/classes/Employee.html",[90,0.008,321,0.764]],["body/classes/Employee.html",[3,0.329,4,0.329,5,0.329,7,0.474,21,1.197,24,0.017,25,0.889,26,0.98,27,1.361,43,1.767,46,2.208,65,0.508,89,0.438,90,0.011,131,0.011,132,0.013,133,0.011,149,1.154,316,1.421,321,1.423,378,1.801,413,1.801,415,2.309,416,2.063,435,2.059,445,2.097,525,2.555,526,1.939,529,3.177,666,3.688,695,4.505,887,4.505,888,5.972,889,5.972,890,5.972,891,5.972,892,5.215,893,6.392,894,5.215,895,5.215,896,5.215,897,5.215,898,5.215,899,5.215]],["title/components/EmployeeEditPage.html",[134,0.699,320,1.337]],["body/components/EmployeeEditPage.html",[3,0.302,4,0.302,5,0.302,7,0.435,8,1.25,17,1.2,21,1.044,24,0.017,25,0.779,26,0.615,34,0.751,57,1.332,65,0.555,66,0.944,89,0.327,90,0.01,131,0.01,132,0.013,133,0.01,134,1.2,135,1.727,136,2.511,137,1.277,138,2.081,139,2.081,140,2.081,142,2.081,143,2.966,144,2.64,145,2.288,147,2.288,149,1.094,152,2.702,158,2.732,173,3.703,176,5.233,179,3.127,182,4.132,183,2.572,184,4.132,185,4.132,188,1.727,289,1.581,290,2.636,291,2.511,292,2.081,293,3.041,294,2.081,312,2.081,313,1.652,314,2.081,315,1.652,316,1.144,317,2.892,318,1.652,319,2.636,320,2.414,321,1.424,322,2.081,323,1.652,324,1.652,325,1.727,326,2.081,327,1.581,328,1.727,329,2.081,330,2.081,331,1.652,332,2.081,333,2.081,334,2.081,537,2.396,538,2.892,543,3.041,708,4.284,900,4.132,901,6.648,902,6.057,903,6.057,904,4.783,905,5.233]],["title/components/EmployeeListPage.html",[134,0.699,323,1.337]],["body/components/EmployeeListPage.html",[3,0.185,4,0.185,5,0.185,7,0.267,8,0.894,9,3.334,10,1.374,14,0.93,17,0.782,21,1.138,23,1.486,24,0.017,25,0.977,26,0.899,27,1.145,34,0.892,45,1.374,50,2.189,51,2.263,54,1.492,55,1.702,57,1.583,65,0.546,66,0.58,77,1.677,89,0.201,90,0.009,93,0.818,98,1.108,110,1.497,131,0.006,132,0.009,133,0.006,134,1.026,135,1.06,136,1.796,137,0.784,138,1.278,139,1.278,140,1.278,142,1.278,143,2.762,144,2.504,145,1.637,147,1.637,149,0.782,152,1.06,158,3.747,188,1.06,226,3.747,242,3.864,269,1.92,289,0.971,290,1.885,291,1.796,292,1.278,293,2.473,294,1.278,312,1.278,313,1.014,314,1.278,315,1.014,316,1.073,317,2.24,318,1.014,319,1.885,320,1.014,321,1.431,322,1.278,323,1.963,324,1.014,325,1.06,326,1.278,327,0.971,328,1.06,329,1.278,330,1.278,331,1.014,332,1.278,333,1.278,334,1.278,398,3.641,399,1.702,418,2.372,434,1.564,435,1.207,436,1.432,438,1.564,450,1.714,506,1.06,507,1.06,526,2.042,561,3.747,698,4.447,699,3.742,700,3.366,704,3.366,705,4.447,706,3.366,707,5.938,708,4.639,709,3.742,711,3.246,712,4.447,714,3.742,716,3.742,718,3.742,720,3.742,722,4.371,732,2.832,733,3.462,734,3.864,735,3.742,736,3.742,738,3.742,741,1.677,742,2.077,743,2.537,745,2.077,746,2.537,748,2.537,749,2.537,750,2.537,751,2.537,752,2.537,753,2.537,754,2.537,755,2.537,756,3.986,757,4.447,758,2.537,759,2.537,760,2.537,763,2.537,764,2.537,765,2.537,766,2.537,767,2.537,770,2.537,771,2.537,772,2.537,888,5.479,889,5.479,891,5.816,906,2.537,907,5.148,908,5.148,909,5.148,910,2.936,911,4.147,912,2.936,913,2.936,914,2.936,915,2.936,916,2.936,917,4.332,918,5.683,919,5.683,920,4.332,921,3.354,922,3.354,923,2.936,924,2.936,925,4.019,926,2.936,927,3.742,928,2.936,929,2.936,930,2.936,931,2.936,932,2.936,933,2.936,934,2.537,935,2.936,936,2.936,937,2.936,938,2.936,939,2.936,940,2.936]],["title/modules/EmployeeModule.html",[335,1.531,941,2.737]],["body/modules/EmployeeModule.html",[3,0.311,4,0.311,5,0.311,24,0.017,65,0.605,66,0.974,89,0.338,90,0.01,131,0.01,132,0.013,133,0.01,289,1.632,320,2.631,323,2.631,324,2.631,328,2.681,335,1.952,337,2.257,338,2.654,339,4.109,340,3.007,341,3.007,342,3.428,349,3.764,350,2.654,351,2.819,353,3.323,357,3.323,779,4.524,781,5.337,783,5.337,784,5.337,785,3.821,786,4.263,941,5.618,942,4.263,943,4.263,944,4.263,945,4.263,946,5.112,947,4.935,948,4.263,949,4.263,950,4.263,951,4.935,952,4.935,953,3.821,954,4.935]],["title/components/EmployeeNewPage.html",[134,0.699,324,1.337]],["body/components/EmployeeNewPage.html",[3,0.316,4,0.316,5,0.316,7,0.455,8,1.286,17,1.226,21,0.979,24,0.017,25,0.802,34,0.786,57,1.395,65,0.398,66,0.989,89,0.343,90,0.01,93,1.177,131,0.01,132,0.013,133,0.01,134,1.226,135,1.808,136,2.585,137,1.337,138,2.179,139,2.179,140,2.179,142,2.179,143,2.981,144,2.661,145,2.355,147,2.355,152,1.808,188,1.808,289,1.656,290,2.713,291,2.585,292,2.179,293,3.091,294,2.179,312,2.179,313,1.73,314,2.179,315,1.73,316,1.177,317,2.954,318,1.73,319,2.713,320,1.73,321,1.443,322,2.179,323,1.73,324,2.454,325,1.808,326,2.179,327,1.656,328,1.808,329,2.179,330,2.179,331,1.73,332,2.179,333,2.179,334,2.179,537,2.466,538,2.954,543,3.091,804,5.865,805,5.386,905,5.386,955,4.326,956,5.008,957,5.008]],["title/modules/EmployeeRoutingModule.html",[335,1.531,946,2.53]],["body/modules/EmployeeRoutingModule.html",[3,0.347,4,0.347,5,0.347,24,0.017,33,4.311,65,0.596,66,1.086,89,0.452,90,0.011,93,1.247,101,1.349,131,0.011,132,0.014,133,0.011,134,1.277,320,2.281,323,2.281,324,2.281,337,2.516,342,2.796,353,2.959,357,3.551,391,4.023,392,4.67,393,3.142,399,2.183,400,4.317,708,4.67,946,4.317,948,4.752,949,4.752,950,4.752,958,5.501,959,5.501,960,5.501]],["title/injectables/EmployeeService.html",[0,1.604,911,2.53]],["body/injectables/EmployeeService.html",[0,2.38,1,4.711,2,2.513,3,0.278,4,0.278,5,0.278,7,0.4,8,1.185,9,2.918,10,1.706,17,0.794,21,1.152,23,1.722,24,0.017,25,0.903,26,0.943,27,1.327,31,3.894,34,1.063,35,3.683,44,2.271,45,1.808,50,1.589,51,1.334,54,3.248,60,1.589,63,1.589,65,0.572,66,0.869,69,1.914,77,2.513,79,1.52,80,1.589,81,3.112,87,2.681,88,2.366,89,0.301,90,0.009,91,2.236,93,1.207,97,1.591,131,0.009,132,0.012,133,0.009,149,1.036,195,2.877,321,1.546,429,1.74,430,2.38,441,2.267,696,3.407,814,4.947,815,4.959,816,4.959,817,3.801,823,4.959,828,3.801,830,6.069,831,3.407,832,3.407,833,3.801,835,3.801,838,3.801,839,4.959,841,3.801,911,3.754,961,3.801,962,5.741,963,5.741,964,4.4,965,5.741,966,4.4,967,4.4,968,5.741,969,4.4,970,4.4,971,5.741,972,4.4,973,4.4]],["title/classes/EmployeesDataSource.html",[90,0.008,925,2.737]],["body/classes/EmployeesDataSource.html",[3,0.258,4,0.258,5,0.258,7,0.372,8,1.129,10,2.018,17,0.988,20,1.781,21,1.15,23,1.614,24,0.017,25,0.846,26,0.846,27,1.243,31,4.181,34,0.968,35,2.969,45,1.757,50,2.377,51,1.997,57,1.717,65,0.605,69,2.381,72,1.414,74,2.08,77,2.338,89,0.28,90,0.008,93,1.333,97,0.962,131,0.009,132,0.011,133,0.009,149,0.988,316,1.034,321,1.081,378,1.414,398,2.895,404,3.169,431,1.414,433,1.781,441,2.052,445,1.66,526,1.242,537,2.165,646,3.664,696,3.169,711,4.033,741,3.522,742,2.895,744,3.169,745,2.895,829,3.169,844,3.169,845,3.522,846,5.327,848,4.728,849,4.728,850,4.238,851,3.536,853,4.728,854,3.536,855,4.728,856,4.728,857,3.536,859,4.728,860,6.409,862,4.728,864,3.579,866,2.676,867,4.728,868,3.536,870,3.536,871,3.536,875,3.536,876,3.536,878,3.536,881,3.536,882,3.536,886,3.536,890,3.536,911,4.714,925,3.871,934,3.536,974,6.409,975,6.166,976,5.473,977,4.093,978,4.093,979,4.093,980,4.093,981,4.093,982,4.093,983,4.093,984,4.093,985,4.093,986,4.093,987,4.093,988,4.093,989,4.093,990,4.093,991,4.093]],["title/classes/EntityPostRequest.html",[60,1.398,90,0.008]],["body/classes/EntityPostRequest.html",[3,0.134,4,0.134,5,0.134,7,0.193,10,1.396,14,1.069,15,1.469,16,0.923,17,0.609,21,0.53,23,0.52,24,0.017,25,0.616,26,0.868,27,0.401,28,1.399,34,0.875,39,1.934,41,2.588,43,1.744,44,2.533,45,1.396,46,2.66,55,1.116,60,1.219,63,0.766,65,0.268,72,2.391,78,1.895,79,0.733,80,1.219,83,2.018,85,1.663,86,0.839,89,0.512,90,0.015,93,1.103,97,1.563,98,1.638,101,1.57,104,2.399,105,2.845,108,1.987,110,0.733,131,0.01,132,0.007,133,0.004,137,1.487,149,0.609,190,2.085,265,0.766,316,0.637,321,0.666,378,0.733,399,2.457,412,0.839,413,0.733,414,1.987,415,2.786,416,0.839,418,2.233,420,1.544,421,0.766,422,0.801,423,0.923,424,2.5,425,1.469,426,1.829,427,0.923,428,0.879,429,0.839,430,1.743,431,1.452,432,1.229,433,0.923,434,0.766,435,1.457,436,0.701,437,0.839,438,0.766,439,3.07,440,2.392,441,1.619,442,1.544,443,1.544,444,0.97,445,1.839,446,2.207,447,2.191,448,2.548,449,1.399,450,0.839,451,2.392,452,2.639,453,2.424,454,1.469,455,2.591,456,1.399,457,2.514,458,1.544,459,0.97,460,0.97,461,0.97,462,3.253,463,1.922,464,1.922,465,0.97,466,2.392,467,0.97,468,0.97,469,0.879,470,1.544,471,0.97,472,1.544,473,0.97,474,0.97,475,1.544,476,0.97,477,0.97,478,0.97,479,0.97,480,1.922,481,2.548,482,3.299,483,2.99,484,2.424,485,2.392,486,2.169,487,2.773,488,1.922,489,1.922,490,1.922,491,0.97,492,2.191,493,2.191,494,1.544,495,2.191,496,1.544,497,1.544,498,1.544,499,1.544,500,0.97,501,0.97,502,1.544,503,0.97,504,1.544,505,1.544,506,1.219,507,1.219,508,1.335,509,0.97,510,0.97,511,0.97,512,1.544,513,0.97,514,0.97,515,0.97,516,0.97,517,0.97,518,1.544,519,0.97,520,0.97,521,2.191,522,0.97,523,0.97,524,1.922,525,1.452,526,1.024,992,3.375]],["title/classes/EntityPutRequest.html",[63,1.398,90,0.008]],["body/classes/EntityPutRequest.html",[3,0.134,4,0.134,5,0.134,7,0.193,10,1.396,14,1.069,15,0.923,16,1.469,17,0.609,21,0.53,23,0.52,24,0.017,25,0.616,26,0.868,27,0.401,28,1.399,34,0.875,39,1.934,41,2.588,43,1.744,44,2.533,45,1.396,46,2.66,55,1.116,60,0.766,63,1.219,65,0.268,72,2.391,78,1.69,79,0.733,80,1.219,83,2.018,85,1.663,86,0.839,89,0.512,90,0.015,93,1.103,97,1.563,98,1.638,101,1.57,104,2.399,105,2.845,108,1.987,110,0.733,131,0.01,132,0.007,133,0.004,137,1.487,149,0.609,190,2.085,265,0.766,316,0.637,321,0.666,378,0.733,399,2.457,412,0.839,413,0.733,414,1.987,415,2.786,416,0.839,418,2.233,420,1.544,421,0.766,422,0.801,423,0.923,424,2.5,425,1.469,426,1.829,427,0.923,428,0.879,429,0.839,430,1.743,431,1.452,432,1.229,433,0.923,434,0.766,435,1.457,436,0.701,437,0.839,438,0.766,439,3.07,440,2.392,441,1.619,442,1.544,443,1.544,444,0.97,445,1.839,446,2.207,447,2.191,448,2.548,449,1.399,450,0.839,451,2.392,452,2.639,453,2.424,454,1.469,455,2.591,456,1.399,457,2.514,458,1.544,459,0.97,460,0.97,461,0.97,462,3.253,463,1.922,464,1.922,465,0.97,466,2.392,467,0.97,468,0.97,469,0.879,470,1.544,471,0.97,472,1.544,473,0.97,474,0.97,475,1.544,476,0.97,477,0.97,478,0.97,479,0.97,480,1.922,481,2.548,482,3.299,483,2.99,484,2.424,485,2.392,486,2.169,487,2.773,488,1.922,489,1.922,490,1.922,491,0.97,492,2.191,493,2.191,494,1.544,495,2.191,496,1.544,497,1.544,498,1.544,499,1.544,500,0.97,501,0.97,502,1.544,503,0.97,504,1.544,505,1.544,506,1.219,507,1.219,508,1.335,509,0.97,510,0.97,511,0.97,512,1.544,513,0.97,514,0.97,515,0.97,516,0.97,517,0.97,518,1.544,519,0.97,520,0.97,521,2.191,522,0.97,523,0.97,524,1.922,525,1.925,526,1.024,993,3.375]],["title/classes/ErrorResponse.html",[85,1.531,90,0.008]],["body/classes/ErrorResponse.html",[3,0.133,4,0.133,5,0.133,7,0.192,8,0.693,10,1.392,14,1.063,15,0.917,16,0.917,17,0.606,21,0.657,23,0.517,24,0.017,25,0.614,26,0.867,27,0.398,28,1.392,34,0.915,39,2.08,41,2.585,43,1.742,44,2.529,45,1.392,46,2.659,55,1.111,60,0.761,63,0.761,65,0.267,72,2.388,78,1.685,79,0.728,80,1.213,83,2.014,85,1.889,86,0.834,89,0.512,90,0.015,93,1.101,97,1.56,98,1.635,101,1.567,104,2.394,105,2.84,108,1.98,110,0.728,131,0.01,132,0.007,133,0.004,137,1.483,149,0.606,190,1.822,265,0.761,316,0.634,321,0.663,378,0.728,399,2.423,412,0.834,413,0.728,414,2.162,415,2.779,416,0.834,418,2.23,420,1.536,421,0.761,422,0.796,423,0.917,424,2.522,425,1.461,426,1.822,427,0.917,428,0.874,429,0.834,430,1.736,431,1.446,432,1.225,433,0.917,434,0.761,435,1.452,436,0.697,437,0.834,438,0.761,439,3.092,440,2.385,441,1.759,442,1.915,443,1.536,444,2.184,445,1.835,446,2.202,447,2.184,448,2.541,449,1.392,450,0.834,451,2.184,452,2.633,453,2.417,454,1.461,455,2.585,456,1.392,457,2.509,458,1.536,459,0.964,460,0.964,461,0.964,462,3.25,463,1.915,464,1.915,465,0.964,466,2.385,467,0.964,468,0.964,469,0.874,470,1.536,471,0.964,472,1.536,473,0.964,474,0.964,475,1.536,476,0.964,477,0.964,478,0.964,479,0.964,480,1.915,481,2.541,482,3.296,483,2.985,484,2.417,485,2.385,486,2.162,487,2.767,488,1.915,489,1.915,490,1.915,491,0.964,492,2.184,493,2.184,494,1.536,495,2.184,496,1.536,497,1.536,498,1.536,499,1.536,500,0.964,501,0.964,502,1.536,503,0.964,504,1.536,505,1.536,506,1.213,507,1.213,508,1.328,509,0.964,510,0.964,511,0.964,512,1.536,513,0.964,514,0.964,515,0.964,516,0.964,517,0.964,518,1.536,519,0.964,520,0.964,521,2.184,522,0.964,523,0.964,524,1.536,525,1.446,526,1.019,994,3.358,995,2.108]],["title/components/FooterComponent.html",[134,0.699,325,1.398]],["body/components/FooterComponent.html",[3,0.263,4,0.263,5,0.263,7,0.378,8,1.142,17,1.123,21,0.869,24,0.017,25,0.712,34,0.654,57,1.159,65,0.44,66,0.822,89,0.285,90,0.009,98,1.065,115,2.945,131,0.009,132,0.012,133,0.009,134,1.123,135,1.504,136,2.295,137,1.111,138,1.811,139,1.811,140,1.811,142,1.811,143,2.915,144,2.619,145,2.091,147,2.091,152,1.504,188,1.504,204,4.734,238,5.961,265,1.504,268,5.373,269,2.722,271,3.597,273,3.223,276,3.915,281,3.223,284,5.493,285,4.512,286,3.597,287,3.915,289,1.377,290,2.409,291,2.295,292,1.811,293,2.884,294,1.811,312,1.811,313,1.438,314,1.811,315,1.438,316,1.045,317,2.706,318,1.438,319,2.409,320,1.438,321,1.228,322,1.811,323,1.438,324,1.438,325,2.394,326,1.811,327,1.377,328,1.504,329,1.811,330,1.811,331,1.438,332,1.811,333,1.811,334,1.811,537,2.19,538,2.706,543,2.884,589,4.782,593,2.537,594,4.782,596,4.286,597,3.597,599,4.881,604,3.223,606,3.597,608,5.373,609,3.597,610,3.597,611,3.597,615,3.597,617,3.597,722,3.789,927,3.597,996,3.597,997,6.219,998,5.536,999,4.163,1000,4.163,1001,5.536,1002,4.688,1003,7.095,1004,5.536,1005,4.782,1006,5.536,1007,5.536,1008,5.536,1009,4.163,1010,4.163,1011,5.373,1012,5.536,1013,5.536,1014,4.163,1015,4.163,1016,3.597,1017,4.163,1018,3.597,1019,6.219,1020,4.163,1021,4.163,1022,4.163,1023,4.163,1024,5.536,1025,4.163,1026,4.163,1027,4.163,1028,4.782,1029,4.163,1030,4.163,1031,4.163,1032,3.597,1033,4.163,1034,4.163,1035,4.163]],["title/interfaces/IBreadCrumb.html",[432,0.909,549,2.737]],["body/interfaces/IBreadCrumb.html",[3,0.281,4,0.281,5,0.281,7,0.405,10,1.188,14,1.41,24,0.017,26,0.744,33,4.145,43,1.804,65,0.51,66,0.879,73,2.712,74,2.262,89,0.466,90,0.009,91,2.262,97,1.359,101,1.772,104,1.761,119,2.712,131,0.009,132,0.012,133,0.009,134,1.16,143,1.682,144,1.538,145,1.682,147,1.682,149,1.044,215,3.447,227,3.525,266,4.975,313,1.538,393,2.543,400,4.726,413,1.538,432,1.51,441,1.294,535,2.394,536,3.447,537,1.761,538,2.517,539,3.846,540,3.846,541,5.877,542,3.846,543,1.937,545,5.877,548,6.445,549,5.112,551,4.997,553,4.997,554,4.997,555,3.782,556,5.698,557,4.997,558,4.997,559,3.846,560,3.846,561,2.543,562,2.911,563,4.997,564,4.997,565,3.846,566,3.846,567,3.846,568,3.447,569,3.846,570,3.846,571,3.846,572,4.997,573,3.846,574,3.846,575,3.846,576,3.846,577,3.846,578,4.997,579,5.552,580,3.846,581,5.552,582,3.846,583,3.846,584,3.846]],["title/interfaces/IToast.html",[183,2.081,432,0.909]],["body/interfaces/IToast.html",[3,0.442,4,0.339,5,0.339,7,0.488,24,0.017,26,0.936,27,1.229,39,1.891,43,1.88,89,0.498,101,1.317,131,0.011,132,0.014,133,0.011,149,1.175,183,3.501,188,2.629,189,5.149,428,2.227,431,2.515,432,1.529,435,1.496,526,2.208,535,2.889,593,4.436,1036,3.512,1037,4.76,1038,5.149,1039,4.603,1040,4.64,1041,4.255,1042,4.603,1043,3.512,1044,4.158,1045,4.158,1046,4.158]],["title/interfaces/ItemAction.html",[432,0.909,733,2.21]],["body/interfaces/ItemAction.html",[3,0.239,4,0.239,5,0.239,7,0.345,9,1.927,14,1.201,20,2.58,24,0.017,25,0.82,26,0.762,35,2.503,43,1.844,45,1.583,51,1.15,57,1.777,65,0.593,66,0.749,69,1.65,73,2.311,74,1.927,78,1.15,89,0.406,90,0.008,91,1.927,93,0.982,97,1.622,98,1.632,101,0.93,110,1.31,119,3.887,131,0.008,132,0.011,133,0.008,134,0.938,143,1.433,144,1.31,145,1.433,147,1.433,149,0.938,163,3.676,179,2.48,186,2.682,226,2.166,242,3.887,280,2.682,327,1.254,418,1.719,421,1.37,422,1.433,432,1.221,434,1.37,435,1.056,436,1.719,437,1.5,438,1.37,445,1.15,506,1.37,507,1.37,508,1.5,535,2.04,537,1.5,538,2.262,543,1.65,555,3.398,561,3.387,562,2.48,638,2.311,646,3.014,700,2.48,704,2.48,706,2.48,722,2.311,732,2.48,733,3.644,734,3.887,741,3.387,792,2.48,845,2.969,864,2.48,866,2.48,869,2.682,1002,2.682,1047,2.682,1048,5.473,1049,4.024,1050,4.024,1051,2.936,1052,4.024,1053,4.024,1054,4.024,1055,4.024,1056,4.024,1057,2.936,1058,4.024,1059,4.024,1060,2.936,1061,4.592,1062,2.936,1063,4.024,1064,2.936,1065,2.936,1066,2.936,1067,2.936,1068,2.936,1069,2.936,1070,2.936,1071,2.936,1072,4.024,1073,2.936,1074,2.936,1075,2.936,1076,2.936,1077,2.936,1078,2.936,1079,2.936,1080,2.936,1081,4.024,1082,2.936,1083,4.024,1084,2.936,1085,2.936,1086,2.936,1087,2.936,1088,2.936,1089,2.936,1090,2.936,1091,2.936,1092,2.936,1093,4.592,1094,4.024,1095,2.936,1096,2.936,1097,2.936,1098,2.936,1099,2.936,1100,4.024,1101,4.024,1102,2.936,1103,2.936,1104,2.936,1105,2.936,1106,2.936,1107,2.936,1108,2.936,1109,4.024,1110,2.936,1111,2.936,1112,2.936,1113,2.936,1114,2.936,1115,4.024,1116,4.024,1117,2.936,1118,2.936,1119,2.936,1120,2.936,1121,2.936,1122,2.936,1123,2.936]],["title/components/ListComponent.html",[134,0.699,327,1.28]],["body/components/ListComponent.html",[3,0.134,4,0.134,5,0.134,7,0.193,8,0.697,9,1.079,14,0.672,17,0.383,20,2.425,21,1.157,23,1.283,24,0.017,25,0.824,26,0.915,27,0.989,34,1.006,35,1.627,41,1.22,43,1.656,45,1.28,50,1.22,51,1.276,57,1.784,65,0.529,66,0.419,69,0.924,73,1.294,74,1.079,78,0.644,89,0.288,90,0.004,91,1.079,93,0.795,97,1.309,98,1.227,101,0.521,110,0.734,119,2.922,131,0.004,132,0.007,133,0.004,134,0.76,135,0.767,136,1.401,137,0.567,138,0.924,139,0.924,140,0.924,142,0.924,143,2.586,144,2.259,145,1.276,147,1.276,149,0.61,152,0.767,173,3.257,179,1.389,186,1.502,188,0.767,204,5.052,208,3.713,222,2.922,226,1.93,227,2.059,236,1.502,242,3.809,243,3.713,248,2.919,250,2.919,258,2.919,265,1.22,269,1.389,273,2.616,274,2.616,280,4.135,289,0.702,290,1.47,291,1.401,292,0.924,293,2.086,294,0.924,312,0.924,313,0.734,314,0.924,315,0.734,316,0.795,317,1.831,318,0.734,319,1.47,320,0.734,321,0.831,322,0.924,323,0.734,324,0.734,325,0.767,326,0.924,327,1.586,328,0.767,329,0.924,330,0.924,331,0.734,332,0.924,333,0.924,334,0.924,418,1.586,421,0.767,422,0.802,432,0.794,434,0.767,435,0.941,436,1.117,437,0.84,438,0.767,445,0.644,484,1.47,506,0.767,507,0.767,508,0.84,526,0.644,537,1.336,538,1.831,543,2.086,555,2.209,556,2.616,561,2.403,562,1.389,593,1.294,596,3.713,599,2.976,601,1.835,604,3.257,638,1.294,646,2.138,700,3.422,704,3.422,706,2.751,710,1.835,722,1.294,732,3.822,733,2.99,734,2.563,741,2.99,792,1.389,796,2.616,845,2.403,864,1.389,866,1.389,869,1.502,921,2.616,922,2.616,1002,4.532,1011,1.835,1018,1.835,1047,1.502,1048,4.84,1049,3.257,1050,3.257,1051,1.644,1052,3.257,1053,3.257,1054,2.616,1055,3.257,1056,3.257,1057,4.052,1058,4.526,1059,3.257,1060,1.644,1061,4.316,1062,1.644,1063,2.616,1064,1.644,1065,2.616,1066,3.257,1067,3.257,1068,3.257,1069,2.616,1070,3.257,1071,2.616,1072,3.713,1073,2.616,1074,3.257,1075,2.616,1076,3.257,1077,3.257,1078,1.644,1079,1.644,1080,1.644,1081,2.616,1082,1.644,1083,2.616,1084,1.644,1085,1.644,1086,1.644,1087,1.644,1088,3.713,1089,4.526,1090,1.644,1091,1.644,1092,1.644,1093,3.257,1094,2.616,1095,1.644,1096,1.644,1097,3.713,1098,1.644,1099,2.616,1100,2.616,1101,2.616,1102,3.713,1103,1.644,1104,1.644,1105,1.644,1106,1.644,1107,1.644,1108,3.713,1109,2.616,1110,1.644,1111,1.644,1112,1.644,1113,1.644,1114,2.616,1115,3.713,1116,2.616,1117,1.644,1118,1.644,1119,4.316,1120,1.644,1121,2.616,1122,1.644,1123,3.713,1124,3.378,1125,3.378,1126,3.378,1127,3.378,1128,3.378,1129,3.378,1130,3.378,1131,2.124,1132,1.644,1133,2.124,1134,2.124,1135,2.124,1136,2.124,1137,2.124,1138,2.124,1139,2.124,1140,2.124,1141,2.124,1142,2.124,1143,2.124,1144,2.124,1145,2.124,1146,2.124,1147,2.124,1148,2.124,1149,2.124,1150,2.124,1151,2.124,1152,2.124,1153,2.124,1154,2.124,1155,2.919,1156,4.816,1157,2.124,1158,3.378,1159,2.919,1160,3.378,1161,3.378,1162,3.378,1163,3.378,1164,3.378,1165,3.378,1166,3.378,1167,3.378,1168,3.378,1169,2.124,1170,2.124,1171,2.124,1172,3.378,1173,3.378,1174,3.378,1175,5.574,1176,3.378,1177,2.124,1178,3.378,1179,3.378,1180,3.378,1181,2.39,1182,3.378,1183,2.124,1184,3.378,1185,3.378,1186,3.378,1187,3.713,1188,3.378,1189,2.124,1190,6.756,1191,4.795,1192,3.378,1193,4.795,1194,4.795,1195,4.795,1196,5.574,1197,3.378,1198,4.795,1199,3.378,1200,6.756,1201,3.378,1202,2.124,1203,3.378,1204,2.124,1205,3.378,1206,2.124,1207,3.378,1208,2.124,1209,3.378,1210,3.378,1211,3.378,1212,3.378,1213,3.378,1214,2.124,1215,3.378,1216,1.835,1217,3.378,1218,3.378,1219,2.124,1220,2.124,1221,2.124,1222,2.124,1223,2.124,1224,2.124,1225,2.124,1226,2.124,1227,2.124,1228,2.124,1229,2.124,1230,2.124,1231,3.378,1232,2.124,1233,2.124,1234,2.124,1235,2.124]],["title/interfaces/ListDataSource.html",[432,0.909,845,2.21]],["body/interfaces/ListDataSource.html",[3,0.238,4,0.238,5,0.238,7,0.343,8,1.068,9,1.917,14,1.194,20,2.573,21,0.592,23,0.925,24,0.017,25,0.666,26,0.666,27,0.712,34,0.592,35,3.065,43,1.762,45,1.781,51,1.144,57,1.773,65,0.592,66,0.745,69,1.641,73,2.298,74,1.917,78,1.144,89,0.405,90,0.008,91,1.917,93,0.978,97,1.619,98,1.628,101,0.925,110,1.303,119,3.878,131,0.008,132,0.011,133,0.008,134,0.935,143,1.425,144,1.303,145,1.425,147,1.425,149,0.935,179,2.466,186,2.668,226,2.154,242,2.298,280,2.668,327,1.247,418,1.712,421,1.362,422,1.425,431,1.303,432,1.216,434,1.362,435,1.05,436,1.712,437,1.492,438,1.362,445,1.571,506,1.362,507,1.362,508,1.492,535,2.029,537,1.492,538,2.253,543,1.641,555,3.386,561,3.378,562,2.466,638,2.298,646,3.502,700,2.466,704,2.466,706,2.466,722,2.298,732,2.466,733,3.378,734,2.298,741,3.636,792,2.466,845,3.378,850,4.009,864,3.386,866,2.466,869,2.668,1002,2.668,1047,2.668,1048,5.465,1049,4.009,1050,4.009,1051,2.92,1052,4.009,1053,4.009,1054,4.009,1055,4.009,1056,4.009,1057,2.92,1058,4.009,1059,4.009,1060,2.92,1061,4.578,1062,2.92,1063,4.009,1064,2.92,1065,2.92,1066,2.92,1067,2.92,1068,2.92,1069,2.92,1070,2.92,1071,2.92,1072,4.009,1073,2.92,1074,2.92,1075,2.92,1076,2.92,1077,2.92,1078,2.92,1079,2.92,1080,2.92,1081,4.009,1082,2.92,1083,4.009,1084,2.92,1085,2.92,1086,2.92,1087,2.92,1088,2.92,1089,2.92,1090,2.92,1091,2.92,1092,2.92,1093,4.578,1094,4.009,1095,2.92,1096,2.92,1097,2.92,1098,2.92,1099,2.92,1100,4.009,1101,4.009,1102,2.92,1103,2.92,1104,2.92,1105,2.92,1106,2.92,1107,2.92,1108,2.92,1109,4.009,1110,2.92,1111,2.92,1112,2.92,1113,2.92,1114,2.92,1115,4.009,1116,4.009,1117,2.92,1118,2.92,1119,2.92,1120,2.92,1121,2.92,1122,2.92,1123,2.92,1236,3.771]],["title/injectables/LoggerService.html",[0,1.604,1237,2.996]],["body/injectables/LoggerService.html",[0,2.77,2,3.204,3,0.354,4,0.354,5,0.354,7,0.51,8,1.379,21,1.049,23,1.638,24,0.017,25,0.859,26,0.859,27,1.262,34,1.049,39,1.942,43,1.877,57,1.861,65,0.446,66,1.108,87,3.418,88,3.017,89,0.384,90,0.012,131,0.012,132,0.014,133,0.012,1237,5.173,1238,4.846,1239,6.681,1240,6.681,1241,5.609,1242,6.681,1243,6.681,1244,5.609,1245,5.609,1246,5.609]],["title/components/ModalDeleteComponent.html",[134,0.699,328,1.398]],["body/components/ModalDeleteComponent.html",[3,0.308,4,0.308,5,0.308,7,0.444,8,1.267,9,3.12,17,1.212,21,0.964,24,0.017,25,0.789,34,0.767,57,1.361,65,0.388,66,0.965,89,0.334,90,0.01,131,0.01,132,0.013,133,0.01,134,1.212,135,1.764,136,2.545,137,1.304,138,2.126,139,2.126,140,2.126,142,2.126,143,2.973,144,2.684,145,2.319,147,2.319,152,1.764,188,1.764,222,3.741,289,1.615,290,2.671,291,2.545,292,2.126,293,3.064,294,2.126,312,2.126,313,1.688,314,2.126,315,1.688,316,1.159,317,2.921,318,1.688,319,2.671,320,1.688,321,1.326,322,2.126,323,1.688,324,1.688,325,1.764,326,2.126,327,1.615,328,2.543,329,3.361,330,2.126,331,1.688,332,2.126,333,2.126,334,2.126,537,2.428,538,2.921,543,3.064,953,5.198,1247,5.799,1248,4.221,1249,6.713,1250,6.139,1251,4.886,1252,4.886]],["title/classes/ModelMap.html",[83,1.337,90,0.008]],["body/classes/ModelMap.html",[3,0.252,4,0.384,5,0.252,7,0.362,8,1.11,17,0.971,21,1.068,23,1.492,24,0.017,25,0.782,26,0.838,27,1.149,30,2.821,34,0.844,38,3.088,39,1.563,41,2.456,43,1.809,46,2.421,51,1.976,54,3.311,55,2.012,57,1.814,65,0.317,72,2.6,78,1.21,83,2.421,89,0.446,90,0.014,93,1.016,97,1.598,98,1.376,101,1.319,120,3.088,131,0.008,132,0.011,133,0.008,149,0.971,163,2.821,195,4.259,227,2.43,350,2.145,378,1.378,399,2.012,413,1.378,414,1.653,415,2.531,416,1.577,418,2.317,424,1.44,435,1.111,441,2.187,445,1.846,446,2.299,455,2.523,456,2.23,469,1.653,486,2.23,646,3.093,647,3.088,648,3.445,649,5.257,650,3.445,651,3.445,652,3.445,653,3.445,655,3.445,666,2.821,667,4.646,668,4.646,669,5.627,670,3.445,671,3.445,672,4.646,673,5.257,674,5.257,675,4.646,676,5.257,677,5.257,678,4.646,679,5.257,680,3.445,681,3.445,682,4.646,683,3.445,684,3.445,685,3.445,686,3.445,687,5.627,688,3.445,689,3.445,690,3.445,691,3.445,1253,3.988,1254,3.988,1255,3.988,1256,3.988,1257,3.988,1258,3.988,1259,3.988,1260,3.988,1261,3.445,1262,3.988]],["title/classes/ModelResponse.html",[79,1.337,90,0.008]],["body/classes/ModelResponse.html",[3,0.102,4,0.102,5,0.102,7,0.147,8,0.559,10,1.732,14,0.858,15,0.705,16,0.705,17,0.489,21,1.019,23,1.59,24,0.017,25,0.822,26,0.938,27,1.032,28,1.124,34,0.986,39,2.023,41,2.624,43,1.795,44,2.734,45,1.644,46,2.693,50,0.979,51,0.822,55,0.896,60,0.586,63,0.586,65,0.215,72,2.465,78,1.489,79,0.936,80,0.979,83,2.024,85,1.796,86,0.641,89,0.493,90,0.014,93,0.984,97,1.446,98,1.54,101,1.437,104,2.161,105,2.896,108,1.883,110,0.56,131,0.011,132,0.006,133,0.003,137,1.31,149,0.489,190,1.52,265,0.586,316,0.512,321,0.535,378,0.56,399,2.488,412,0.641,413,1.887,414,1.692,415,2.81,416,0.641,418,2.247,420,1.24,421,0.586,422,0.613,423,0.705,424,2.548,425,1.179,426,1.52,427,0.705,428,0.672,429,0.641,430,2.035,431,1.696,432,1.067,433,0.705,434,0.586,435,1.521,436,0.536,437,0.641,438,0.586,439,3.186,440,2.077,441,1.955,442,1.24,443,1.24,444,2.383,445,1.722,446,2.274,447,1.867,448,2.245,449,1.124,450,0.641,451,2.077,452,2.861,453,2.619,454,1.179,455,2.649,456,1.124,457,2.789,458,2.077,459,0.741,460,0.741,461,1.24,462,3.077,463,1.867,464,2.245,465,1.24,466,3.044,467,1.597,468,1.597,469,0.672,470,1.597,471,1.597,472,1.24,473,0.741,474,0.741,475,1.597,476,1.597,477,0.741,478,0.741,479,0.741,480,2.245,481,2.816,482,3.426,483,3.135,484,2.679,485,2.68,486,2.495,487,2.922,488,2.245,489,2.245,490,2.245,491,1.597,492,1.867,493,1.867,494,1.24,495,1.867,496,1.24,497,1.24,498,1.24,499,1.24,500,0.741,501,0.741,502,1.24,503,0.741,504,1.24,505,1.24,506,0.979,507,0.979,508,1.072,509,0.741,510,1.597,511,0.741,512,1.24,513,0.741,514,0.741,515,0.741,516,0.741,517,0.741,518,1.867,519,1.24,520,1.597,521,1.867,522,0.741,523,0.741,524,1.24,525,1.207,526,0.822,529,2.767,530,1.255,531,1.255,532,1.147,533,1.255,534,1.147,1263,2.711,1264,2.711,1265,1.621,1266,1.621,1267,1.621,1268,1.621,1269,1.621,1270,1.621,1271,1.621,1272,1.621,1273,1.621,1274,1.621,1275,1.621,1276,1.621,1277,1.621,1278,1.621,1279,1.621,1280,1.621]],["title/components/NotFoundComponent.html",[134,0.699,331,1.337]],["body/components/NotFoundComponent.html",[3,0.296,4,0.296,5,0.296,7,0.426,8,1.234,17,1.189,21,0.939,24,0.017,25,0.769,34,0.736,39,1.739,41,2.161,57,1.306,65,0.373,66,0.926,89,0.321,90,0.01,131,0.01,132,0.013,133,0.01,134,1.189,135,1.694,136,2.48,137,1.252,138,2.041,139,2.041,140,2.041,142,2.041,143,2.959,144,2.668,145,2.26,147,2.26,152,1.694,188,1.694,204,3.912,206,3.632,208,4.632,265,2.161,287,3.318,289,1.551,290,2.603,291,2.48,292,2.041,293,3.019,294,2.041,312,2.041,313,1.62,314,2.041,315,1.62,316,1.13,317,2.866,318,1.62,319,2.603,320,1.62,321,1.301,322,2.041,323,1.62,324,1.62,325,1.694,326,2.041,327,1.551,328,1.694,329,2.041,330,2.041,331,2.397,332,2.041,333,2.041,334,2.041,395,4.659,410,5.994,436,1.978,537,2.367,538,2.866,543,3.019,1155,5.168,1156,5.168,1159,5.168,1181,4.232,1281,5.691,1282,4.052,1283,6.588,1284,5.983,1285,4.69,1286,4.69,1287,5.983,1288,6.938,1289,5.983,1290,6.588,1291,5.983,1292,4.69]],["title/interfaces/QueryOptions.html",[45,1.033,432,0.909]],["body/interfaces/QueryOptions.html",[3,0.131,4,0.131,5,0.131,7,0.189,10,1.381,14,1.05,15,0.903,16,0.903,17,0.375,24,0.017,25,0.533,26,0.918,27,1.249,28,1.375,34,0.866,39,1.922,41,2.578,43,1.801,44,2.516,45,1.473,46,2.655,55,1.096,60,0.749,63,0.749,65,0.263,72,2.38,78,1.673,79,0.717,80,1.198,83,2.001,85,1.639,86,0.821,89,0.511,90,0.014,93,1.094,97,1.554,98,1.627,101,1.56,104,2.38,105,2.827,108,1.962,110,1.635,131,0.01,132,0.007,133,0.004,137,1.473,149,0.599,190,1.802,265,0.749,316,0.626,321,0.655,399,2.417,412,0.821,413,0.717,414,1.962,415,2.775,418,2.221,420,1.516,421,0.749,422,0.784,423,0.903,424,2.488,425,1.802,426,2.059,427,0.903,428,0.86,429,0.821,430,1.962,431,1.635,432,1.296,433,2.059,434,1.709,435,1.728,436,1.565,437,1.872,438,1.709,439,3.057,440,2.366,441,1.603,442,1.516,443,1.516,444,0.949,445,1.825,446,2.188,447,2.164,448,2.523,449,1.375,450,0.821,451,2.164,452,2.618,453,2.4,454,1.443,455,2.572,456,1.375,457,2.494,458,1.516,459,0.949,460,0.949,461,0.949,462,3.24,463,1.894,464,1.894,465,0.949,466,2.366,467,0.949,468,0.949,469,0.86,470,1.516,471,0.949,472,1.516,473,0.949,474,0.949,475,1.516,476,0.949,477,0.949,478,0.949,479,0.949,480,1.894,481,2.523,482,3.287,483,2.971,484,2.4,485,2.366,486,2.145,487,2.751,488,1.894,489,1.894,490,1.894,491,0.949,492,2.164,493,2.164,494,1.516,495,2.164,496,1.516,497,1.516,498,1.516,499,1.516,500,0.949,501,0.949,502,1.516,503,0.949,504,1.516,505,1.516,506,1.198,507,1.198,508,1.312,509,0.949,510,0.949,511,0.949,512,1.516,513,0.949,514,0.949,515,0.949,516,0.949,517,0.949,518,1.516,519,0.949,520,0.949,521,2.164,522,0.949,523,0.949,524,1.516,525,1.431,526,1.006,535,1.116,1132,2.567]],["title/classes/RawResponse.html",[86,1.531,90,0.008]],["body/classes/RawResponse.html",[3,0.128,4,0.128,5,0.128,7,0.185,8,0.674,10,1.368,14,1.034,15,0.885,16,0.885,17,0.589,21,0.902,23,0.499,24,0.017,25,0.602,26,0.891,27,0.384,28,1.695,34,0.938,39,2.107,41,2.587,43,1.73,44,2.501,45,1.368,46,2.65,50,0.735,51,0.617,55,1.08,60,0.735,63,0.735,65,0.259,72,2.37,78,1.659,79,0.703,80,1.179,83,1.985,85,2.027,86,1.292,89,0.51,90,0.014,93,1.085,97,1.546,98,1.653,101,1.55,104,2.363,105,2.811,108,1.94,110,0.703,131,0.01,132,0.007,133,0.004,137,1.46,149,0.589,190,1.779,265,0.735,316,0.617,321,0.645,378,0.703,399,2.443,412,0.805,413,0.703,414,1.94,415,2.77,416,0.805,418,2.21,420,1.493,421,0.735,422,0.769,423,0.885,424,2.504,425,1.421,426,1.779,427,0.885,428,0.844,429,0.805,430,1.695,431,1.413,432,1.204,433,0.885,434,0.735,435,1.664,436,0.673,437,0.805,438,0.735,439,3.071,440,2.343,441,1.97,442,1.493,443,1.493,444,2.628,445,1.869,446,2.441,447,2.14,448,2.501,449,1.354,450,0.805,451,2.343,452,2.682,453,2.599,454,1.421,455,2.772,456,1.354,457,2.477,458,1.493,459,0.931,460,0.931,461,0.931,462,3.228,463,1.87,464,1.87,465,0.931,466,2.343,467,0.931,468,0.931,469,0.844,470,1.493,471,0.931,472,1.493,473,0.931,474,0.931,475,1.493,476,0.931,477,0.931,478,0.931,479,0.931,480,1.87,481,2.501,482,3.276,483,2.955,484,2.38,485,2.343,486,2.124,487,2.732,488,1.87,489,1.87,490,1.87,491,0.931,492,2.14,493,2.14,494,1.493,495,2.14,496,1.493,497,1.493,498,1.493,499,1.493,500,0.931,501,0.931,502,1.493,503,0.931,504,1.493,505,1.493,506,1.179,507,1.179,508,1.292,509,0.931,510,0.931,511,0.931,512,1.493,513,0.931,514,0.931,515,0.931,516,0.931,517,0.931,518,1.493,519,0.931,520,0.931,521,2.14,522,0.931,523,0.931,524,1.493,525,1.413,526,0.99,529,3.122,530,1.576,531,1.576,532,1.439,533,1.576,534,1.439,1293,3.265]],["title/classes/ServerResponse.html",[90,0.008,446,1.462]],["body/classes/ServerResponse.html",[3,0.131,4,0.131,5,0.131,7,0.189,8,0.686,10,1.383,14,1.053,15,0.906,16,0.906,17,0.6,21,0.745,23,0.51,24,0.017,25,0.61,26,0.876,27,0.393,28,1.379,34,0.911,39,2.06,41,2.628,43,1.738,44,2.519,45,1.383,46,2.656,55,1.1,60,0.752,63,0.752,65,0.264,72,2.382,78,1.676,79,0.719,80,1.201,83,2.004,85,2.186,86,0.824,89,0.511,90,0.014,93,1.095,97,1.555,98,1.629,101,1.561,104,2.383,105,2.83,108,1.966,110,0.719,131,0.01,132,0.007,133,0.004,137,1.475,149,0.6,190,2.063,265,0.752,316,0.628,321,0.657,378,0.719,399,2.46,412,0.824,413,0.719,414,2.149,415,2.776,416,0.824,418,2.223,420,1.521,421,0.752,422,0.787,423,0.906,424,2.516,425,1.447,426,2.063,427,0.906,428,0.863,429,0.824,430,1.722,431,1.434,432,1.218,433,0.906,434,0.752,435,1.444,436,0.688,437,0.824,438,0.752,439,3.085,440,2.37,441,1.851,442,1.899,443,1.521,444,2.168,445,1.884,446,2.276,447,2.168,448,2.527,449,1.379,450,0.824,451,2.168,452,2.621,453,2.404,454,1.447,455,2.575,456,1.379,457,2.498,458,1.521,459,0.952,460,0.952,461,0.952,462,3.242,463,1.899,464,1.899,465,0.952,466,2.37,467,0.952,468,0.952,469,0.863,470,1.521,471,0.952,472,1.521,473,0.952,474,0.952,475,1.521,476,0.952,477,0.952,478,0.952,479,0.952,480,1.899,481,2.527,482,3.289,483,2.974,484,2.404,485,2.37,486,2.149,487,2.755,488,1.899,489,1.899,490,1.899,491,0.952,492,2.168,493,2.168,494,1.521,495,2.168,496,1.521,497,1.521,498,1.521,499,1.521,500,0.952,501,0.952,502,1.521,503,0.952,504,1.521,505,1.521,506,1.201,507,1.201,508,1.316,509,0.952,510,0.952,511,0.952,512,1.521,513,0.952,514,0.952,515,0.952,516,0.952,517,0.952,518,1.521,519,0.952,520,0.952,521,2.168,522,0.952,523,0.952,524,1.521,525,1.434,526,1.009,529,2.026,532,1.473,534,1.473,1294,3.326]],["title/modules/SharedModule.html",[335,1.531,779,2.358]],["body/modules/SharedModule.html",[3,0.311,4,0.311,5,0.311,24,0.017,65,0.629,66,0.972,89,0.337,90,0.01,131,0.01,132,0.013,133,0.01,181,3.81,285,3.217,289,1.627,327,2.584,335,1.947,337,2.25,338,2.647,339,4.104,340,2.998,341,2.998,342,3.423,349,3.758,350,2.647,351,2.811,353,2.647,357,3.317,360,5.327,361,4.251,365,5.327,366,4.251,421,1.777,633,5.327,634,4.251,637,5.819,638,2.998,640,5.819,641,5.819,642,3.81,779,4.587,789,5.327,790,4.251,791,5.327,792,3.217,793,5.327,794,5.327,795,4.251,796,3.81,797,5.327,798,4.251,799,5.327,800,4.251,801,5.327,802,4.251,1295,4.251,1296,4.251,1297,4.251,1298,4.921,1299,4.921,1300,6.167,1301,4.921]],["title/components/ToastComponent.html",[134,0.699,152,1.398]],["body/components/ToastComponent.html",[3,0.337,4,0.249,5,0.249,7,0.358,8,1.101,17,0.712,21,1.064,23,1.308,24,0.017,25,0.834,26,0.834,27,1.008,34,0.838,39,1.146,57,1.685,65,0.481,66,0.778,89,0.27,90,0.008,131,0.008,132,0.011,133,0.008,134,1.092,135,1.424,136,2.212,137,1.052,138,1.715,139,1.715,140,1.715,142,1.715,143,2.893,144,2.594,145,2.016,147,2.016,149,0.963,152,2.341,183,3.756,188,2.623,204,4.566,206,3.052,222,3.251,243,4.132,276,4.585,289,1.303,290,2.322,291,2.212,292,1.715,293,2.821,294,1.715,312,1.715,313,1.362,314,1.715,315,1.362,316,1.008,317,2.632,318,1.362,319,2.322,320,1.362,321,1.195,322,1.715,323,1.362,324,1.362,325,1.424,326,1.715,327,1.303,328,1.424,329,1.715,330,1.715,331,1.362,332,1.715,333,1.715,334,1.715,363,3.405,364,6.033,441,2.111,537,2.111,538,2.632,543,2.821,599,5.264,616,6.36,734,3.251,1039,2.788,1041,2.577,1042,2.788,1302,3.405,1303,5.336,1304,5.336,1305,6.05,1306,5.336,1307,6.983,1308,5.336,1309,3.942,1310,6.774,1311,5.336,1312,3.942,1313,5.336,1314,3.942,1315,3.942,1316,3.942,1317,3.942,1318,3.942,1319,3.942,1320,3.942,1321,3.942,1322,3.942,1323,3.942,1324,3.942,1325,3.942,1326,3.942,1327,5.336,1328,6.774,1329,6.483,1330,3.942,1331,6.483,1332,3.942,1333,5.336,1334,3.942,1335,3.942,1336,3.942,1337,3.942,1338,3.942,1339,3.942]],["title/interfaces/ToastOptions.html",[432,0.909,1037,2.53]],["body/interfaces/ToastOptions.html",[3,0.446,4,0.346,5,0.346,7,0.498,24,0.017,26,0.846,27,1.384,39,1.913,43,1.838,89,0.501,101,1.342,131,0.011,132,0.014,133,0.011,149,1.189,183,2.944,188,2.646,189,3.872,428,2.27,431,1.891,432,1.547,435,1.967,526,1.66,535,2.944,593,3.336,1036,3.579,1037,4.617,1038,4.657,1039,5.301,1040,6.329,1041,4.305,1042,4.657,1043,3.579,1044,4.238,1045,4.238,1046,4.238]],["title/injectables/ToastService.html",[0,1.604,158,2.21]],["body/injectables/ToastService.html",[0,2.221,2,2.265,3,0.383,4,0.25,5,0.25,7,0.36,8,1.105,10,1.62,17,1.095,20,1.725,21,1.17,23,1.664,24,0.017,25,0.873,26,0.873,27,1.282,30,4.948,34,1.142,35,2.922,39,1.557,43,1.888,50,1.432,51,1.203,57,2.094,65,0.516,66,0.783,69,1.725,87,2.416,88,2.132,89,0.271,90,0.008,93,1.012,97,1.425,98,1.014,101,1.313,131,0.008,132,0.011,133,0.008,149,0.967,158,3.06,183,2.881,188,1.935,189,4.948,264,3.425,431,2.719,526,1.203,593,3.96,1037,5.057,1038,4.596,1041,3.503,1043,2.592,1261,5.864,1340,3.425,1341,6.498,1342,6.498,1343,6.498,1344,5.357,1345,5.357,1346,3.965,1347,5.357,1348,3.965,1349,3.965,1350,3.965,1351,5.357,1352,3.965,1353,5.357,1354,3.965,1355,5.357,1356,3.965,1357,5.357,1358,3.965,1359,3.965,1360,3.965,1361,3.965,1362,3.965,1363,3.965,1364,3.965,1365,3.965,1366,5.357,1367,6.068,1368,3.965,1369,3.425,1370,3.965,1371,3.965,1372,3.965,1373,3.965,1374,3.965,1375,6.498,1376,3.965,1377,3.965,1378,3.965,1379,3.965,1380,5.357,1381,3.965,1382,5.357,1383,3.965,1384,5.357,1385,3.965]],["title/injectables/UtilsService.html",[0,1.604,20,1.684]],["body/injectables/UtilsService.html",[0,2.66,2,2.997,3,0.331,4,0.331,5,0.331,7,0.477,8,1.324,10,1.85,17,1.251,20,2.792,21,1.134,23,1.286,24,0.017,25,0.675,26,0.675,27,0.991,31,3.197,34,0.824,50,2.317,51,1.946,54,3.765,55,2.292,57,1.461,65,0.588,66,1.036,69,2.283,78,1.591,79,1.813,81,4.538,83,1.813,87,3.197,88,2.822,89,0.359,90,0.011,93,1.212,131,0.011,132,0.013,133,0.011,149,1.158,422,1.982,441,2.19,450,2.075,457,2.175,525,1.813,814,5.367,831,4.968,832,4.968,1386,4.533,1387,6.416,1388,6.416,1389,5.247,1390,5.247,1391,5.247]],["title/changelog.html",[1392,2.117,1393,2.117,1394,3.237]],["body/changelog.html",[24,0.015,131,0.013,132,0.015,133,0.013]],["title/contributing.html",[1392,2.117,1393,2.117,1395,3.237]],["body/contributing.html",[24,0.015,131,0.013,132,0.015,133,0.013]],["title/coverage.html",[1396,4.553]],["body/coverage.html",[0,2.92,1,2.654,5,0.256,6,3.507,20,1.766,24,0.017,26,0.522,45,1.083,60,1.466,63,1.466,75,4.214,78,1.231,79,1.402,80,1.466,83,1.402,85,1.606,86,1.606,90,0.016,93,0.767,98,2.042,131,0.008,132,0.011,133,0.008,134,1.373,135,1.466,141,3.507,152,1.466,158,2.319,163,2.871,183,2.183,274,3.143,313,1.402,315,1.402,316,0.767,318,1.402,320,1.402,321,0.802,323,1.402,324,1.402,325,1.466,327,1.342,328,1.466,331,1.402,377,3.143,379,3.507,395,2.871,412,2.986,432,1.69,446,1.534,449,1.683,525,1.402,536,4.214,549,2.871,631,3.143,646,2.063,647,4.214,692,3.507,697,3.507,711,2.319,726,2.871,733,2.319,803,3.507,813,3.507,843,3.507,844,4.214,845,2.319,887,3.507,900,3.507,906,3.507,911,2.654,921,3.143,922,4.214,925,2.871,953,3.143,955,3.507,961,3.507,974,3.507,996,3.507,1036,4.015,1037,2.654,1043,2.654,1047,4.343,1181,3.85,1216,3.507,1237,3.143,1238,3.507,1247,3.507,1248,3.507,1281,3.507,1282,3.507,1302,3.507,1340,3.507,1386,3.507,1396,3.507,1397,4.059,1398,4.059,1399,4.059,1400,7.406,1401,4.059,1402,5.443,1403,5.443,1404,6.14,1405,6.14,1406,3.507,1407,7.043,1408,6.14,1409,5.443,1410,4.059,1411,6.14,1412,5.443,1413,4.702,1414,5.443,1415,5.443,1416,4.059,1417,4.059,1418,5.443,1419,4.059,1420,4.059,1421,5.443,1422,6.842,1423,4.059,1424,4.059,1425,5.443,1426,5.443,1427,4.059,1428,3.507,1429,3.507,1430,4.702,1431,3.507,1432,3.507,1433,4.059]],["title/dependencies.html",[338,2.502,1434,3.237]],["body/dependencies.html",[24,0.017,66,1.079,69,2.378,131,0.011,132,0.014,133,0.011,285,3.574,338,2.94,355,5.682,356,4.652,393,3.122,568,4.232,638,3.33,642,4.232,785,4.232,1187,4.232,1435,5.465,1436,7.762,1437,5.465,1438,6.577,1439,5.465,1440,5.465,1441,5.465,1442,5.465,1443,5.465,1444,5.465,1445,5.465,1446,5.465,1447,5.465,1448,5.465,1449,5.465,1450,5.465,1451,5.465,1452,5.465,1453,5.465,1454,5.465,1455,5.465,1456,5.465,1457,5.465,1458,5.465,1459,5.465,1460,5.465,1461,4.722,1462,5.465,1463,5.465,1464,5.465,1465,5.465,1466,5.465,1467,5.465,1468,5.465,1469,5.465]],["title/miscellaneous/enumerations.html",[1470,1.741,1471,4.018]],["body/miscellaneous/enumerations.html",[3,0.431,7,0.528,24,0.016,39,1.982,51,2.34,131,0.012,132,0.014,133,0.012,188,2.698,316,1.288,321,1.347,412,2.298,423,2.528,424,2.098,425,2.528,426,2.528,427,2.528,429,2.698,1036,3.799,1038,4.825,1041,4.46,1042,4.825,1470,3.125,1471,5.02,1472,5.02,1473,5.02]],["title/miscellaneous/functions.html",[1470,1.741,1474,4.018]],["body/miscellaneous/functions.html",[7,0.555,23,1.496,24,0.015,25,0.785,26,0.785,27,1.152,131,0.013,132,0.015,133,0.013,631,5.434,644,5.271,645,5.271,1406,5.271,1470,3.282,1474,5.271,1475,6.102,1476,7.018]],["title/index.html",[7,0.294,1392,2.117,1393,2.117]],["body/index.html",[4,0.339,24,0.014,25,0.691,93,1.014,131,0.011,132,0.014,133,0.011,134,1.264,144,1.855,351,3.068,385,4.64,424,2.35,1005,6.05,1016,6.289,1187,5.938,1461,6.05,1477,5.371,1478,6.508,1479,5.371,1480,5.371,1481,5.371,1482,5.371,1483,7.456,1484,5.371,1485,5.371,1486,5.371,1487,5.371,1488,5.371,1489,5.371,1490,5.371,1491,5.371,1492,5.371,1493,5.371,1494,7.003,1495,7.003,1496,5.371,1497,7.456,1498,5.371,1499,5.371,1500,5.371,1501,5.371,1502,5.371,1503,5.371,1504,4.64,1505,6.508,1506,6.508,1507,7.279,1508,5.371,1509,6.508,1510,6.508,1511,5.371,1512,5.371,1513,5.371,1514,7.003,1515,5.371,1516,5.371,1517,5.371,1518,5.371]],["title/license.html",[1392,2.117,1393,2.117,1519,3.237]],["body/license.html",[24,0.015,131,0.013,132,0.015,133,0.013]],["title/modules.html",[337,2.41]],["body/modules.html",[24,0.014,131,0.012,132,0.014,133,0.012,336,4.152,337,2.685,347,3.838,348,3.838,356,5.401,773,4.152,778,3.838,779,3.577,941,4.152,946,3.838,1520,7.636,1521,7.636,1522,7.858,1523,7.272,1524,7.272]],["title/overview.html",[1525,4.553]],["body/overview.html",[2,2.614,24,0.017,131,0.01,132,0.012,133,0.01,135,2.675,136,1.898,152,2.675,289,1.513,313,2.559,315,2.25,318,2.25,320,2.25,323,2.25,324,2.25,325,2.675,327,2.449,328,2.352,331,2.559,335,1.811,336,5.362,337,2.093,338,2.462,339,2.789,340,2.789,341,2.789,342,2.326,343,3.954,344,3.954,345,3.954,346,3.954,347,4.258,348,5.124,349,3.589,350,2.462,351,2.614,378,1.581,391,2.789,535,2.462,625,3.954,626,3.954,627,3.954,773,5.443,774,3.954,775,3.954,776,3.954,777,3.954,778,4.843,779,4.513,941,5.543,942,3.954,943,3.954,944,3.954,945,3.954,946,4.843,1028,3.954,1032,3.954,1181,3.237,1295,3.954,1296,3.954,1297,3.954,1369,3.954,1413,3.954,1525,3.954,1526,4.577]],["title/routes.html",[391,3.211]],["body/routes.html",[24,0.015,131,0.013,132,0.015,133,0.013,391,3.821]],["title/todo.html",[756,2.507,1392,2.117,1393,2.117]],["body/todo.html",[24,0.015,131,0.013,132,0.015,133,0.013]],["title/miscellaneous/typealiases.html",[1470,1.741,1527,4.651]],["body/miscellaneous/typealiases.html",[7,0.542,24,0.016,26,0.941,28,2.472,46,2.06,131,0.012,132,0.014,133,0.012,412,2.359,415,2.153,424,2.501,439,3.013,452,2.595,453,3.013,454,3.013,457,2.871,1470,3.207,1472,5.983,1528,5.963]],["title/miscellaneous/variables.html",[1470,1.741,1529,4.018]],["body/miscellaneous/variables.html",[7,0.509,24,0.017,26,0.97,50,2.666,51,2.239,75,5.715,96,4.336,108,2.956,115,4.721,131,0.012,132,0.014,133,0.012,1036,3.662,1039,3.961,1043,4.364,1044,4.336,1045,4.336,1046,4.336,1132,4.336,1428,4.838,1429,4.838,1430,4.838,1431,5.766,1432,5.766,1470,3.012,1473,4.838,1504,5.766,1529,4.838,1530,6.674,1531,5.6,1532,5.6,1533,5.6,1534,5.6,1535,5.6,1536,5.6]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["0.2.2",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":607,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["0/1",{"_index":1407,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1421,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1409,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1408,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":1025,"title":{},"body":{"components/FooterComponent.html":{}}}],["0x3",{"_index":1371,"title":{},"body":{"injectables/ToastService.html":{}}}],["0x8",{"_index":1372,"title":{},"body":{"injectables/ToastService.html":{}}}],["1",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["1.1.11",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":598,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["1/1",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1419,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1412,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1405,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1415,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1414,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1418,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":921,"title":{},"body":{"components/EmployeeListPage.html":{},"components/ListComponent.html":{},"coverage.html":{}}}],["10/16",{"_index":1417,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/ListComponent.html":{},"coverage.html":{}}}],["12",{"_index":1181,"title":{},"body":{"components/ListComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["12(*ngif='listfilter.searchcolumns",{"_index":1157,"title":{},"body":{"components/ListComponent.html":{}}}],["12(*ngif=\\'listfilter.searchcolumns",{"_index":1223,"title":{},"body":{"components/ListComponent.html":{}}}],["12.container__col",{"_index":1174,"title":{},"body":{"components/ListComponent.html":{}}}],["14",{"_index":1413,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16",{"_index":1369,"title":{},"body":{"injectables/ToastService.html":{},"overview.html":{}}}],["17",{"_index":918,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["1px",{"_index":609,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["2",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["2.0.0",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["2.0.31",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["20px",{"_index":1292,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["22",{"_index":920,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["25",{"_index":922,"title":{},"body":{"components/EmployeeListPage.html":{},"components/ListComponent.html":{},"coverage.html":{}}}],["2px",{"_index":602,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["3",{"_index":1173,"title":{},"body":{"components/ListComponent.html":{}}}],["3/6",{"_index":1420,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["3d3d3d",{"_index":1337,"title":{},"body":{"components/ToastComponent.html":{}}}],["3f51b5",{"_index":1332,"title":{},"body":{"components/ToastComponent.html":{}}}],["4",{"_index":728,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["4.14.149",{"_index":1448,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["4.41.10",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":723,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["404",{"_index":1290,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["40px",{"_index":1196,"title":{},"body":{"components/ListComponent.html":{}}}],["4cbb68",{"_index":1335,"title":{},"body":{"components/ToastComponent.html":{}}}],["4xxx",{"_index":1363,"title":{},"body":{"injectables/ToastService.html":{}}}],["5",{"_index":927,"title":{},"body":{"components/EmployeeListPage.html":{},"components/FooterComponent.html":{}}}],["50",{"_index":1411,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1046,"title":{},"body":{"interfaces/IToast.html":{},"interfaces/ToastOptions.html":{},"miscellaneous/variables.html":{}}}],["5em",{"_index":1023,"title":{},"body":{"components/FooterComponent.html":{}}}],["5px",{"_index":595,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["6",{"_index":1032,"title":{},"body":{"components/FooterComponent.html":{},"overview.html":{}}}],["6.5.4",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["6.8.0",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":724,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["62",{"_index":1416,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":603,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["7",{"_index":1028,"title":{},"body":{"components/FooterComponent.html":{},"overview.html":{}}}],["7.0.0",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1526,"title":{},"body":{"overview.html":{}}}],["84px",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["8em",{"_index":1034,"title":{},"body":{"components/FooterComponent.html":{}}}],["8px",{"_index":1026,"title":{},"body":{"components/FooterComponent.html":{}}}],["9",{"_index":917,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["9.0.0",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1481,"title":{},"body":{"index.html":{}}}],["9.0.7",{"_index":1436,"title":{},"body":{"dependencies.html":{}}}],["9.1.3",{"_index":1438,"title":{},"body":{"dependencies.html":{}}}],["a(mat",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["a(target=\"_blank",{"_index":1003,"title":{},"body":{"components/FooterComponent.html":{}}}],["a:last",{"_index":1035,"title":{},"body":{"components/FooterComponent.html":{}}}],["absolute",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["abstract",{"_index":440,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["action",{"_index":734,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ToastComponent.html":{}}}],["action.icon",{"_index":1209,"title":{},"body":{"components/ListComponent.html":{}}}],["action.name",{"_index":1210,"title":{},"body":{"components/ListComponent.html":{}}}],["actions",{"_index":732,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["actions]='listitemactions",{"_index":763,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["actions]=\\'listitemactions",{"_index":770,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["activatedroute",{"_index":545,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["active",{"_index":590,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["actual_component",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["add",{"_index":707,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["add(event",{"_index":714,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["adding",{"_index":758,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["afterviewinit",{"_index":1049,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["age",{"_index":888,"title":{},"body":{"classes/Employee.html":{},"components/EmployeeListPage.html":{}}}],["aliases",{"_index":1528,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1013,"title":{},"body":{"components/FooterComponent.html":{}}}],["angular",{"_index":1005,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1437,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":866,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["angular/cdk/layout",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["angular/common",{"_index":638,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":1439,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/core",{"_index":1064,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["angular/core",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":642,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":785,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":634,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":800,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/divider",{"_index":802,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":795,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":798,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":1301,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/paginator",{"_index":792,"title":{},"body":{"modules/DepartmentModule.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/DepartmentModule.html":{}}}],["angular/material/sidenav",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"components/ToastComponent.html":{}}}],["angular/material/sort",{"_index":421,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"modules/DepartmentModule.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{}}}],["angular/material/table",{"_index":790,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["angular/platform",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"interfaces/IBreadCrumb.html":{},"dependencies.html":{}}}],["api",{"_index":426,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/enumerations.html":{}}}],["api.interface",{"_index":666,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"classes/Employee.html":{},"classes/ModelMap.html":{}}}],["api.service",{"_index":828,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["api_uris",{"_index":429,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/enumerations.html":{}}}],["api_uris.department",{"_index":834,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["api_uris.department}/${department.id",{"_index":842,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["api_uris.employee",{"_index":839,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["api_uris.employee}/${department.id",{"_index":836,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["api_uris.employee}/${employee.id",{"_index":971,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["api_url",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiqueryfilter",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["apiqueryfilter[paramkey",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"coverage.html":{}}}],["app",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["app.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.pug",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["app_routes",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":135,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance=\"outline",{"_index":1162,"title":{},"body":{"components/ListComponent.html":{}}}],["appmodule",{"_index":336,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":377,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":347,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{}}}],["aria",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["array",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["array/modelmap",{"_index":519,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["arrayresponsedata",{"_index":470,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["arrayresponsedata[0].map((values",{"_index":473,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["arrvalue",{"_index":683,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["arrvalue.map((item",{"_index":685,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["artifacts",{"_index":1498,"title":{},"body":{"index.html":{}}}],["async",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["attr.role]=\"(ishandset",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["auto",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["automatically",{"_index":1488,"title":{},"body":{"index.html":{}}}],["available",{"_index":1524,"title":{},"body":{"modules.html":{}}}],["b",{"_index":1172,"title":{},"body":{"components/ListComponent.html":{}}}],["background",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{},"components/ToastComponent.html":{}}}],["bar",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"components/ToastComponent.html":{}}}],["base",{"_index":414,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["baseentitymodel",{"_index":78,"title":{"classes/BaseEntityModel.html":{}},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["baseidmodel",{"_index":525,"title":{"classes/BaseIdModel.html":{}},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/Department.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["baseidmodel:382",{"_index":695,"title":{},"body":{"classes/Department.html":{},"classes/Employee.html":{}}}],["behaviorsubject",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"injectables/UtilsService.html":{}}}],["behaviorsubject(false",{"_index":831,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"injectables/UtilsService.html":{}}}],["beta.29",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{}}}],["body).pipe",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{}}}],["bold",{"_index":1033,"title":{},"body":{"components/FooterComponent.html":{}}}],["boolean",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/UtilsService.html":{}}}],["booleanresponse",{"_index":80,"title":{"classes/BooleanResponse.html":{}},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"coverage.html":{}}}],["booleanresponse(response.data",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{}}}],["booleanresponsedata",{"_index":449,"title":{"interfaces/BooleanResponseData.html":{}},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"coverage.html":{}}}],["bootstrap",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":608,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["bourbon",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["bp(xs",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["breadcrumb",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BreadcrumbComponent.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"interfaces/IBreadCrumb.html":{}}}],["breadcrumb'},{'name",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["breadcrumb.component.pug",{"_index":540,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["breadcrumb.component.scss",{"_index":539,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["breadcrumb.hidden",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["breadcrumb.label",{"_index":582,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["breadcrumb/breadcrumb.component",{"_index":639,"title":{},"body":{"modules/CoreModule.html":{}}}],["breadcrumbcomponent",{"_index":313,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["breadcrumbs",{"_index":541,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["breakpoint",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["breakpointobserver",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["breakpoints",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":1522,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":386,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1497,"title":{},"body":{"index.html":{}}}],["buildbreadcrumb",{"_index":542,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["buildbreadcrumb(route",{"_index":547,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["button",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/ListComponent.html":{},"components/ToastComponent.html":{}}}],["button(mat",{"_index":1175,"title":{},"body":{"components/ListComponent.html":{}}}],["button(type='button",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["button(type=\\'button",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["c",{"_index":1366,"title":{},"body":{"injectables/ToastService.html":{}}}],["calc",{"_index":1194,"title":{},"body":{"components/ListComponent.html":{}}}],["callbackfn",{"_index":678,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["callbackfn.call(thisarg",{"_index":681,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["card.mat",{"_index":1159,"title":{},"body":{"components/ListComponent.html":{},"components/NotFoundComponent.html":{}}}],["carefully",{"_index":489,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["catcherror",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{}}}],["catcherror((err",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{}}}],["cccccc",{"_index":1334,"title":{},"body":{"components/ToastComponent.html":{}}}],["cell",{"_index":1200,"title":{},"body":{"components/ListComponent.html":{}}}],["cell(*matcelldef=\"let",{"_index":1198,"title":{},"body":{"components/ListComponent.html":{}}}],["cell(*matheadercelldef",{"_index":1191,"title":{},"body":{"components/ListComponent.html":{}}}],["center",{"_index":1018,"title":{},"body":{"components/FooterComponent.html":{},"components/ListComponent.html":{}}}],["change",{"_index":1490,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":1394,"title":{"changelog.html":{}},"body":{}}],["check",{"_index":1517,"title":{},"body":{"index.html":{}}}],["child",{"_index":615,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["child::after",{"_index":621,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["class",{"_index":90,"title":{"classes/AppPage.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["class='actions",{"_index":1203,"title":{},"body":{"components/ListComponent.html":{}}}],["class=\\'actions",{"_index":1231,"title":{},"body":{"components/ListComponent.html":{}}}],["classes",{"_index":378,"title":{},"body":{"classes/AppPage.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"overview.html":{}}}],["clear",{"_index":1341,"title":{},"body":{"injectables/ToastService.html":{}}}],["cli",{"_index":1461,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["click)='action.action($event",{"_index":1208,"title":{},"body":{"components/ListComponent.html":{}}}],["click)='drawer.toggle",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["click)='mainbutton.action($event",{"_index":1177,"title":{},"body":{"components/ListComponent.html":{}}}],["click)='toggle",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["click)=\\'action.action($event",{"_index":1234,"title":{},"body":{"components/ListComponent.html":{}}}],["click)=\\'drawer.toggle",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["click)=\\'mainbutton.action($event",{"_index":1227,"title":{},"body":{"components/ListComponent.html":{}}}],["click)=\\'toggle",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["client",{"_index":1477,"title":{},"body":{"index.html":{}}}],["close",{"_index":1045,"title":{},"body":{"interfaces/IToast.html":{},"interfaces/ToastOptions.html":{},"miscellaneous/variables.html":{}}}],["close_str",{"_index":1044,"title":{},"body":{"interfaces/IToast.html":{},"interfaces/ToastOptions.html":{},"miscellaneous/variables.html":{}}}],["closestring",{"_index":1040,"title":{},"body":{"interfaces/IToast.html":{},"interfaces/ToastOptions.html":{}}}],["cluster_appmodule",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":625,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":626,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":627,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_departmentmodule",{"_index":774,"title":{},"body":{"modules/DepartmentModule.html":{},"overview.html":{}}}],["cluster_departmentmodule_declarations",{"_index":775,"title":{},"body":{"modules/DepartmentModule.html":{},"overview.html":{}}}],["cluster_departmentmodule_exports",{"_index":777,"title":{},"body":{"modules/DepartmentModule.html":{},"overview.html":{}}}],["cluster_departmentmodule_imports",{"_index":776,"title":{},"body":{"modules/DepartmentModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":942,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_declarations",{"_index":943,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_exports",{"_index":945,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_imports",{"_index":944,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1295,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1296,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1297,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":1492,"title":{},"body":{"index.html":{}}}],["col",{"_index":484,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/ListComponent.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["col.flex",{"_index":1195,"title":{},"body":{"components/ListComponent.html":{}}}],["col.key",{"_index":1201,"title":{},"body":{"components/ListComponent.html":{}}}],["col.value",{"_index":1197,"title":{},"body":{"components/ListComponent.html":{}}}],["collectionviewer",{"_index":860,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["colname",{"_index":1139,"title":{},"body":{"components/ListComponent.html":{}}}],["colname.replace(/\\./g",{"_index":1122,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["color",{"_index":599,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ToastComponent.html":{}}}],["color_main",{"_index":1221,"title":{},"body":{"components/ListComponent.html":{}}}],["color_secondary",{"_index":601,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ListComponent.html":{}}}],["color_white",{"_index":1022,"title":{},"body":{"components/FooterComponent.html":{}}}],["cols",{"_index":700,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["cols[0].key",{"_index":1185,"title":{},"body":{"components/ListComponent.html":{}}}],["cols]='cols",{"_index":759,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["cols]=\\'cols",{"_index":766,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["columns",{"_index":1213,"title":{},"body":{"components/ListComponent.html":{}}}],["commonmodule",{"_index":637,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["compodoc/compodoc",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":134,"title":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["components/list/list.component",{"_index":1299,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/modal",{"_index":952,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["connect",{"_index":848,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["connect(collectionviewer",{"_index":859,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["console.error(msg",{"_index":1246,"title":{},"body":{"injectables/LoggerService.html":{}}}],["console.log(msg",{"_index":1245,"title":{},"body":{"injectables/LoggerService.html":{}}}],["const",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["constructor(@optional",{"_index":643,"title":{},"body":{"modules/CoreModule.html":{}}}],["constructor(apiservice",{"_index":817,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["constructor(breakpointobserver",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(data",{"_index":451,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["constructor(departmentservice",{"_index":851,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["constructor(employeeservice",{"_index":910,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["constructor(error",{"_index":442,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["constructor(http",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(loading",{"_index":655,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["constructor(map",{"_index":1253,"title":{},"body":{"classes/ModelMap.html":{}}}],["constructor(private",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{},"components/BreadcrumbComponent.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"injectables/EmployeeService.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["constructor(public",{"_index":1318,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(router",{"_index":544,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["constructor(snackbar",{"_index":1309,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(utilsservice",{"_index":710,"title":{},"body":{"components/DepartmentListPage.html":{},"components/ListComponent.html":{}}}],["container",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["container(*ngfor=\"let",{"_index":1188,"title":{},"body":{"components/ListComponent.html":{}}}],["container(matcolumndef='actions",{"_index":1202,"title":{},"body":{"components/ListComponent.html":{}}}],["container(matcolumndef=\\'actions",{"_index":1230,"title":{},"body":{"components/ListComponent.html":{}}}],["container.container",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["container.sidenav",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["container.toast",{"_index":1329,"title":{},"body":{"components/ToastComponent.html":{}}}],["container__col",{"_index":1156,"title":{},"body":{"components/ListComponent.html":{},"components/NotFoundComponent.html":{}}}],["container__row(*ngif='mainbutton",{"_index":1169,"title":{},"body":{"components/ListComponent.html":{}}}],["container__row(*ngif=\\'mainbutton",{"_index":1224,"title":{},"body":{"components/ListComponent.html":{}}}],["container__row.m",{"_index":1155,"title":{},"body":{"components/ListComponent.html":{},"components/NotFoundComponent.html":{}}}],["container__row.opacity",{"_index":1180,"title":{},"body":{"components/ListComponent.html":{}}}],["content",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BreadcrumbComponent.html":{},"components/ListComponent.html":{}}}],["content(center",{"_index":1012,"title":{},"body":{"components/FooterComponent.html":{}}}],["content(flex",{"_index":1015,"title":{},"body":{"components/FooterComponent.html":{}}}],["context",{"_index":1431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contributing",{"_index":1395,"title":{"contributing.html":{}},"body":{}}],["core/models/api.interface",{"_index":869,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["core/models/app.interface",{"_index":422,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/UtilsService.html":{}}}],["core/models/department.model",{"_index":740,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["core/models/employee.model",{"_index":933,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["core/models/toast.interface",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/EmployeeEditPage.html":{}}}],["core/not",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/services/toast.service",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/EmployeeEditPage.html":{}}}],["core/services/utils.service",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["core/toast/toast.component",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/EmployeeEditPage.html":{}}}],["coremodule",{"_index":348,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correctly",{"_index":751,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["count",{"_index":455,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["coverage",{"_index":1396,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":815,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["create(department",{"_index":819,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["create(employee",{"_index":963,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["created",{"_index":889,"title":{},"body":{"classes/Employee.html":{},"components/EmployeeListPage.html":{}}}],["cursor",{"_index":612,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["darkgrey",{"_index":619,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["data",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentRoutingModule.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeRoutingModule.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["datasource",{"_index":741,"title":{},"body":{"components/DepartmentListPage.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"classes/EmployeesDataSource.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["datasource)]='departmentdatasource",{"_index":762,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["datasource)]='employeedatasource",{"_index":938,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["datasource)]=\\'departmentdatasource",{"_index":769,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["datasource)]=\\'employeedatasource",{"_index":940,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["datasource.ts",{"_index":844,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{},"coverage.html":{}}}],["datasource.ts:15",{"_index":858,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["datasource.ts:16",{"_index":854,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["datasource.ts:17",{"_index":857,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["datasource.ts:18",{"_index":977,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["datasource.ts:20",{"_index":852,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["datasource.ts:21",{"_index":976,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["datasource.ts:26",{"_index":865,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["datasource.ts:30",{"_index":980,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["datasource.ts:45",{"_index":861,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["datasource.ts:49",{"_index":863,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["datasource.ts:55",{"_index":978,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["datasource.ts:59",{"_index":979,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["datasourcesubjdata",{"_index":646,"title":{"classes/DataSourceSubjData.html":{}},"body":{"classes/DataSourceSubjData.html":{},"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"coverage.html":{}}}],["datasourcesubjdata(false",{"_index":853,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["datasourcesubject",{"_index":846,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["date",{"_index":893,"title":{},"body":{"classes/Employee.html":{}}}],["datepipe",{"_index":1061,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["datepipe('en",{"_index":1069,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["debouncetime",{"_index":1062,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["debouncetime(150",{"_index":1092,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["declarations",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decoration",{"_index":1024,"title":{},"body":{"components/FooterComponent.html":{}}}],["decorators",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/EmployeeEditPage.html":{},"components/ListComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"components/ListComponent.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["delete",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ModalDeleteComponent.html":{}}}],["delete'},{'name",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["delete(department",{"_index":821,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["delete(employee",{"_index":965,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["delete(event",{"_index":716,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["delete(path",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{}}}],["delete.component",{"_index":954,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["delete.component.pug",{"_index":1250,"title":{},"body":{"components/ModalDeleteComponent.html":{}}}],["delete.component.scss",{"_index":1249,"title":{},"body":{"components/ModalDeleteComponent.html":{}}}],["delete.component.ts",{"_index":1248,"title":{},"body":{"components/ModalDeleteComponent.html":{},"coverage.html":{}}}],["delete.component.ts:12",{"_index":1252,"title":{},"body":{"components/ModalDeleteComponent.html":{}}}],["delete.component.ts:8",{"_index":1251,"title":{},"body":{"components/ModalDeleteComponent.html":{}}}],["delete/modal",{"_index":953,"title":{},"body":{"modules/EmployeeModule.html":{},"components/ModalDeleteComponent.html":{},"coverage.html":{}}}],["departmenservice",{"_index":712,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["department",{"_index":316,"title":{"classes/Department.html":{}},"body":{"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["department's",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["department.model",{"_index":899,"title":{},"body":{"classes/Employee.html":{}}}],["department.name",{"_index":919,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["department.routing",{"_index":782,"title":{},"body":{"modules/DepartmentModule.html":{}}}],["department/pages/list/list.page",{"_index":787,"title":{},"body":{"modules/DepartmentModule.html":{}}}],["department/pages/new/new.page",{"_index":788,"title":{},"body":{"modules/DepartmentModule.html":{}}}],["department\\'s",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["department_routes",{"_index":811,"title":{},"body":{"modules/DepartmentRoutingModule.html":{}}}],["departmentdatasource",{"_index":701,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["departmentid",{"_index":890,"title":{},"body":{"classes/Employee.html":{},"classes/EmployeesDataSource.html":{}}}],["departmentlistfilter",{"_index":702,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["departmentlistpage",{"_index":315,"title":{"components/DepartmentListPage.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["departmentmodule",{"_index":773,"title":{"modules/DepartmentModule.html":{}},"body":{"modules/DepartmentModule.html":{},"modules.html":{},"overview.html":{}}}],["departmentnewpage",{"_index":318,"title":{"components/DepartmentNewPage.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["departmentroutingmodule",{"_index":778,"title":{"modules/DepartmentRoutingModule.html":{}},"body":{"modules/DepartmentModule.html":{},"modules/DepartmentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["departments",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DepartmentListPage.html":{},"classes/EmployeesDataSource.html":{}}}],["departmentsdatasource",{"_index":726,"title":{"classes/DepartmentsDataSource.html":{}},"body":{"components/DepartmentListPage.html":{},"classes/DepartmentsDataSource.html":{},"coverage.html":{}}}],["departmentsdatasourcesubject",{"_index":847,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["departmentservice",{"_index":711,"title":{"injectables/DepartmentService.html":{}},"body":{"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"classes/EmployeesDataSource.html":{},"coverage.html":{}}}],["departmentslength",{"_index":703,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["dependencies",{"_index":338,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":413,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"classes/Employee.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["dev",{"_index":1485,"title":{},"body":{"index.html":{}}}],["development",{"_index":1482,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["direction(row",{"_index":1010,"title":{},"body":{"components/FooterComponent.html":{}}}],["directive",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1496,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1501,"title":{},"body":{"index.html":{}}}],["disconnect",{"_index":849,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["disconnect(collectionviewer",{"_index":862,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["displayedcols",{"_index":704,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["displayedcols]='displayedcols",{"_index":760,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["displayedcols]=\\'displayedcols",{"_index":767,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["dist",{"_index":1500,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":555,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["div",{"_index":905,"title":{},"body":{"components/EmployeeEditPage.html":{},"components/EmployeeNewPage.html":{}}}],["div(fxflex",{"_index":1288,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["documentation",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["down",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["duration",{"_index":1039,"title":{},"body":{"interfaces/IToast.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":568,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{},"dependencies.html":{}}}],["e2d735",{"_index":1336,"title":{},"body":{"components/ToastComponent.html":{}}}],["e2e",{"_index":1512,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":379,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":384,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":382,"title":{},"body":{"classes/AppPage.html":{}}}],["edit",{"_index":708,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeRoutingModule.html":{}}}],["edit'},{'name",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["edit(event",{"_index":718,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["edit.page.pug",{"_index":902,"title":{},"body":{"components/EmployeeEditPage.html":{}}}],["edit.page.scss",{"_index":901,"title":{},"body":{"components/EmployeeEditPage.html":{}}}],["element",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["element(by.css('app",{"_index":387,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":1053,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["elevation",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ListComponent.html":{},"components/NotFoundComponent.html":{}}}],["employee",{"_index":321,"title":{"classes/Employee.html":{}},"body":{"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["employee's",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["employee.routing",{"_index":951,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee\\'s",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["employee_routes",{"_index":959,"title":{},"body":{"modules/EmployeeRoutingModule.html":{}}}],["employeedatasource",{"_index":907,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["employeeeditpage",{"_index":320,"title":{"components/EmployeeEditPage.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["employeelistfilter",{"_index":908,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["employeelistpage",{"_index":323,"title":{"components/EmployeeListPage.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["employeemodule",{"_index":941,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/EmployeeModule.html":{},"modules.html":{},"overview.html":{}}}],["employeenewpage",{"_index":324,"title":{"components/EmployeeNewPage.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["employeeroutingmodule",{"_index":946,"title":{"modules/EmployeeRoutingModule.html":{}},"body":{"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["employees",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Department.html":{},"components/EmployeeListPage.html":{},"classes/EmployeesDataSource.html":{}}}],["employeesdatasource",{"_index":925,"title":{"classes/EmployeesDataSource.html":{}},"body":{"components/EmployeeListPage.html":{},"classes/EmployeesDataSource.html":{},"coverage.html":{}}}],["employeesdatasourcesubject",{"_index":975,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["employeeservice",{"_index":911,"title":{"injectables/EmployeeService.html":{}},"body":{"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"coverage.html":{}}}],["employeeslength",{"_index":909,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["encapsulation",{"_index":1303,"title":{},"body":{"components/ToastComponent.html":{}}}],["end",{"_index":1016,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["end').p",{"_index":1171,"title":{},"body":{"components/ListComponent.html":{}}}],["end\\').p",{"_index":1226,"title":{},"body":{"components/ListComponent.html":{}}}],["entities",{"_index":648,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["entity",{"_index":415,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"classes/Employee.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/typealiases.html":{}}}],["entitypostrequest",{"_index":60,"title":{"classes/EntityPostRequest.html":{}},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"coverage.html":{}}}],["entitypostrequest(department",{"_index":840,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["entitypostrequest(employee",{"_index":973,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["entityputrequest",{"_index":63,"title":{"classes/EntityPutRequest.html":{}},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"coverage.html":{}}}],["entityputrequest(department",{"_index":837,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["entityputrequest(employee",{"_index":972,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["entrycomponents",{"_index":781,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{}}}],["enum",{"_index":428,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IToast.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"interfaces/ToastOptions.html":{}}}],["enumerations",{"_index":1471,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["error",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IToast.html":{},"injectables/LoggerService.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["error(message",{"_index":1347,"title":{},"body":{"injectables/ToastService.html":{}}}],["error(msg",{"_index":1240,"title":{},"body":{"injectables/LoggerService.html":{}}}],["errorresponse",{"_index":85,"title":{"classes/ErrorResponse.html":{}},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"coverage.html":{}}}],["errorresponse:33",{"_index":532,"title":{},"body":{"classes/BooleanResponse.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["errorresponse:38",{"_index":534,"title":{},"body":{"classes/BooleanResponse.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["errors",{"_index":650,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["event",{"_index":561,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["eventemitter",{"_index":1055,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["example",{"_index":416,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"classes/Employee.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["execute",{"_index":1509,"title":{},"body":{"index.html":{}}}],["exist",{"_index":569,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["export",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["exports",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["extended",{"_index":667,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["extends",{"_index":445,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["false",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["fefefe",{"_index":1331,"title":{},"body":{"components/ToastComponent.html":{}}}],["ffffff",{"_index":600,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["field",{"_index":796,"title":{},"body":{"modules/DepartmentModule.html":{},"components/ListComponent.html":{},"modules/SharedModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["files",{"_index":1491,"title":{},"body":{"index.html":{}}}],["filter",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["filter((err",{"_index":691,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["filter((event",{"_index":560,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["finalize",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{}}}],["fixedinviewport='true",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["fixedinviewport=\\'true",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":1503,"title":{},"body":{"index.html":{}}}],["flex",{"_index":722,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"components/FooterComponent.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["flexbox",{"_index":591,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["flexlayoutmodule",{"_index":641,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["fluid.main.p",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":596,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{}}}],["font_weight_bold",{"_index":1218,"title":{},"body":{"components/ListComponent.html":{}}}],["font_weight_normal",{"_index":605,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["font_weight_thinner",{"_index":1220,"title":{},"body":{"components/ListComponent.html":{}}}],["footer",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["footer.component.pug",{"_index":998,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":997,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":635,"title":{},"body":{"modules/CoreModule.html":{}}}],["footerapp",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["footercomponent",{"_index":325,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["foreach",{"_index":677,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["foreach(callbackfn",{"_index":1257,"title":{},"body":{"classes/ModelMap.html":{}}}],["forkjoin",{"_index":867,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["form",{"_index":1161,"title":{},"body":{"components/ListComponent.html":{}}}],["formaterror",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["formaterror(subject",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{}}}],["formsmodule",{"_index":783,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{}}}],["found",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["found.component",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{}}}],["found.component.pug",{"_index":1284,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1283,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1282,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":1286,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":1285,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["from.find",{"_index":500,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["from.get(string(modelitem[torelation]))[0",{"_index":511,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["from[0",{"_index":521,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["fromevent",{"_index":1060,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["fromevent(this.searchinput.nativeelement",{"_index":1090,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["full",{"_index":409,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ItemAction.html":{},"classes/ModelMap.html":{},"coverage.html":{}}}],["functions",{"_index":1474,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1513,"title":{},"body":{"index.html":{}}}],["fxflex",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/ListComponent.html":{}}}],["fxflex]=\"col.flex",{"_index":1193,"title":{},"body":{"components/ListComponent.html":{}}}],["fxlayout='column",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["fxlayout=\\'column",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["fxlayoutalign.xs=\"center",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["fxlayoutalign=\"start",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["fxlayoutalign='end",{"_index":1170,"title":{},"body":{"components/ListComponent.html":{}}}],["fxlayoutalign='start",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["fxlayoutalign=\\'end",{"_index":1225,"title":{},"body":{"components/ListComponent.html":{}}}],["fxlayoutalign=\\'start",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["generate",{"_index":1494,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1479,"title":{},"body":{"index.html":{}}}],["generateguid",{"_index":1342,"title":{},"body":{"injectables/ToastService.html":{}}}],["get(`${environment.api_url}${path",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{}}}],["get(key",{"_index":682,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["getall",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["getall(path",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{}}}],["getcellcolstyle",{"_index":1124,"title":{},"body":{"components/ListComponent.html":{}}}],["getcellcolstyle(colname",{"_index":1121,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["getcol",{"_index":1125,"title":{},"body":{"components/ListComponent.html":{}}}],["getcol(row",{"_index":1108,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["getcolvalue",{"_index":1126,"title":{},"body":{"components/ListComponent.html":{}}}],["getcolvalue(row",{"_index":1114,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["geterror",{"_index":444,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["geterrors",{"_index":651,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["getparams",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{}}}],["getparams(apiqueryfilter",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["getsearchparams",{"_index":1119,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["getting",{"_index":1392,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gettitletext",{"_index":380,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoast",{"_index":1343,"title":{},"body":{"injectables/ToastService.html":{}}}],["global",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/EmployeeListPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{}}}],["go",{"_index":1516,"title":{},"body":{"index.html":{}}}],["gradient_color2",{"_index":1222,"title":{},"body":{"components/ListComponent.html":{}}}],["graph",{"_index":1523,"title":{},"body":{"modules.html":{}}}],["h1",{"_index":1289,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["hammerjs",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["haserrors",{"_index":652,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["header",{"_index":1190,"title":{},"body":{"components/ListComponent.html":{}}}],["height",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["help",{"_index":1514,"title":{},"body":{"index.html":{}}}],["hint",{"_index":1168,"title":{},"body":{"components/ListComponent.html":{}}}],["home",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["hover",{"_index":1030,"title":{},"body":{"components/FooterComponent.html":{}}}],["href",{"_index":1008,"title":{},"body":{"components/FooterComponent.html":{}}}],["href=\"https://material.angular.io",{"_index":1004,"title":{},"body":{"components/FooterComponent.html":{}}}],["href=\"https://www.npmjs.com/package/@angular/flex",{"_index":1007,"title":{},"body":{"components/FooterComponent.html":{}}}],["html",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["http",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/typealiases.html":{}}}],["http://localhost:3000/api",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1487,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodule",{"_index":630,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpparams",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{}}}],["ibreadcrumb",{"_index":549,"title":{"interfaces/IBreadCrumb.html":{}},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{},"coverage.html":{}}}],["icon",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["icon(matsuffix",{"_index":1166,"title":{},"body":{"components/ListComponent.html":{}}}],["icon(mdsuffix",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["icon.filter",{"_index":1165,"title":{},"body":{"components/ListComponent.html":{}}}],["icon.icon",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":526,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"classes/Employee.html":{},"components/EmployeeListPage.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IToast.html":{},"components/ListComponent.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{}}}],["identifier",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":757,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["implements",{"_index":537,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DepartmentNewPage.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeNewPage.html":{},"classes/EmployeesDataSource.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["import",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["import('./modules/department/department.module').then(m",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/employee/employee.module').then(m",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":616,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/ToastComponent.html":{}}}],["imports",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["include",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":417,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"miscellaneous/enumerations.html":{}}}],["info(message",{"_index":1351,"title":{},"body":{"injectables/ToastService.html":{}}}],["inherited",{"_index":529,"title":{},"body":{"classes/BooleanResponse.html":{},"classes/Department.html":{},"classes/Employee.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"overview.html":{}}}],["input",{"_index":1048,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["input(matinput",{"_index":1163,"title":{},"body":{"components/ListComponent.html":{}}}],["inputs",{"_index":1128,"title":{},"body":{"components/ListComponent.html":{}}}],["instance",{"_index":465,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["instanceof",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["interface",{"_index":432,"title":{"interfaces/BooleanResponseData.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"interfaces/ListDataSource.html":{},"interfaces/QueryOptions.html":{},"interfaces/ToastOptions.html":{}},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"interfaces/ToastOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":535,"title":{},"body":{"interfaces/BooleanResponseData.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"interfaces/ListDataSource.html":{},"interfaces/QueryOptions.html":{},"interfaces/ToastOptions.html":{},"overview.html":{}}}],["isdynamicroute",{"_index":572,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["ishandset",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["italic",{"_index":1219,"title":{},"body":{"components/ListComponent.html":{}}}],["item",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"interfaces/IBreadCrumb.html":{},"components/ListComponent.html":{},"classes/ModelMap.html":{}}}],["itemaction",{"_index":733,"title":{"interfaces/ItemAction.html":{}},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"coverage.html":{}}}],["items",{"_index":1017,"title":{},"body":{"components/FooterComponent.html":{}}}],["items(center",{"_index":1014,"title":{},"body":{"components/FooterComponent.html":{}}}],["itemsperpage",{"_index":434,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["itoast",{"_index":183,"title":{"interfaces/IToast.html":{}},"body":{"components/AppComponent.html":{},"components/EmployeeEditPage.html":{},"interfaces/IToast.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["join",{"_index":480,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["joinonetoonerelation",{"_index":520,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["joinonetoonerelation(from",{"_index":1266,"title":{},"body":{"classes/ModelResponse.html":{}}}],["joinonetoonerelationfromarray",{"_index":491,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["joinonetoonerelationfromarray(from",{"_index":1268,"title":{},"body":{"classes/ModelResponse.html":{}}}],["joinonetoonerelationfrommap",{"_index":510,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["joinonetoonerelationfrommap(from",{"_index":1270,"title":{},"body":{"classes/ModelResponse.html":{}}}],["justify",{"_index":1011,"title":{},"body":{"components/FooterComponent.html":{},"components/ListComponent.html":{}}}],["karma",{"_index":1511,"title":{},"body":{"index.html":{}}}],["key",{"_index":418,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["key.split",{"_index":1110,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["keylevel",{"_index":1109,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["keylevel.length",{"_index":1111,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["keys",{"_index":1115,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["keys.length",{"_index":1116,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["keys.slice(1",{"_index":1118,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["keyup",{"_index":1091,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["label",{"_index":556,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{},"components/ListComponent.html":{}}}],["label='side",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["label='toggle",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["label=\\'side",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["label=\\'toggle",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["lastname",{"_index":891,"title":{},"body":{"classes/Employee.html":{},"components/EmployeeListPage.html":{}}}],["lastroutepart",{"_index":570,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["lastroutepart.split(':')[1",{"_index":576,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["lastroutepart.startswith",{"_index":573,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["layout",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["layoutmodule",{"_index":640,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["legend",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["li",{"_index":592,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["li(*ngfor='let",{"_index":586,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["li(*ngfor=\\'let",{"_index":622,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["li::after",{"_index":618,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["li:first",{"_index":614,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["li:last",{"_index":620,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["license",{"_index":1519,"title":{"license.html":{}},"body":{}}],["line",{"_index":507,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["link",{"_index":589,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["list",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["list'},{'name",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["list.component.pug",{"_index":1065,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["list.component.scss",{"_index":1066,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["list.nav",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["list.page.pug",{"_index":699,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["list.page.scss",{"_index":698,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["listcomponent",{"_index":327,"title":{"components/ListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listdataloaded",{"_index":1067,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["listdatasource",{"_index":845,"title":{"interfaces/ListDataSource.html":{}},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"coverage.html":{}}}],["listfilter",{"_index":1077,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["listfilter.searchcolumns.length",{"_index":1158,"title":{},"body":{"components/ListComponent.html":{}}}],["listfilter]='departmentlistfilter",{"_index":761,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["listfilter]='employeelistfilter",{"_index":937,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["listfilter]=\\'departmentlistfilter",{"_index":768,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["listfilter]=\\'employeelistfilter",{"_index":939,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["listitemactions",{"_index":705,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["listlength",{"_index":1070,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["literal",{"_index":1132,"title":{},"body":{"components/ListComponent.html":{},"interfaces/QueryOptions.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaddata",{"_index":850,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{},"interfaces/ListDataSource.html":{}}}],["loaddata(options",{"_index":864,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["loaded",{"_index":750,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["loaded)='onlistdataloaded($event",{"_index":765,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["loaded)=\\'onlistdataloaded($event",{"_index":772,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["loader",{"_index":1463,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/ModelMap.html":{},"injectables/UtilsService.html":{}}}],["loading(status",{"_index":1388,"title":{},"body":{"injectables/UtilsService.html":{}}}],["loadingsubject",{"_index":814,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"injectables/UtilsService.html":{}}}],["loadpage",{"_index":1102,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["located",{"_index":485,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["lodash",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1239,"title":{},"body":{"injectables/LoggerService.html":{}}}],["log(msg",{"_index":1243,"title":{},"body":{"injectables/LoggerService.html":{}}}],["loggerservice",{"_index":1237,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["logo",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["m.departmentmodule",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.employeemodule",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main(fxlayout='column",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["main(fxlayout=\\'column",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["mainbutton",{"_index":706,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["mainbutton.icon",{"_index":1178,"title":{},"body":{"components/ListComponent.html":{}}}],["mainbutton.name",{"_index":1179,"title":{},"body":{"components/ListComponent.html":{}}}],["mainbutton]='mainbutton",{"_index":764,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["mainbutton]=\\'mainbutton",{"_index":771,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["map",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["map((response",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{},"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["map/array",{"_index":518,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["maparraytomodel",{"_index":471,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["maparraytomodel(arrayresponsedata",{"_index":1272,"title":{},"body":{"classes/ModelResponse.html":{}}}],["maparrvalue",{"_index":497,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["maparrvalue.foreach((modelitem",{"_index":498,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["mapkeysit",{"_index":493,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["mapmaptomodel",{"_index":476,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["mapmaptomodel(mapresponsedata",{"_index":1274,"title":{},"body":{"classes/ModelResponse.html":{}}}],["mapped",{"_index":675,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["mappedby",{"_index":676,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["mapping",{"_index":433,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["mappingcolumn",{"_index":669,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["mapresponsedata",{"_index":475,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["mapresponsedata[1",{"_index":479,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["mapsingletomodel",{"_index":467,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["mapsingletomodel(values",{"_index":1276,"title":{},"body":{"classes/ModelResponse.html":{}}}],["mapvalues",{"_index":495,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["mapvalues[i",{"_index":505,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["margin",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{},"components/NotFoundComponent.html":{}}}],["mask.gradient",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["mat",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["matbuttonmodule",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":633,"title":{},"body":{"modules/CoreModule.html":{},"modules/SharedModule.html":{}}}],["matching",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matcolumndef='{{col.key",{"_index":1189,"title":{},"body":{"components/ListComponent.html":{}}}],["matcolumndef=\\'{{col.key",{"_index":1229,"title":{},"body":{"components/ListComponent.html":{}}}],["matdialogmodule",{"_index":799,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["matdividermodule",{"_index":801,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["material",{"_index":1006,"title":{},"body":{"components/FooterComponent.html":{}}}],["matformfieldmodule",{"_index":794,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["math.random",{"_index":1368,"title":{},"body":{"injectables/ToastService.html":{}}}],["maticonmodule",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":797,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":1300,"title":{},"body":{"modules/SharedModule.html":{}}}],["matmenutriggerfor]='menu",{"_index":1204,"title":{},"body":{"components/ListComponent.html":{}}}],["matmenutriggerfor]=\\'menu",{"_index":1232,"title":{},"body":{"components/ListComponent.html":{}}}],["matpaginator",{"_index":1056,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["matpaginatormodule",{"_index":791,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["matprogressspinnermodule",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/DepartmentModule.html":{}}}],["matsidenav",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":1310,"title":{},"body":{"components/ToastComponent.html":{}}}],["matsnackbarmodule",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["matsort",{"_index":1057,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["matsortactive",{"_index":1184,"title":{},"body":{"components/ListComponent.html":{}}}],["matsortchange)=\"sortdata($event",{"_index":1192,"title":{},"body":{"components/ListComponent.html":{}}}],["matsortdirection=\"desc",{"_index":1186,"title":{},"body":{"components/ListComponent.html":{}}}],["matsortmodule",{"_index":793,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["mattablemodule",{"_index":789,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["max",{"_index":1217,"title":{},"body":{"components/ListComponent.html":{}}}],["mdsuffix",{"_index":1167,"title":{},"body":{"components/ListComponent.html":{}}}],["menu",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/ListComponent.html":{}}}],["menu(#menu='matmenu",{"_index":1206,"title":{},"body":{"components/ListComponent.html":{}}}],["menu(#menu=\\'matmenu",{"_index":1233,"title":{},"body":{"components/ListComponent.html":{}}}],["message",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IToast.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{}}}],["metadata",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/BooleanResponse.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["miscellaneous",{"_index":1470,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["modal",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["modaldeletecomponent",{"_index":328,"title":{"components/ModalDeleteComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode]=\"(ishandset",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["model",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"classes/Employee.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/typealiases.html":{}}}],["modelarray",{"_index":472,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["modelitem[tonewrelation",{"_index":499,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["modelitem[torelation",{"_index":503,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["modelmap",{"_index":83,"title":{"classes/ModelMap.html":{}},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["modelmap(mapresponsedata[0",{"_index":477,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["modelref",{"_index":674,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["modelresponse",{"_index":79,"title":{"classes/ModelResponse.html":{}},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["modelresponse.joinonetoonerelationfromarray",{"_index":523,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["modelresponse.joinonetoonerelationfrommap",{"_index":522,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["modelresponse.parsetomodel(data",{"_index":459,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["modelresponsedata",{"_index":457,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/UtilsService.html":{},"miscellaneous/typealiases.html":{}}}],["models",{"_index":668,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["models/api.interface",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"injectables/UtilsService.html":{}}}],["models/app.interface",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{}}}],["models/toast.interface",{"_index":1359,"title":{},"body":{"injectables/ToastService.html":{}}}],["module",{"_index":335,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modulename",{"_index":1476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modules",{"_index":337,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1515,"title":{},"body":{"index.html":{}}}],["more_vert",{"_index":1205,"title":{},"body":{"components/ListComponent.html":{}}}],["msg",{"_index":1242,"title":{},"body":{"injectables/LoggerService.html":{}}}],["multisorts",{"_index":1074,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["name",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nav",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1486,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":381,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["navigationend",{"_index":553,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["new",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"index.html":{}}}],["new'},{'name",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["new.page.pug",{"_index":805,"title":{},"body":{"components/DepartmentNewPage.html":{},"components/EmployeeNewPage.html":{}}}],["new.page.scss",{"_index":804,"title":{},"body":{"components/DepartmentNewPage.html":{},"components/EmployeeNewPage.html":{}}}],["newbreadcrumbs",{"_index":581,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["next",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["next(subject",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{}}}],["nexturl",{"_index":579,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["ng",{"_index":1187,"title":{},"body":{"components/ListComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1088,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["ngclass]=\"getcellcolstyle(col.key",{"_index":1199,"title":{},"body":{"components/ListComponent.html":{}}}],["ngfor=\"let",{"_index":1207,"title":{},"body":{"components/ListComponent.html":{}}}],["ngif='false",{"_index":1326,"title":{},"body":{"components/ToastComponent.html":{}}}],["ngif='ishandset",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["ngif=\\'false",{"_index":1339,"title":{},"body":{"components/ToastComponent.html":{}}}],["ngif=\\'ishandset",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":1097,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["ngoninit",{"_index":543,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["none",{"_index":594,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["notfoundcomponent",{"_index":331,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["null",{"_index":454,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":435,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"classes/Employee.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"interfaces/ToastOptions.html":{}}}],["object",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/variables.html":{}}}],["object.assign(new",{"_index":469,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["object.entries(rawresponsedata[0",{"_index":515,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["object.keys(apiqueryfilter).foreach((paramkey",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{}}}],["object.keys(paramvalue).foreach((value",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{}}}],["object.values(paramvalue).foreach((value",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{}}}],["observable",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/ToastService.html":{}}}],["observe(breakpoints.handset",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["of(this.formaterror(subject",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{}}}],["ol.breadcrumb",{"_index":585,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["ondestroy",{"_index":1050,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["one",{"_index":481,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["oninit",{"_index":538,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["onlistdataloaded",{"_index":709,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["onlistdataloaded(status",{"_index":720,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["opacity",{"_index":606,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["open",{"_index":1308,"title":{},"body":{"components/ToastComponent.html":{}}}],["open(toast",{"_index":1313,"title":{},"body":{"components/ToastComponent.html":{}}}],["opened]='!(ishandset",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["opened]=\\'!(ishandset",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["optional",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/BooleanResponse.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IToast.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":431,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IToast.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{}}}],["options.closestring",{"_index":1380,"title":{},"body":{"injectables/ToastService.html":{}}}],["options.duration",{"_index":1382,"title":{},"body":{"injectables/ToastService.html":{}}}],["out",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["outlet",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["output",{"_index":1054,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["outputs",{"_index":1129,"title":{},"body":{"components/ListComponent.html":{}}}],["over",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["overrides",{"_index":490,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["overview",{"_index":1525,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1291,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["package",{"_index":1434,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["page",{"_index":436,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["pagesizeoptions]=\"[5",{"_index":1215,"title":{},"body":{"components/ListComponent.html":{}}}],["paginator",{"_index":1072,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["paginator([length]='listlength",{"_index":1214,"title":{},"body":{"components/ListComponent.html":{}}}],["paginator([length]=\\'listlength",{"_index":1235,"title":{},"body":{"components/ListComponent.html":{}}}],["panelclass",{"_index":1323,"title":{},"body":{"components/ToastComponent.html":{}}}],["param",{"_index":462,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/BooleanResponse.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"miscellaneous/functions.html":{}}}],["paramkey",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{}}}],["paramname",{"_index":575,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["params",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["params.mapping",{"_index":478,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["paramvalue",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{}}}],["paramvalue.foreach((value",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{}}}],["parentmodule",{"_index":644,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":1280,"title":{},"body":{"classes/ModelResponse.html":{}}}],["parsetomodel",{"_index":1263,"title":{},"body":{"classes/ModelResponse.html":{}}}],["parsetomodel(rawresponsedata",{"_index":1278,"title":{},"body":{"classes/ModelResponse.html":{}}}],["partial",{"_index":468,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["path",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"components/BreadcrumbComponent.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"interfaces/IBreadCrumb.html":{}}}],["path.replace(lastroutepart",{"_index":577,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["path.split('/').pop",{"_index":571,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["pathmatch",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["pipe(map((res",{"_index":874,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["pipe(map((result",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["placeholder=\"search",{"_index":1164,"title":{},"body":{"components/ListComponent.html":{}}}],["pointer",{"_index":613,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["position",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["post",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["post(path",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{}}}],["prefer",{"_index":508,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["private",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["prod",{"_index":1502,"title":{},"body":{"index.html":{}}}],["production",{"_index":1504,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1478,"title":{},"body":{"index.html":{}}}],["promise",{"_index":383,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["protected",{"_index":673,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["protractor",{"_index":385,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["providers",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["public",{"_index":441,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"injectables/UtilsService.html":{}}}],["pug",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["put",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["put(path",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{}}}],["query",{"_index":430,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["query(options",{"_index":873,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["query(params",{"_index":823,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["querylist",{"_index":1052,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["queryoptions",{"_index":45,"title":{"interfaces/QueryOptions.html":{}},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"coverage.html":{}}}],["queryparams",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{}}}],["queryparams.append(`${paramkey.tostring",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{}}}],["queryparams.append(`sortdirections",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{}}}],["queryparams.set(paramkey",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{}}}],["r",{"_index":1367,"title":{},"body":{"injectables/ToastService.html":{}}}],["raised",{"_index":1176,"title":{},"body":{"components/ListComponent.html":{}}}],["raw",{"_index":452,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/typealiases.html":{}}}],["rawresponse",{"_index":86,"title":{"classes/RawResponse.html":{}},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"coverage.html":{}}}],["rawresponsedata",{"_index":453,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/typealiases.html":{}}}],["rawresponsedata.length",{"_index":514,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["rawresponsedata[0",{"_index":512,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["rawresponsedata[1",{"_index":517,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["reactiveformsmodule",{"_index":784,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{}}}],["readme",{"_index":1518,"title":{},"body":{"index.html":{}}}],["red",{"_index":1330,"title":{},"body":{"components/ToastComponent.html":{}}}],["redirectto",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":464,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["reference",{"_index":486,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["relation",{"_index":482,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["relationitem",{"_index":501,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["relationitem.id",{"_index":502,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["reload",{"_index":1489,"title":{},"body":{"index.html":{}}}],["remove",{"_index":567,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["request",{"_index":458,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["requests",{"_index":524,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["require",{"_index":1432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":875,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["reset",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{},"classes/ModelMap.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["response",{"_index":439,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/typealiases.html":{}}}],["response.count",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{}}}],["response.data",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{}}}],["response.error",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{}}}],["response.geterror",{"_index":690,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["responseref",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{}}}],["responses",{"_index":649,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["rest",{"_index":425,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/enumerations.html":{}}}],["result",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["results",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.count",{"_index":883,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["results.data[0",{"_index":880,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["results.departments.data",{"_index":986,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["results.employees",{"_index":984,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["results.employees.count",{"_index":989,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["results.employees.data[0",{"_index":988,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["results.employees.joinonetoonerelation",{"_index":985,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["return",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/ToastService.html":{}}}],["returns",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["rgba(#797373",{"_index":1031,"title":{},"body":{"components/FooterComponent.html":{}}}],["rgba($color_gray",{"_index":1029,"title":{},"body":{"components/FooterComponent.html":{}}}],["rgba($color_main",{"_index":611,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["rgba($color_secondary",{"_index":1027,"title":{},"body":{"components/FooterComponent.html":{}}}],["rgba(0",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["right",{"_index":617,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["root",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"injectables/LoggerService.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["root'},{'name",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["route",{"_index":551,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["route.firstchild",{"_index":583,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["route.routeconfig",{"_index":563,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["route.routeconfig.data",{"_index":564,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["route.routeconfig.data.breadcrumb",{"_index":565,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["route.routeconfig.path",{"_index":566,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["route.snapshot",{"_index":574,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["route.snapshot.params[paramname",{"_index":578,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["router",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["routerevent",{"_index":554,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["routerlink='/departments",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["routerlink='/employees",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["routerlink=\\'/departments",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["routerlink=\\'/employees",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["routerlinkactive=\"active",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["routerlinkactive='router",{"_index":588,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["routerlinkactive=\\'router",{"_index":624,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["routermodule",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{}}}],["routermodule.forchild(department_routes",{"_index":812,"title":{},"body":{"modules/DepartmentRoutingModule.html":{}}}],["routermodule.forchild(employee_routes",{"_index":960,"title":{},"body":{"modules/EmployeeRoutingModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":391,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/DepartmentRoutingModule.html":{},"modules/EmployeeRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1002,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["row(*matheaderrowdef=\"displayedcols",{"_index":1211,"title":{},"body":{"components/ListComponent.html":{}}}],["row(*matrowdef=\"let",{"_index":1212,"title":{},"body":{"components/ListComponent.html":{}}}],["row[key",{"_index":1112,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["run",{"_index":1483,"title":{},"body":{"index.html":{}}}],["running",{"_index":1505,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["save",{"_index":816,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["save(department",{"_index":825,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["save(employee",{"_index":968,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["saved",{"_index":488,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["scaffolding",{"_index":1493,"title":{},"body":{"index.html":{}}}],["search",{"_index":1089,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["searchcolumns",{"_index":438,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["searchinput",{"_index":1076,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["searchvalue",{"_index":437,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["selector",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["serve",{"_index":1484,"title":{},"body":{"index.html":{}}}],["server",{"_index":424,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["serverresponse",{"_index":446,"title":{"classes/ServerResponse.html":{}},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"coverage.html":{}}}],["serverresponse:33",{"_index":531,"title":{},"body":{"classes/BooleanResponse.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{}}}],["serverresponse:38",{"_index":533,"title":{},"body":{"classes/BooleanResponse.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{}}}],["serverresponse:50",{"_index":530,"title":{},"body":{"classes/BooleanResponse.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{}}}],["service",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["services/utils.service",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["set",{"_index":653,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["set(loading",{"_index":662,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["seterrors",{"_index":654,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["seterrors(...responses",{"_index":689,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["seterrors(responses",{"_index":664,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["settoggle",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["settoggle(togglefunc",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["shade",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["shade(*ngif=\"loading",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/components/list/list.component",{"_index":745,"title":{},"body":{"components/DepartmentListPage.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"classes/EmployeesDataSource.html":{}}}],["sharedmodule",{"_index":779,"title":{"modules/SharedModule.html":{}},"body":{"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenav",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["sidenav.mat",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["simple",{"_index":1333,"title":{},"body":{"components/ToastComponent.html":{}}}],["single",{"_index":461,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["size",{"_index":597,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["skipself",{"_index":629,"title":{},"body":{"modules/CoreModule.html":{}}}],["sm",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/ListComponent.html":{}}}],["snack",{"_index":1328,"title":{},"body":{"components/ToastComponent.html":{}}}],["snackbar",{"_index":1307,"title":{},"body":{"components/ToastComponent.html":{}}}],["solid",{"_index":610,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{}}}],["sort",{"_index":1058,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["sort.direction",{"_index":1100,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["sortcolumns",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["sortdata",{"_index":1127,"title":{},"body":{"components/ListComponent.html":{}}}],["sortdata(sort",{"_index":1099,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["sortdirection",{"_index":420,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"modules/DepartmentModule.html":{},"components/DepartmentNewPage.html":{},"modules/DepartmentRoutingModule.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"modules/EmployeeModule.html":{},"components/EmployeeNewPage.html":{},"modules/EmployeeRoutingModule.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"modules/SharedModule.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["span",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentNewPage.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/ToastComponent.html":{}}}],["span')).gettext",{"_index":388,"title":{},"body":{"classes/AppPage.html":{}}}],["span([class]='toast.style",{"_index":1325,"title":{},"body":{"components/ToastComponent.html":{}}}],["span([class]=\\'toast.style",{"_index":1338,"title":{},"body":{"components/ToastComponent.html":{}}}],["span([routerlink]='breadcrumb.url",{"_index":587,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["span([routerlink]=\\'breadcrumb.url",{"_index":623,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["span.label",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["spec\\.ts",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":423,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/enumerations.html":{}}}],["spinner",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/DepartmentModule.html":{}}}],["src/.../api.interface.ts",{"_index":1472,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../core.guard.ts",{"_index":1475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../toast.interface.ts",{"_index":1473,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:55",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/breadcrumb/breadcrumb.component.ts",{"_index":536,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{},"coverage.html":{}}}],["src/app/core/breadcrumb/breadcrumb.component.ts:31",{"_index":546,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/core/breadcrumb/breadcrumb.component.ts:37",{"_index":552,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/core/breadcrumb/breadcrumb.component.ts:48",{"_index":550,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/app/core/core.guard",{"_index":632,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/core.guard.ts",{"_index":1406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/core.module",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/core.module.ts",{"_index":628,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/footer/footer.component.ts",{"_index":996,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/footer/footer.component.ts:12",{"_index":1000,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/footer/footer.component.ts:8",{"_index":999,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/http/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/core/http/api.service.ts:111",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/http/api.service.ts:132",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/http/api.service.ts:23",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/http/api.service.ts:26",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/http/api.service.ts:30",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/http/api.service.ts:39",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/http/api.service.ts:64",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/http/api.service.ts:90",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/http/department/department.service",{"_index":742,"title":{},"body":{"components/DepartmentListPage.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"classes/EmployeesDataSource.html":{}}}],["src/app/core/http/department/department.service.ts",{"_index":813,"title":{},"body":{"injectables/DepartmentService.html":{},"coverage.html":{}}}],["src/app/core/http/department/department.service.ts:17",{"_index":827,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["src/app/core/http/department/department.service.ts:18",{"_index":818,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["src/app/core/http/department/department.service.ts:25",{"_index":824,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["src/app/core/http/department/department.service.ts:34",{"_index":826,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["src/app/core/http/department/department.service.ts:43",{"_index":820,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["src/app/core/http/department/department.service.ts:52",{"_index":822,"title":{},"body":{"injectables/DepartmentService.html":{}}}],["src/app/core/http/employee/employee.service",{"_index":934,"title":{},"body":{"components/EmployeeListPage.html":{},"classes/EmployeesDataSource.html":{}}}],["src/app/core/http/employee/employee.service.ts",{"_index":961,"title":{},"body":{"injectables/EmployeeService.html":{},"coverage.html":{}}}],["src/app/core/http/employee/employee.service.ts:17",{"_index":970,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/app/core/http/employee/employee.service.ts:18",{"_index":962,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/app/core/http/employee/employee.service.ts:25",{"_index":967,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/app/core/http/employee/employee.service.ts:34",{"_index":969,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/app/core/http/employee/employee.service.ts:43",{"_index":964,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/app/core/http/employee/employee.service.ts:52",{"_index":966,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/app/core/models/api.interface",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{}}}],["src/app/core/models/api.interface.ts",{"_index":412,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/api.interface.ts:124",{"_index":1265,"title":{},"body":{"classes/ModelResponse.html":{}}}],["src/app/core/models/api.interface.ts:128",{"_index":1264,"title":{},"body":{"classes/ModelResponse.html":{}}}],["src/app/core/models/api.interface.ts:148",{"_index":1277,"title":{},"body":{"classes/ModelResponse.html":{}}}],["src/app/core/models/api.interface.ts:162",{"_index":1273,"title":{},"body":{"classes/ModelResponse.html":{}}}],["src/app/core/models/api.interface.ts:180",{"_index":1275,"title":{},"body":{"classes/ModelResponse.html":{}}}],["src/app/core/models/api.interface.ts:201",{"_index":1269,"title":{},"body":{"classes/ModelResponse.html":{}}}],["src/app/core/models/api.interface.ts:248",{"_index":1271,"title":{},"body":{"classes/ModelResponse.html":{}}}],["src/app/core/models/api.interface.ts:288",{"_index":1279,"title":{},"body":{"classes/ModelResponse.html":{}}}],["src/app/core/models/api.interface.ts:320",{"_index":1267,"title":{},"body":{"classes/ModelResponse.html":{}}}],["src/app/core/models/api.interface.ts:33",{"_index":994,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["src/app/core/models/api.interface.ts:352",{"_index":992,"title":{},"body":{"classes/EntityPostRequest.html":{}}}],["src/app/core/models/api.interface.ts:363",{"_index":993,"title":{},"body":{"classes/EntityPutRequest.html":{}}}],["src/app/core/models/api.interface.ts:373",{"_index":419,"title":{},"body":{"classes/BaseEntityModel.html":{}}}],["src/app/core/models/api.interface.ts:38",{"_index":995,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["src/app/core/models/api.interface.ts:382",{"_index":527,"title":{},"body":{"classes/BaseIdModel.html":{}}}],["src/app/core/models/api.interface.ts:50",{"_index":1294,"title":{},"body":{"classes/ServerResponse.html":{}}}],["src/app/core/models/api.interface.ts:72",{"_index":528,"title":{},"body":{"classes/BooleanResponse.html":{}}}],["src/app/core/models/api.interface.ts:96",{"_index":1293,"title":{},"body":{"classes/RawResponse.html":{}}}],["src/app/core/models/app.interface",{"_index":868,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["src/app/core/models/app.interface.ts",{"_index":647,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{},"coverage.html":{}}}],["src/app/core/models/app.interface.ts:23",{"_index":1256,"title":{},"body":{"classes/ModelMap.html":{}}}],["src/app/core/models/app.interface.ts:28",{"_index":1255,"title":{},"body":{"classes/ModelMap.html":{}}}],["src/app/core/models/app.interface.ts:30",{"_index":1260,"title":{},"body":{"classes/ModelMap.html":{}}}],["src/app/core/models/app.interface.ts:39",{"_index":1262,"title":{},"body":{"classes/ModelMap.html":{}}}],["src/app/core/models/app.interface.ts:51",{"_index":658,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["src/app/core/models/app.interface.ts:52",{"_index":657,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["src/app/core/models/app.interface.ts:53",{"_index":656,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["src/app/core/models/app.interface.ts:59",{"_index":663,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["src/app/core/models/app.interface.ts:70",{"_index":661,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["src/app/core/models/app.interface.ts:77",{"_index":660,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["src/app/core/models/app.interface.ts:81",{"_index":665,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["src/app/core/models/app.interface.ts:87",{"_index":659,"title":{},"body":{"classes/DataSourceSubjData.html":{}}}],["src/app/core/models/app.interface.ts:9",{"_index":1254,"title":{},"body":{"classes/ModelMap.html":{}}}],["src/app/core/models/department.model",{"_index":829,"title":{},"body":{"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["src/app/core/models/department.model.ts",{"_index":692,"title":{},"body":{"classes/Department.html":{},"coverage.html":{}}}],["src/app/core/models/department.model.ts:11",{"_index":694,"title":{},"body":{"classes/Department.html":{}}}],["src/app/core/models/department.model.ts:12",{"_index":693,"title":{},"body":{"classes/Department.html":{}}}],["src/app/core/models/employee.model",{"_index":696,"title":{},"body":{"classes/Department.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{}}}],["src/app/core/models/employee.model.ts",{"_index":887,"title":{},"body":{"classes/Employee.html":{},"coverage.html":{}}}],["src/app/core/models/employee.model.ts:11",{"_index":898,"title":{},"body":{"classes/Employee.html":{}}}],["src/app/core/models/employee.model.ts:12",{"_index":897,"title":{},"body":{"classes/Employee.html":{}}}],["src/app/core/models/employee.model.ts:13",{"_index":892,"title":{},"body":{"classes/Employee.html":{}}}],["src/app/core/models/employee.model.ts:14",{"_index":896,"title":{},"body":{"classes/Employee.html":{}}}],["src/app/core/models/employee.model.ts:15",{"_index":894,"title":{},"body":{"classes/Employee.html":{}}}],["src/app/core/models/employee.model.ts:16",{"_index":895,"title":{},"body":{"classes/Employee.html":{}}}],["src/app/core/models/toast.interface",{"_index":1317,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/core/models/toast.interface.ts",{"_index":1036,"title":{},"body":{"interfaces/IToast.html":{},"interfaces/ToastOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/not",{"_index":1281,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/core/services/logger.service.ts",{"_index":1238,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/app/core/services/logger.service.ts:11",{"_index":1241,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/core/services/logger.service.ts:7",{"_index":1244,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/app/core/services/toast.service",{"_index":743,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["src/app/core/services/toast.service.ts",{"_index":1340,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/core/services/toast.service.ts:15",{"_index":1345,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:19",{"_index":1349,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:27",{"_index":1350,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:31",{"_index":1354,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:35",{"_index":1348,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:39",{"_index":1352,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:43",{"_index":1358,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:47",{"_index":1356,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:59",{"_index":1346,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/utils.service",{"_index":744,"title":{},"body":{"components/DepartmentListPage.html":{},"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["src/app/core/services/utils.service.ts",{"_index":1386,"title":{},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["src/app/core/services/utils.service.ts:15",{"_index":1390,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/core/services/utils.service.ts:16",{"_index":1387,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/core/services/utils.service.ts:20",{"_index":1389,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/core/toast/toast.component.ts",{"_index":1302,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/core/toast/toast.component.ts:12",{"_index":1311,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/core/toast/toast.component.ts:14",{"_index":1315,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/core/toast/toast.component.ts:16",{"_index":1312,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/core/toast/toast.component.ts:18",{"_index":1314,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/modules/department/department.module.ts",{"_index":780,"title":{},"body":{"modules/DepartmentModule.html":{}}}],["src/app/modules/department/department.routing.ts",{"_index":808,"title":{},"body":{"modules/DepartmentRoutingModule.html":{}}}],["src/app/modules/department/pages/list/list",{"_index":843,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"coverage.html":{}}}],["src/app/modules/department/pages/list/list.page",{"_index":809,"title":{},"body":{"modules/DepartmentRoutingModule.html":{}}}],["src/app/modules/department/pages/list/list.page.ts",{"_index":697,"title":{},"body":{"components/DepartmentListPage.html":{},"coverage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:17",{"_index":727,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:18",{"_index":729,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:24",{"_index":730,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:25",{"_index":731,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:26",{"_index":737,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:38",{"_index":739,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:44",{"_index":725,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:49",{"_index":713,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:62",{"_index":721,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:72",{"_index":715,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:76",{"_index":719,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/list/list.page.ts:80",{"_index":717,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["src/app/modules/department/pages/new/new.page",{"_index":810,"title":{},"body":{"modules/DepartmentRoutingModule.html":{}}}],["src/app/modules/department/pages/new/new.page.ts",{"_index":803,"title":{},"body":{"components/DepartmentNewPage.html":{},"coverage.html":{}}}],["src/app/modules/department/pages/new/new.page.ts:12",{"_index":807,"title":{},"body":{"components/DepartmentNewPage.html":{}}}],["src/app/modules/department/pages/new/new.page.ts:8",{"_index":806,"title":{},"body":{"components/DepartmentNewPage.html":{}}}],["src/app/modules/employee/components/modal",{"_index":1247,"title":{},"body":{"components/ModalDeleteComponent.html":{},"coverage.html":{}}}],["src/app/modules/employee/employee.module.ts",{"_index":947,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["src/app/modules/employee/employee.routing.ts",{"_index":958,"title":{},"body":{"modules/EmployeeRoutingModule.html":{}}}],["src/app/modules/employee/pages/edit/edit.page",{"_index":950,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{}}}],["src/app/modules/employee/pages/edit/edit.page.ts",{"_index":900,"title":{},"body":{"components/EmployeeEditPage.html":{},"coverage.html":{}}}],["src/app/modules/employee/pages/edit/edit.page.ts:12",{"_index":903,"title":{},"body":{"components/EmployeeEditPage.html":{}}}],["src/app/modules/employee/pages/edit/edit.page.ts:17",{"_index":904,"title":{},"body":{"components/EmployeeEditPage.html":{}}}],["src/app/modules/employee/pages/list/list",{"_index":974,"title":{},"body":{"classes/EmployeesDataSource.html":{},"coverage.html":{}}}],["src/app/modules/employee/pages/list/list.page",{"_index":948,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts",{"_index":906,"title":{},"body":{"components/EmployeeListPage.html":{},"coverage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:17",{"_index":926,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:18",{"_index":928,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:24",{"_index":929,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:25",{"_index":930,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:26",{"_index":931,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:38",{"_index":932,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:44",{"_index":923,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:53",{"_index":924,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:61",{"_index":912,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:74",{"_index":916,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:84",{"_index":913,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:88",{"_index":915,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/list/list.page.ts:92",{"_index":914,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["src/app/modules/employee/pages/new/new.page",{"_index":949,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/EmployeeRoutingModule.html":{}}}],["src/app/modules/employee/pages/new/new.page.ts",{"_index":955,"title":{},"body":{"components/EmployeeNewPage.html":{},"coverage.html":{}}}],["src/app/modules/employee/pages/new/new.page.ts:11",{"_index":957,"title":{},"body":{"components/EmployeeNewPage.html":{}}}],["src/app/modules/employee/pages/new/new.page.ts:8",{"_index":956,"title":{},"body":{"components/EmployeeNewPage.html":{}}}],["src/app/shared/components/list/list.component.ts",{"_index":1047,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"coverage.html":{}}}],["src/app/shared/components/list/list.component.ts:101",{"_index":1147,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:112",{"_index":1143,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:122",{"_index":1140,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:131",{"_index":1141,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:139",{"_index":1142,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:143",{"_index":1138,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:147",{"_index":1148,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:31",{"_index":1236,"title":{},"body":{"interfaces/ListDataSource.html":{}}}],["src/app/shared/components/list/list.component.ts:47",{"_index":1137,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:48",{"_index":1154,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:49",{"_index":1149,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:50",{"_index":1150,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:51",{"_index":1152,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:52",{"_index":1151,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:53",{"_index":1153,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:54",{"_index":1133,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:55",{"_index":1135,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:56",{"_index":1131,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:57",{"_index":1136,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:58",{"_index":1134,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:59",{"_index":1130,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:63",{"_index":1146,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:82",{"_index":1144,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/components/list/list.component.ts:97",{"_index":1145,"title":{},"body":{"components/ListComponent.html":{}}}],["src/app/shared/shared.module",{"_index":786,"title":{},"body":{"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1298,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["started",{"_index":1393,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["statements",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":466,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["status",{"_index":450,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"injectables/UtilsService.html":{}}}],["sticky",{"_index":1009,"title":{},"body":{"components/FooterComponent.html":{}}}],["stored",{"_index":1499,"title":{},"body":{"index.html":{}}}],["string",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"classes/Employee.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{}}}],["string,map",{"_index":1259,"title":{},"body":{"classes/ModelMap.html":{}}}],["style",{"_index":593,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{},"interfaces/IToast.html":{},"components/ListComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{}}}],["styles",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["styleurls",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["subject",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{},"injectables/ToastService.html":{}}}],["subject.next(loading",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{}}}],["subjectdata",{"_index":1080,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["subjectdata.count",{"_index":1084,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["subjectdata.haserrors",{"_index":1082,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["subscribe",{"_index":562,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["subscribe((results",{"_index":876,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["subscription",{"_index":1059,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["subscriptions",{"_index":1068,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["subscriptor",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["success",{"_index":1041,"title":{},"body":{"interfaces/IToast.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["success(message",{"_index":1353,"title":{},"body":{"injectables/ToastService.html":{}}}],["suffix",{"_index":746,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["super",{"_index":870,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["super(error",{"_index":447,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["super(map",{"_index":670,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["super.get(key",{"_index":684,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["support",{"_index":1520,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1521,"title":{},"body":{"modules.html":{}}}],["t",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/ListComponent.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["t[],key",{"_index":1258,"title":{},"body":{"classes/ModelMap.html":{}}}],["table",{"_index":1216,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["table#table([datasource]='datasource",{"_index":1183,"title":{},"body":{"components/ListComponent.html":{}}}],["table#table([datasource]=\\'datasource",{"_index":1228,"title":{},"body":{"components/ListComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":1063,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["template",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelResponse.html":{},"components/NotFoundComponent.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["test",{"_index":1508,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1507,"title":{},"body":{"index.html":{}}}],["text",{"_index":1019,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.add",{"_index":738,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["this.apiservice.delete",{"_index":841,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["this.apiservice.getall",{"_index":833,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["this.apiservice.post",{"_index":838,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["this.apiservice.put",{"_index":835,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["this.breadcrumbs",{"_index":557,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["this.breakpointobserver",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.buildbreadcrumb(route.firstchild",{"_index":584,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["this.buildbreadcrumb(this.activatedroute.root",{"_index":558,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["this.count",{"_index":456,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/DataSourceSubjData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["this.data",{"_index":448,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["this.datasource.datasourcesubjdata$.subscribe",{"_index":1079,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.datasource.loaddata",{"_index":1103,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.datasource.loaddata(this.listfilter",{"_index":1087,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.datasourcesubjdata",{"_index":856,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["this.datasourcesubjdata.haserrors",{"_index":878,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["this.datasourcesubjdata.set(false",{"_index":882,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["this.datasourcesubjdata.seterrors(results",{"_index":877,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["this.datasourcesubjdata.seterrors(results.departments",{"_index":983,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["this.datasourcesubject.asobservable",{"_index":855,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["this.datasourcesubject.complete",{"_index":886,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["this.datasourcesubject.next",{"_index":881,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["this.datasourcesubject.next(this.datasourcesubjdata.reset",{"_index":871,"title":{},"body":{"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{}}}],["this.delete",{"_index":735,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["this.departmenservice",{"_index":748,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["this.departmentdatasource",{"_index":747,"title":{},"body":{"components/DepartmentListPage.html":{}}}],["this.departmentsdatasourcesubject.asobservable",{"_index":884,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["this.departmentsdatasourcesubject.complete",{"_index":885,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["this.departmentsdatasourcesubject.next",{"_index":879,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["this.departmentservice",{"_index":872,"title":{},"body":{"classes/DepartmentsDataSource.html":{}}}],["this.departmentservice.query",{"_index":982,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["this.edit",{"_index":736,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["this.employeedatasource",{"_index":935,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["this.employeesdatasourcesubject.asobservable",{"_index":990,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["this.employeesdatasourcesubject.complete",{"_index":991,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["this.employeesdatasourcesubject.next",{"_index":987,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["this.employeeservice",{"_index":936,"title":{},"body":{"components/EmployeeListPage.html":{}}}],["this.employeeservice.query(options).pipe(map((res",{"_index":981,"title":{},"body":{"classes/EmployeesDataSource.html":{}}}],["this.entries",{"_index":680,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["this.error",{"_index":443,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["this.errors",{"_index":687,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["this.errors.length",{"_index":688,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["this.generateguid",{"_index":1385,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.getcolvalue(row",{"_index":1113,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.getcolvalue(row[keys[0",{"_index":1117,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.getparams(params",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.delete(`${environment.api_url}${path}`).pipe",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.api_url}${path",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.put(`${environment.api_url}${path",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.ishandset",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ishandset$.subscribe((ishandset",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["this.listdataloaded.emit(false",{"_index":1086,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.listdataloaded.emit(true",{"_index":1085,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.listfilter.searchcolumns",{"_index":1105,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.listfilter.searchcolumns.join",{"_index":1120,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.listfilter.sortcolumns",{"_index":1107,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.listfilter.sortcolumns[sort.active",{"_index":1101,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.listlength",{"_index":1083,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.loading",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"classes/DataSourceSubjData.html":{},"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"classes/ModelMap.html":{}}}],["this.loadingsubject",{"_index":830,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{}}}],["this.loadingsubject.asobservable",{"_index":832,"title":{},"body":{"injectables/DepartmentService.html":{},"injectables/EmployeeService.html":{},"injectables/UtilsService.html":{}}}],["this.loadingsubject.next(status",{"_index":1391,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.loadpage",{"_index":1094,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.loadpage())).subscribe",{"_index":1096,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.maparraytomodel(rawresponsedata",{"_index":513,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["this.mapmaptomodel([map",{"_index":516,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["this.mappedby",{"_index":671,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["this.mapsingletomodel(values",{"_index":474,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["this.modelref",{"_index":672,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["this.next(subject",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.paginator.page.pipe(tap",{"_index":1095,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.paginator.pageindex",{"_index":1093,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.paginator.pagesize",{"_index":1104,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.params",{"_index":460,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["this.router.events",{"_index":559,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["this.searchinput.nativeelement.value",{"_index":1106,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.seterrors(...responses",{"_index":686,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["this.settoggle",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["this.settoggle(this.togglesidenav",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["this.sidenav.toggle",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["this.snackbar.open(toast.message",{"_index":1320,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.subject.asobservable",{"_index":1374,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.subject.next",{"_index":1384,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.subscriptions.push",{"_index":1078,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.toast",{"_index":1319,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast(message",{"_index":1375,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastcomponent.open(toast",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastservice.error",{"_index":752,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["this.toastservice.gettoast().subscribe((toast",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastservice.info('data",{"_index":749,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["this.toggle",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["this.unsubscribeobservable",{"_index":1098,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["this.utilsservice.loading$.subscribe((loading",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["this.utilsservice.loading(subjectdata.loading",{"_index":1081,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["thisarg",{"_index":679,"title":{},"body":{"classes/DataSourceSubjData.html":{},"classes/ModelMap.html":{}}}],["throwifalreadyloaded",{"_index":631,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwifalreadyloaded(parentmodule",{"_index":645,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/functions.html":{}}}],["to[0",{"_index":492,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["to[0].keys",{"_index":494,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["to[0].set(key",{"_index":504,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["to[0].values",{"_index":496,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["to[0][i][torelation",{"_index":509,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["toast",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"interfaces/IToast.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["toast(message",{"_index":1355,"title":{},"body":{"injectables/ToastService.html":{}}}],["toast.component.pug",{"_index":1306,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.scss",{"_index":1305,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.message",{"_index":1327,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.options.closestring",{"_index":1321,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.options.duration",{"_index":1322,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.style",{"_index":1324,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast/toast.component",{"_index":636,"title":{},"body":{"modules/CoreModule.html":{}}}],["toastcomponent",{"_index":152,"title":{"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"modules/CoreModule.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toastdefaults",{"_index":1043,"title":{},"body":{"interfaces/IToast.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastdefaults.close_str",{"_index":1381,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastdefaults.duration",{"_index":1383,"title":{},"body":{"injectables/ToastService.html":{}}}],["toastoptions",{"_index":1037,"title":{"interfaces/ToastOptions.html":{}},"body":{"interfaces/IToast.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastservice",{"_index":158,"title":{"injectables/ToastService.html":{}},"body":{"components/AppComponent.html":{},"components/DepartmentListPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toaststyles",{"_index":1038,"title":{},"body":{"interfaces/IToast.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["toaststyles.error",{"_index":1377,"title":{},"body":{"injectables/ToastService.html":{}}}],["toaststyles.info",{"_index":1378,"title":{},"body":{"injectables/ToastService.html":{}}}],["toaststyles.success",{"_index":1376,"title":{},"body":{"injectables/ToastService.html":{}}}],["toaststyles.warning",{"_index":1379,"title":{},"body":{"injectables/ToastService.html":{}}}],["todo",{"_index":756,"title":{"todo.html":{}},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["toggle",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["togglefunc",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["togglesidenav",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["tonewrelation",{"_index":483,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["toolbar",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{}}}],["toolbar(color='primary').main",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbar(color=\\'primary\\').main",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbar.footer",{"_index":1001,"title":{},"body":{"components/FooterComponent.html":{}}}],["toolbar.menu",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["torelation",{"_index":487,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["transform",{"_index":1020,"title":{},"body":{"components/FooterComponent.html":{}}}],["tree",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["true",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":506,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["type",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"classes/Department.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"classes/Employee.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"interfaces/IBreadCrumb.html":{},"interfaces/IToast.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1527,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/eslint",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["types/lodash",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["types/npm",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["types/typescript",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["types/webpack",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":1506,"title":{},"body":{"index.html":{}}}],["unsubscribeobservable",{"_index":1123,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["uppercase",{"_index":1021,"title":{},"body":{"components/FooterComponent.html":{}}}],["ups...something",{"_index":753,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["uris",{"_index":427,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{},"miscellaneous/enumerations.html":{}}}],["url",{"_index":548,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["url}/${path",{"_index":580,"title":{},"body":{"components/BreadcrumbComponent.html":{},"interfaces/IBreadCrumb.html":{}}}],["use",{"_index":1495,"title":{},"body":{"index.html":{}}}],["utils.service",{"_index":1360,"title":{},"body":{"injectables/ToastService.html":{}}}],["utilsservice",{"_index":20,"title":{"injectables/UtilsService.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DepartmentListPage.html":{},"classes/DepartmentsDataSource.html":{},"classes/EmployeesDataSource.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["v",{"_index":1370,"title":{},"body":{"injectables/ToastService.html":{}}}],["v.tostring(16",{"_index":1373,"title":{},"body":{"injectables/ToastService.html":{}}}],["value",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"injectables/DepartmentService.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeListPage.html":{},"injectables/EmployeeService.html":{},"classes/EmployeesDataSource.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"classes/ModelMap.html":{},"classes/ModelResponse.html":{},"classes/RawResponse.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":463,"title":{},"body":{"classes/BaseEntityModel.html":{},"classes/BaseIdModel.html":{},"classes/BooleanResponse.html":{},"interfaces/BooleanResponseData.html":{},"classes/EntityPostRequest.html":{},"classes/EntityPutRequest.html":{},"classes/ErrorResponse.html":{},"classes/ModelResponse.html":{},"interfaces/QueryOptions.html":{},"classes/RawResponse.html":{},"classes/ServerResponse.html":{}}}],["var",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{},"components/ModalDeleteComponent.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1529,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1480,"title":{},"body":{"index.html":{}}}],["via",{"_index":1510,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/EmployeeEditPage.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["viewchild('input",{"_index":1075,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["viewchild(matpaginator",{"_index":1071,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["viewchild(matsidenav",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild(toastcomponent",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/EmployeeEditPage.html":{}}}],["viewchildren",{"_index":1051,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["viewchildren(matsort",{"_index":1073,"title":{},"body":{"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{}}}],["viewencapsulation",{"_index":1316,"title":{},"body":{"components/ToastComponent.html":{}}}],["viewencapsulation.none",{"_index":1304,"title":{},"body":{"components/ToastComponent.html":{}}}],["void",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/BreadcrumbComponent.html":{},"classes/DataSourceSubjData.html":{},"components/DepartmentListPage.html":{},"components/DepartmentNewPage.html":{},"classes/DepartmentsDataSource.html":{},"components/EmployeeEditPage.html":{},"components/EmployeeListPage.html":{},"components/EmployeeNewPage.html":{},"classes/EmployeesDataSource.html":{},"components/FooterComponent.html":{},"interfaces/ItemAction.html":{},"components/ListComponent.html":{},"interfaces/ListDataSource.html":{},"injectables/LoggerService.html":{},"components/ModalDeleteComponent.html":{},"classes/ModelMap.html":{},"components/NotFoundComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UtilsService.html":{}}}],["warn",{"_index":1344,"title":{},"body":{"injectables/ToastService.html":{}}}],["warn(message",{"_index":1357,"title":{},"body":{"injectables/ToastService.html":{}}}],["warning",{"_index":1042,"title":{},"body":{"interfaces/IToast.html":{},"components/ToastComponent.html":{},"interfaces/ToastOptions.html":{},"miscellaneous/enumerations.html":{}}}],["weight",{"_index":604,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{}}}],["went",{"_index":754,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["width",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/ListComponent.html":{}}}],["wrong",{"_index":755,"title":{},"body":{"components/DepartmentListPage.html":{},"components/EmployeeListPage.html":{}}}],["x",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["xxxx",{"_index":1362,"title":{},"body":{"injectables/ToastService.html":{}}}],["xxxxxxxx",{"_index":1361,"title":{},"body":{"injectables/ToastService.html":{}}}],["xxxxxxxxxxxx'.replace(/[xy]/g",{"_index":1365,"title":{},"body":{"injectables/ToastService.html":{}}}],["yes",{"_index":1261,"title":{},"body":{"classes/ModelMap.html":{},"injectables/ToastService.html":{}}}],["yxxx",{"_index":1364,"title":{},"body":{"injectables/ToastService.html":{}}}],["z",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["z2",{"_index":1160,"title":{},"body":{"components/ListComponent.html":{}}}],["z4",{"_index":1287,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["z8",{"_index":1182,"title":{},"body":{"components/ListComponent.html":{}}}],["z8.sidenav(#drawer",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DepartmentModule.html":{},"modules/EmployeeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                    Private\n                                formatError\n                            \n                            \n                                getAll\n                            \n                            \n                                    Private\n                                getParams\n                            \n                            \n                                    Private\n                                next\n                            \n                            \n                                post\n                            \n                            \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/api.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                        UtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(path, subject: BehaviorSubject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/api.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subject\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            formatError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatError(subject: BehaviorSubject, responseRef, err: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/api.service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subject\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responseRef\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    err\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll(path: string, params: QueryOptions, subject: BehaviorSubject, model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/api.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                QueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subject\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParams(apiQueryFilter: QueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/api.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    apiQueryFilter\n                                    \n                                                QueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            next\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    next(subject: BehaviorSubject, loading: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/api.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subject\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    loading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            post\n                        \n                        \n                    \n                \n            \n            \n                \npost(path: string, body: EntityPostRequest, subject: BehaviorSubject, model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/api.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EntityPostRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subject\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(path: string, body: EntityPutRequest, subject: BehaviorSubject, model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/api.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EntityPutRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subject\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { catchError, finalize, map, filter } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport {\n  QueryOptions,\n  EntityPostRequest,\n  EntityPutRequest,\n} from 'src/app/core/models/api.interface';\nimport {\n  BaseEntityModel,\n  ModelResponse,\n  BooleanResponse,\n} from '../models/api.interface';\nimport { UtilsService } from '../services/utils.service';\nimport { ModelMap } from '../models/app.interface';\nimport { ErrorResponse, RawResponse } from '../models/api.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(private http: HttpClient, private utilsService: UtilsService) {}\n\n  private next(subject: BehaviorSubject, loading: boolean) {\n    subject.next(loading);\n  }\n\n  private formatError(\n    subject: BehaviorSubject,\n    responseRef: new (...args: any[]) => T,\n    err: Error,\n  ) {\n    this.next(subject, false);\n    return new responseRef([], 0, err);\n  }\n\n  private getParams(apiQueryFilter: QueryOptions = {}) {\n    let queryParams = new HttpParams();\n    Object.keys(apiQueryFilter).forEach((paramKey) => {\n      const paramValue = apiQueryFilter[paramKey];\n      if (paramValue instanceof Array) {\n        paramValue.forEach((value) => {\n          queryParams = queryParams.append(`${paramKey.toString()}[]`, value);\n        });\n      } else if (paramValue instanceof Object) {\n        if (paramKey === 'sortColumns') {\n          Object.keys(paramValue).forEach((value: string) => {\n            queryParams = queryParams.append(`${paramKey.toString()}[]`, value);\n          });\n          Object.values(paramValue).forEach((value: string) => {\n            queryParams = queryParams.append(`sortDirections[]`, value);\n          });\n        }\n      } else {\n        queryParams = queryParams.set(paramKey, paramValue);\n      }\n    });\n\n    return queryParams;\n  }\n\n  getAll(\n    path: string,\n    params: QueryOptions,\n    subject: BehaviorSubject,\n    model: new () => BaseEntityModel,\n  ): Observable {\n    this.next(subject, true);\n    return this.http\n      .get(`${environment.api_url}${path}`, {\n        params: this.getParams(params),\n      })\n      .pipe(\n        map((response: RawResponse) => {\n          return new ModelResponse(\n            response.data,\n            response.count,\n            response.error,\n            model,\n            params,\n          );\n        }),\n        catchError((err) => of(this.formatError(subject, ModelResponse, err))),\n        finalize(() => this.next(subject, false)),\n      );\n  }\n\n  put(\n    path: string,\n    body: EntityPutRequest,\n    subject: BehaviorSubject,\n    model: new () => BaseEntityModel,\n  ): Observable {\n    this.next(subject, true);\n    return this.http.put(`${environment.api_url}${path}`, body).pipe(\n      map((response: RawResponse) => {\n        return new ModelResponse(\n          response.data,\n          response.count,\n          response.error,\n          model,\n        );\n      }),\n      catchError((err) => of(this.formatError(subject, ModelResponse, err))),\n      finalize(() => this.next(subject, false)),\n    );\n  }\n\n  post(\n    path: string,\n    body: EntityPostRequest,\n    subject: BehaviorSubject,\n    model: new () => BaseEntityModel,\n  ): Observable {\n    this.next(subject, true);\n    return this.http.post(`${environment.api_url}${path}`, body).pipe(\n      map((response: RawResponse) => {\n        return new ModelResponse(\n          response.data,\n          response.count,\n          response.error,\n          model,\n        );\n      }),\n      catchError((err) => of(this.formatError(subject, ModelResponse, err))),\n      finalize(() => this.next(subject, false)),\n    );\n  }\n\n  delete(path, subject: BehaviorSubject): Observable {\n    this.next(subject, true);\n    return this.http.delete(`${environment.api_url}${path}`).pipe(\n      map((response: BooleanResponse) => {\n        return new BooleanResponse(response.data, response.error);\n      }),\n      catchError((err) => of(this.formatError(subject, BooleanResponse, err))),\n      finalize(() => this.next(subject, false)),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset\n                            \n                            \n                                isHandset$\n                            \n                            \n                                loading\n                            \n                            \n                                sidenav\n                            \n                            \n                                toastComponent\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setToggle\n                            \n                            \n                                toggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, toastService: ToastService, utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                        UtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setToggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setToggle(toggleFunc: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toggleFunc\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map((result) => result.matches))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSidenav)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToastComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ToastComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map } from 'rxjs/operators';\nimport { ToastService } from './core/services/toast.service';\nimport { IToast } from './core/models/toast.interface';\nimport { ToastComponent } from './core/toast/toast.component';\nimport { UtilsService } from './core/services/utils.service';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.pug',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  loading = false;\n  isHandset = false;\n  @ViewChild(ToastComponent) toastComponent: ToastComponent;\n  @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n  isHandset$: Observable = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map((result) => result.matches));\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private toastService: ToastService,\n    private utilsService: UtilsService,\n  ) {\n    // Toast message service subscriptor for app\n    this.toastService.getToast().subscribe((toast: IToast) => {\n      this.toastComponent.open(toast);\n    });\n\n    // loading subscriptor\n    this.utilsService.loading$.subscribe((loading: boolean) => {\n      this.loading = loading;\n    });\n\n    // Breakpoint mobile subscriptor\n    this.isHandset$.subscribe((isHandset) => {\n      if (this.isHandset !== isHandset) {\n        if (!isHandset) {\n          this.setToggle(() => {});\n        } else {\n          this.setToggle(this.toggleSidenav);\n        }\n      }\n\n      this.isHandset = isHandset;\n    });\n  }\n\n  toggle: () => void = () => {};\n\n  toggleSidenav(): void {\n    this.sidenav.toggle();\n  }\n\n  private setToggle(toggleFunc: () => void) {\n    this.toggle = toggleFunc;\n    return true;\n  }\n}\n\n    \n\n    \n        mat-sidenav-container.sidenav-container\n  mat-sidenav.mat-elevation-z8.sidenav(#drawer='', (click)='toggle()', fixedinviewport='true', [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\", [mode]=\"(isHandset$ | async) ? 'over' : 'side'\", [opened]='!(isHandset$ | async)')\n    mat-toolbar.menu\n      .logo\n      span App\n    mat-nav-list.nav\n      a(mat-list-item, routerLink='/employees', routerLinkActive=\"active\")\n        mat-icon.icon home\n        span.label Employee's List\n      a(mat-list-item, routerLink='/departments', routerLinkActive=\"active\")\n        mat-icon.icon home\n        span.label Department's List\n  mat-sidenav-content\n    mat-toolbar(color='primary').main-toolbar\n      button(type='button', aria-label='Toggle sidenav', mat-icon-button='', (click)='drawer.toggle()', *ngIf='isHandset$ | async')\n        mat-icon(mdSuffix, aria-label='Side nav toggle icon') menu\n      app-breadcrumb.hidden-sm-down\n    main(fxLayout='column', fxLayoutAlign='start start')\n      .mask.gradient\n      .loading-shade(*ngIf=\"loading\", fxLayout='column', fxFlex, fxLayoutAlign=\"start\", fxLayoutAlign.xs=\"center\")\n        mat-spinner\n      .container.container--fluid.main.p-x-2\n        router-outlet\n    app-footer\napp-toast\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import 'global';\n\n.loading-shade {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  padding-top: 84px;\n\n  @include layout-bp(xs) {\n    padding: 0;\n  }\n\n  mat-spinner {\n    margin: 0 auto;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-sidenav-container.sidenav-container  mat-sidenav.mat-elevation-z8.sidenav(#drawer=\\'\\', (click)=\\'toggle()\\', fixedinviewport=\\'true\\', [attr.role]=\"(isHandset$ | async) ? \\'dialog\\' : \\'navigation\\'\", [mode]=\"(isHandset$ | async) ? \\'over\\' : \\'side\\'\", [opened]=\\'!(isHandset$ | async)\\')    mat-toolbar.menu      .logo      span App    mat-nav-list.nav      a(mat-list-item, routerLink=\\'/employees\\', routerLinkActive=\"active\")        mat-icon.icon home        span.label Employee\\'s List      a(mat-list-item, routerLink=\\'/departments\\', routerLinkActive=\"active\")        mat-icon.icon home        span.label Department\\'s List  mat-sidenav-content    mat-toolbar(color=\\'primary\\').main-toolbar      button(type=\\'button\\', aria-label=\\'Toggle sidenav\\', mat-icon-button=\\'\\', (click)=\\'drawer.toggle()\\', *ngIf=\\'isHandset$ | async\\')        mat-icon(mdSuffix, aria-label=\\'Side nav toggle icon\\') menu      app-breadcrumb.hidden-sm-down    main(fxLayout=\\'column\\', fxLayoutAlign=\\'start start\\')      .mask.gradient      .loading-shade(*ngIf=\"loading\", fxLayout=\\'column\\', fxFlex, fxLayoutAlign=\"start\", fxLayoutAlign.xs=\"center\")        mat-spinner      .container.container--fluid.main.p-x-2        router-outlet    app-footerapp-toast'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { AppComponent } from './app.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    AppRoutingModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundComponent } from '~core/not-found/not-found.component';\n\nexport const APP_ROUTES: Routes = [\n  {\n    path: 'employees',\n    data: {\n      breadcrumb: 'employees'\n    },\n    loadChildren: () =>\n      \"import('./modules/employee/employee.module').then(m => m.EmployeeModule)\"\n  },\n  {\n    path: 'departments',\n    data: {\n      breadcrumb: 'departments'\n    },\n    loadChildren: () =>\n      \"import('./modules/department/department.module').then(m => m.DepartmentModule)\"\n  },\n  { path: '', redirectTo: '/employees', pathMatch: 'full' },\n  {\n    path: '**',\n    data: {\n      breadcrumb: 'not-found'\n    },\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(APP_ROUTES)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityModel.html":{"url":"classes/BaseEntityModel.html","title":"class - BaseEntityModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                Base Entity model object\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/api.interface.ts:373\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseIdModel.html":{"url":"classes/BaseIdModel.html","title":"class - BaseIdModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseIdModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                Base Entity ID model object\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/api.interface.ts:382\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/api.interface.ts:382\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BooleanResponse.html":{"url":"classes/BooleanResponse.html","title":"class - BooleanResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BooleanResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                Server boolean response interface\n\n            \n\n            \n                Extends\n            \n            \n                        ServerResponse\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getError\n                            \n                            \n                                getError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: BooleanResponseData, error: Error)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/api.interface.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        BooleanResponseData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    Error\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ServerResponse\n\n                                \n                            \n                        \n                            \n                                    Defined in         ServerResponse:50\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ServerResponse\n\n                                \n                            \n                        \n                            \n                                    Defined in         ServerResponse:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ErrorResponse\n\n                                \n                            \n                        \n                            \n                                    Defined in         ErrorResponse:33\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError()\n                \n            \n\n\n            \n                \n                    Inherited from         ServerResponse\n\n                \n            \n            \n                \n                        Defined in         ServerResponse:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError()\n                \n            \n\n\n            \n                \n                    Inherited from         ErrorResponse\n\n                \n            \n            \n                \n                        Defined in         ErrorResponse:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BooleanResponseData.html":{"url":"interfaces/BooleanResponseData.html","title":"interface - BooleanResponseData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BooleanResponseData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                Server BooleanResponse data type interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/breadcrumb/breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        Breadcrumb navigation component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumb\n            \n\n            \n                styleUrls\n                ./breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                breadcrumbs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildBreadCrumb\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/breadcrumb/breadcrumb.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildBreadCrumb\n                        \n                        \n                    \n                \n            \n            \n                \nbuildBreadCrumb(route: ActivatedRoute, url: string, breadcrumbs: IBreadCrumb[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/breadcrumb/breadcrumb.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRoute\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    breadcrumbs\n                                    \n                                                IBreadCrumb[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IBreadCrumb[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/breadcrumb/breadcrumb.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            breadcrumbs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IBreadCrumb[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/breadcrumb/breadcrumb.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  Router,\n  ActivatedRoute,\n  NavigationEnd,\n  RouterEvent,\n} from '@angular/router';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\n\n\n/**\n * Breadcrumb item interface\n * @export\n */\nexport interface IBreadCrumb {\n  label: string;\n  url: string;\n}\n\n\n/**\n * Breadcrumb navigation component\n * @export\n */\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.pug',\n  styleUrls: ['./breadcrumb.component.scss'],\n})\nexport class BreadcrumbComponent implements OnInit {\n  public breadcrumbs: IBreadCrumb[];\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {\n    this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n  }\n\n  ngOnInit() {\n    this.router.events\n      .pipe(\n        filter((event: RouterEvent) => event instanceof NavigationEnd),\n        distinctUntilChanged(),\n      )\n      .subscribe(() => {\n        this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n      });\n  }\n\n  buildBreadCrumb(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: IBreadCrumb[] = [],\n  ): IBreadCrumb[] {\n    let label =\n      route.routeConfig && route.routeConfig.data\n        ? route.routeConfig.data.breadcrumb\n        : '';\n    let path =\n      route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n    // Remove dynamic route if any exist\n    const lastRoutePart = path.split('/').pop();\n    const isDynamicRoute = lastRoutePart.startsWith(':');\n    if (isDynamicRoute && !!route.snapshot) {\n      const paramName = lastRoutePart.split(':')[1];\n      path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n      label = route.snapshot.params[paramName];\n    }\n\n    // Get next url path\n    const nextUrl = path ? `${url}/${path}` : url;\n\n    const breadcrumb: IBreadCrumb = {\n      label,\n      url: nextUrl,\n    };\n\n    const newBreadcrumbs = breadcrumb.label\n      ? [...breadcrumbs, breadcrumb]\n      : [...breadcrumbs];\n\n    if (route.firstChild) {\n      return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n    }\n\n    return newBreadcrumbs;\n  }\n}\n\n    \n\n    \n        ol.breadcrumb\n  li(*ngFor='let breadcrumb of breadcrumbs')\n    span([routerLink]='breadcrumb.url' routerLinkActive='router-link-active')\n      | {{ breadcrumb.label }}\n\n    \n\n    \n                \n                    ./breadcrumb.component.scss\n                \n                @import 'global';\n\n.breadcrumb {\n  @include flexbox();\n  margin: 0;\n  padding: 0;\n\n  li {\n    list-style: none;\n    margin: 0 5px;\n\n    span {\n      font-size: 1.2em;\n      color: #ffffff;\n      background-color: $color_secondary;\n      padding: 2px 6px;\n      font-weight: $font_weight_normal;\n      opacity: 0.6;\n      border: 1px solid rgba($color_main, .2);\n      cursor: pointer;\n    }\n  }\n\n  li:first-child {\n    margin: 0 !important;\n    padding: 0 !important;\n\n    span {\n      margin-right: 5px;\n    }\n  }\n\n  li::after {\n    content: \"-\";\n    color: darkgrey;\n  }\n\n  li:last-child::after {\n    content: \"\";\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'ol.breadcrumb  li(*ngFor=\\'let breadcrumb of breadcrumbs\\')    span([routerLink]=\\'breadcrumb.url\\' routerLinkActive=\\'router-link-active\\')      | {{ breadcrumb.label }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nBreadcrumbComponent->CoreModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nCoreModule -->\n\nNotFoundComponent->CoreModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nCoreModule -->\n\nToastComponent->CoreModule\n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nCoreModule->BreadcrumbComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nNotFoundComponent \n\nNotFoundComponent \n\nNotFoundComponent  -->\n\nCoreModule->NotFoundComponent \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nCoreModule->ToastComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            ToastComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            ToastComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { throwIfAlreadyLoaded } from 'src/app/core/core.guard';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { FooterComponent } from './footer/footer.component';\nimport { ToastComponent } from './toast/toast.component';\nimport { CommonModule } from '@angular/common';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { RouterModule } from '@angular/router';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    BreadcrumbComponent,\n    NotFoundComponent,\n    ToastComponent,\n    FooterComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    HttpClientModule,\n    LayoutModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatCardModule,\n  ],\n  exports: [\n    BreadcrumbComponent,\n    NotFoundComponent,\n    FooterComponent,\n    ToastComponent,\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataSourceSubjData.html":{"url":"classes/DataSourceSubjData.html","title":"class - DataSourceSubjData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataSourceSubjData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/app.interface.ts\n        \n\n            \n                Description\n            \n            \n                Data source subject data class.\nBase data source class for entities from server responses\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                errors\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getErrors\n                            \n                            \n                                    Public\n                                hasErrors\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                set\n                            \n                            \n                                    Public\n                                setErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/app.interface.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/app.interface.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Error[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/app.interface.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/app.interface.ts:51\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/app.interface.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Error[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/app.interface.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/app.interface.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         DataSourceSubjData\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(loading: boolean, count: number, responses: ServerResponse[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/app.interface.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    responses\n                                    \n                                                ServerResponse[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataSourceSubjData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrors(responses: ServerResponse[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/app.interface.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    responses\n                                    \n                                                ServerResponse[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityModel, ServerResponse } from './api.interface';\n\n/**\n * ModelMap extended Map for Entity models\n *\n * @export\n * @extends {Map}\n */\nexport class ModelMap extends Map {\n  constructor(\n    map: Map,\n    mappingColumn: string,\n    model: new () => T,\n  ) {\n    super(map);\n    this.mappedBy = mappingColumn;\n    this.modelRef = model;\n  }\n\n  /**\n   * Entity model class reference\n   */\n  protected modelRef: new () => T;\n\n  /**\n   * Entity key mapped by\n   */\n  public mappedBy: string;\n\n  forEach(\n    callbackfn: (value: T[], key: string, map: ModelMap) => void,\n    thisArg?: any,\n  ): void {\n    for (const [key, value] of this.entries()) {\n      callbackfn.call(thisArg, value, key, this);\n    }\n  }\n\n  get(key: string): T[] {\n    const arrValue = super.get(key);\n    return arrValue.map((item) => Object.assign(new this.modelRef(), item));\n  }\n}\n\n/**\n * Data source subject data class.\n * Base data source class for entities from server responses\n * @export\n */\nexport class DataSourceSubjData {\n  public loading: boolean;\n  public count = 0;\n  public errors: Error[] = [];\n\n  constructor(loading: boolean) {\n    this.loading = loading;\n  }\n\n  public set(\n    loading: boolean,\n    count: number,\n    ...responses: ServerResponse[]\n  ): DataSourceSubjData {\n    this.loading = loading;\n    this.count = count;\n    this.setErrors(...responses);\n    return this;\n  }\n\n  public reset(): DataSourceSubjData {\n    this.loading = !this.loading;\n    this.count = 0;\n    this.errors = [];\n    return this;\n  }\n\n  public hasErrors() {\n    return !!this.errors && this.errors.length;\n  }\n\n  public setErrors(...responses: ServerResponse[]) {\n    this.errors = responses\n      .map((response) => response.getError())\n      .filter((err) => !!err);\n  }\n\n  public getErrors(): Error[] {\n    return this.errors;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Department.html":{"url":"classes/Department.html","title":"class - Department","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Department\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/department.model.ts\n        \n\n            \n                Description\n            \n            \n                Department Entity model\n\n            \n\n            \n                Extends\n            \n            \n                        BaseIdModel\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                employees\n                            \n                            \n                                name\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            employees\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Employee[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/department.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/department.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseIdModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseIdModel:382\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Employee } from 'src/app/core/models/employee.model';\nimport { BaseIdModel } from './api.interface';\n\n\n/**\n * Department Entity model\n * @export\n * @extends {BaseIdModel}\n */\nexport class Department extends BaseIdModel {\n  name: string;\n  employees?: Employee[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DepartmentListPage.html":{"url":"components/DepartmentListPage.html","title":"component - DepartmentListPage","body":"\n                   \n\n\n\n\n\n  Components\n  DepartmentListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/department/pages/list/list.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-department-list\n            \n\n            \n                styleUrls\n                ./list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./list.page.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cols\n                            \n                            \n                                departmentDataSource\n                            \n                            \n                                departmentListFilter\n                            \n                            \n                                departments\n                            \n                            \n                                departmentsLength\n                            \n                            \n                                displayedCols\n                            \n                            \n                                listItemActions\n                            \n                            \n                                mainButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                onListDataLoaded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(utilsService: UtilsService, departmentService: DepartmentService, departmenService: DepartmentService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/department/pages/list/list.page.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                        UtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        departmentService\n                                                  \n                                                        \n                                                                        DepartmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        departmenService\n                                                  \n                                                        \n                                                                        DepartmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/department/pages/list/list.page.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/department/pages/list/list.page.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \nedit(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/department/pages/list/list.page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onListDataLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nonListDataLoaded(status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/department/pages/list/list.page.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { key: 'id', value: 'Id', flex: '40%' },\n    { key: 'name', value: 'Name', flex: '60%' },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list.page.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            departmentDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DepartmentsDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list.page.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            departmentListFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    searchColumns: ['id', 'name'],\n    sortColumns: {},\n    itemsPerPage: 4,\n    page: 0,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list.page.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            departments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Department[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list.page.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            departmentsLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list.page.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedCols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['id', 'name', 'actions']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list.page.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItemActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ItemAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Delete',\n      action: this.delete,\n      icon: 'delete',\n    },\n    {\n      name: 'Edit',\n      action: this.edit,\n      icon: 'edit',\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list.page.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mainButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ItemAction\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Add Department',\n    icon: 'add',\n    action: this.add,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list.page.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Department } from '../../../../core/models/department.model';\nimport { DepartmentsDataSource } from './list-datasource';\nimport { QueryOptions } from 'src/app/core/models/api.interface';\nimport { DepartmentService } from 'src/app/core/http/department/department.service';\nimport { ToastService } from 'src/app/core/services/toast.service';\nimport { UtilsService } from 'src/app/core/services/utils.service';\nimport { ItemAction } from '../../../../shared/components/list/list.component';\n\n@Component({\n  selector: 'app-department-list',\n  templateUrl: './list.page.pug',\n  styleUrls: ['./list.page.scss'],\n})\n// tslint:disable-next-line: component-class-suffix\nexport class DepartmentListPage {\n  departmentDataSource: DepartmentsDataSource;\n  departmentListFilter: QueryOptions = {\n    searchColumns: ['id', 'name'],\n    sortColumns: {},\n    itemsPerPage: 4,\n    page: 0,\n  };\n  departments: Department[];\n  departmentsLength: number;\n  listItemActions: ItemAction[] = [\n    {\n      name: 'Delete',\n      action: this.delete,\n      icon: 'delete',\n    },\n    {\n      name: 'Edit',\n      action: this.edit,\n      icon: 'edit',\n    },\n  ];\n  mainButton: ItemAction = {\n    name: 'Add Department',\n    icon: 'add',\n    action: this.add,\n  };\n\n  cols = [\n    { key: 'id', value: 'Id', flex: '40%' },\n    { key: 'name', value: 'Name', flex: '60%' },\n  ];\n\n  displayedCols = ['id', 'name', 'actions'];\n\n  constructor(\n    private utilsService: UtilsService,\n    private departmentService: DepartmentService,\n    private departmenService: DepartmentService,\n    private toastService: ToastService,\n  ) {\n    this.departmentDataSource = new DepartmentsDataSource(\n      this.departmenService,\n    );\n  }\n\n  onListDataLoaded(status: boolean) {\n    if (status) {\n      this.toastService.info('Data loaded correctly!');\n    } else {\n      this.toastService.error(\n        'Ups...something went wrong when loading the data!',\n      );\n    }\n  }\n\n  add(event) {\n    // TODO: Add event implementation for adding new department\n  }\n\n  edit(event) {\n    // TODO: Add event implementation for department edit\n  }\n\n  delete(event) {\n    // TODO: Add event implementation for delete department event\n  }\n}\n\n    \n\n    \n        app-list(\n  [cols]='cols',\n  [displayedCols]='displayedCols',\n  [listFilter]='departmentListFilter',\n  [(datasource)]='departmentDataSource',\n  [actions]='listItemActions',\n  [mainButton]='mainButton',\n  (list-data-loaded)='onListDataLoaded($event)')\n\n    \n\n    \n                \n                    ./list.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'app-list(  [cols]=\\'cols\\',  [displayedCols]=\\'displayedCols\\',  [listFilter]=\\'departmentListFilter\\',  [(datasource)]=\\'departmentDataSource\\',  [actions]=\\'listItemActions\\',  [mainButton]=\\'mainButton\\',  (list-data-loaded)=\\'onListDataLoaded($event)\\')'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DepartmentListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DepartmentModule.html":{"url":"modules/DepartmentModule.html","title":"module - DepartmentModule","body":"\n                   \n\n\n\n\n    Modules\n    DepartmentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DepartmentModule\n\n\n\ncluster_DepartmentModule_declarations\n\n\n\ncluster_DepartmentModule_imports\n\n\n\ncluster_DepartmentModule_exports\n\n\n\n\nDepartmentListPage\n\nDepartmentListPage\n\n\n\nDepartmentModule\n\nDepartmentModule\n\nDepartmentModule -->\n\nDepartmentListPage->DepartmentModule\n\n\n\n\n\nDepartmentNewPage\n\nDepartmentNewPage\n\nDepartmentModule -->\n\nDepartmentNewPage->DepartmentModule\n\n\n\n\n\nDepartmentRoutingModule \n\nDepartmentRoutingModule \n\nDepartmentRoutingModule  -->\n\nDepartmentModule->DepartmentRoutingModule \n\n\n\n\n\nDepartmentRoutingModule\n\nDepartmentRoutingModule\n\nDepartmentModule -->\n\nDepartmentRoutingModule->DepartmentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDepartmentModule -->\n\nSharedModule->DepartmentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/department/department.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DepartmentListPage\n                        \n                        \n                            DepartmentNewPage\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DepartmentListPage\n                        \n                        \n                            DepartmentNewPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DepartmentRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DepartmentRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { DepartmentRoutingModule } from './department.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DepartmentListPage } from '../department/pages/list/list.page';\nimport { DepartmentNewPage } from '../department/pages/new/new.page';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\n\n@NgModule({\n  imports: [\n    DepartmentRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatDividerModule\n  ],\n  declarations: [DepartmentListPage, DepartmentNewPage],\n  entryComponents: [DepartmentListPage, DepartmentNewPage],\n  exports: [DepartmentRoutingModule]\n})\nexport class DepartmentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DepartmentNewPage.html":{"url":"components/DepartmentNewPage.html","title":"component - DepartmentNewPage","body":"\n                   \n\n\n\n\n\n  Components\n  DepartmentNewPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/department/pages/new/new.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                department-new\n            \n\n            \n                styleUrls\n                ./new.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./new.page.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/department/pages/new/new.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/department/pages/new/new.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'department-new',\n  templateUrl: './new.page.pug',\n  styleUrls: ['./new.page.scss']\n})\nexport class DepartmentNewPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        span New department page\n\n    \n\n    \n                \n                    ./new.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'span New department page'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DepartmentNewPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DepartmentRoutingModule.html":{"url":"modules/DepartmentRoutingModule.html","title":"module - DepartmentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DepartmentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/department/department.routing.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DepartmentListPage } from 'src/app/modules/department/pages/list/list.page';\nimport { DepartmentNewPage } from 'src/app/modules/department/pages/new/new.page';\n\nexport const DEPARTMENT_ROUTES: Routes = [\n  {\n    path: '',\n    component: DepartmentListPage\n  },\n  {\n    path: 'new',\n    component: DepartmentNewPage,\n    data: {\n      breadcrumb: 'new',\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(DEPARTMENT_ROUTES)],\n  exports: [RouterModule]\n})\nexport class DepartmentRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DepartmentService.html":{"url":"injectables/DepartmentService.html","title":"injectable - DepartmentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DepartmentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/department/department.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/department/department.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(department: Department)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/department/department.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    department\n                                    \n                                                Department\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(department: Department)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/department/department.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    department\n                                    \n                                                Department\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(params: QueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/department/department.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                QueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(department: Department)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/department/department.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    department\n                                    \n                                                Department\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/http/department/department.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/http/department/department.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Department } from 'src/app/core/models/department.model';\nimport {\n  ModelResponse,\n  EntityPostRequest,\n  BooleanResponse,\n  EntityPutRequest,\n} from '../../models/api.interface';\nimport { QueryOptions, API_URIS } from 'src/app/core/models/api.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DepartmentService {\n  private loadingSubject: BehaviorSubject;\n  public loading$: Observable;\n\n  constructor(private apiService: ApiService) {\n    this.loadingSubject = new BehaviorSubject(false);\n    this.loading$ = this.loadingSubject.asObservable();\n  }\n\n  public query(params: QueryOptions = {}): Observable {\n    return this.apiService.getAll(\n      API_URIS.DEPARTMENT,\n      params,\n      this.loadingSubject,\n      Department,\n    );\n  }\n\n  public save(department: Department): Observable {\n    return this.apiService.put(\n      `${API_URIS.EMPLOYEE}/${department.id}`,\n      new EntityPutRequest(department),\n      this.loadingSubject,\n      Department,\n    );\n  }\n\n  public create(department: Department): Observable {\n    return this.apiService.post(\n      `${API_URIS.EMPLOYEE}/`,\n      new EntityPostRequest(department),\n      this.loadingSubject,\n      Department,\n    );\n  }\n\n  public delete(department: Department): Observable {\n    return this.apiService.delete(\n      `${API_URIS.DEPARTMENT}/${department.id}`,\n      this.loadingSubject,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DepartmentsDataSource.html":{"url":"classes/DepartmentsDataSource.html","title":"class - DepartmentsDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DepartmentsDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/department/pages/list/list-datasource.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n            \n                Implements\n            \n            \n                            ListDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataSourceSubjData\n                            \n                            \n                                    Public\n                                dataSourceSubjData$\n                            \n                            \n                                    Private\n                                dataSourceSubject\n                            \n                            \n                                    Private\n                                departmentsDataSourceSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                    Public\n                                loadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(departmentService: DepartmentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/department/pages/list/list-datasource.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        departmentService\n                                                  \n                                                        \n                                                                        DepartmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataSourceSubjData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DataSourceSubjData(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list-datasource.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSourceSubjData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.dataSourceSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list-datasource.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataSourceSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    this.dataSourceSubjData,\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list-datasource.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            departmentsDataSourceSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/department/pages/list/list-datasource.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(collectionViewer: CollectionViewer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/department/pages/list/list-datasource.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionViewer\n                                    \n                                            CollectionViewer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect(collectionViewer: CollectionViewer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/department/pages/list/list-datasource.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionViewer\n                                    \n                                            CollectionViewer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadData(options: QueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/department/pages/list/list-datasource.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                QueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\nimport { Department } from 'src/app/core/models/department.model';\nimport { DepartmentService } from 'src/app/core/http/department/department.service';\nimport { QueryOptions } from 'src/app/core/models/api.interface';\nimport { UtilsService } from 'src/app/core/services/utils.service';\nimport { DataSourceSubjData } from 'src/app/core/models/app.interface';\nimport { ListDataSource } from '~shared/components/list/list.component';\nimport { BaseIdModel } from '../../../../core/models/api.interface';\n\nexport class DepartmentsDataSource extends DataSource\n  implements ListDataSource {\n  private departmentsDataSourceSubject = new BehaviorSubject([]);\n  private dataSourceSubjData = new DataSourceSubjData(false);\n  private dataSourceSubject = new BehaviorSubject(\n    this.dataSourceSubjData,\n  );\n  public dataSourceSubjData$ = this.dataSourceSubject.asObservable();\n\n  constructor(private departmentService: DepartmentService) {\n    super();\n  }\n\n  public loadData(options: QueryOptions) {\n    this.dataSourceSubject.next(this.dataSourceSubjData.reset());\n    this.departmentService\n      .query(options)\n      .pipe(map((res) => res))\n      .subscribe((results) => {\n        this.dataSourceSubjData.setErrors(results);\n        if (!this.dataSourceSubjData.hasErrors()) {\n          this.departmentsDataSourceSubject.next(\n            results.data[0] as Department[],\n          );\n        }\n\n        this.dataSourceSubject.next(\n          this.dataSourceSubjData.set(false, results.count),\n        );\n      });\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable {\n    return this.departmentsDataSourceSubject.asObservable();\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.departmentsDataSourceSubject.complete();\n    this.dataSourceSubject.complete();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Employee.html":{"url":"classes/Employee.html","title":"class - Employee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Employee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/employee.model.ts\n        \n\n            \n                Description\n            \n            \n                Employee Entity model\n\n            \n\n            \n                Extends\n            \n            \n                        BaseIdModel\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                age\n                            \n                            \n                                created\n                            \n                            \n                                    Optional\n                                department\n                            \n                            \n                                departmentId\n                            \n                            \n                                lastname\n                            \n                            \n                                name\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/employee.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/employee.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            department\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Department\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/employee.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            departmentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/employee.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/employee.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/employee.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseIdModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseIdModel:382\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseIdModel } from './api.interface';\nimport { Department } from './department.model';\n\n\n/**\n * Employee Entity model\n * @export\n * @extends {BaseIdModel}\n */\nexport class Employee extends BaseIdModel {\n  name: string;\n  lastname: string;\n  age?: number;\n  departmentId: number;\n  created: Date;\n  department?: Department;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmployeeEditPage.html":{"url":"components/EmployeeEditPage.html","title":"component - EmployeeEditPage","body":"\n                   \n\n\n\n\n\n  Components\n  EmployeeEditPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/employee/pages/edit/edit.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                employee-edit\n            \n\n            \n                styleUrls\n                ./edit.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit.page.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toastComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/employee/pages/edit/edit.page.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/employee/pages/edit/edit.page.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toastComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToastComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ToastComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/edit/edit.page.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ToastService } from '../../../../core/services/toast.service';\nimport { ToastComponent } from '../../../../core/toast/toast.component';\nimport { IToast } from '../../../../core/models/toast.interface';\n\n@Component({\n  selector: 'employee-edit',\n  templateUrl: './edit.page.pug',\n  styleUrls: ['./edit.page.scss'],\n})\nexport class EmployeeEditPage implements OnInit {\n  @ViewChild(ToastComponent) toastComponent: ToastComponent;\n\n  constructor() {\n  }\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        div\n\n    \n\n    \n                \n                    ./edit.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'div'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmployeeEditPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmployeeListPage.html":{"url":"components/EmployeeListPage.html","title":"component - EmployeeListPage","body":"\n                   \n\n\n\n\n\n  Components\n  EmployeeListPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/employee/pages/list/list.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-employee-list\n            \n\n            \n                styleUrls\n                ./list.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./list.page.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cols\n                            \n                            \n                                displayedCols\n                            \n                            \n                                employeeDataSource\n                            \n                            \n                                employeeListFilter\n                            \n                            \n                                employees\n                            \n                            \n                                employeesLength\n                            \n                            \n                                listItemActions\n                            \n                            \n                                mainButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                onListDataLoaded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeService: EmployeeService, departmenService: DepartmentService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/employee/pages/list/list.page.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        departmenService\n                                                  \n                                                        \n                                                                        DepartmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/employee/pages/list/list.page.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/employee/pages/list/list.page.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            edit\n                        \n                        \n                    \n                \n            \n            \n                \nedit(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/employee/pages/list/list.page.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onListDataLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nonListDataLoaded(status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/employee/pages/list/list.page.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { key: 'id', value: 'Id', flex: '9%' },\n    { key: 'name', value: 'Name', flex: '17%' },\n    { key: 'lastname', value: 'Lastname', flex: '17%' },\n    { key: 'department.name', value: 'Department', flex: '22%' },\n    { key: 'age', value: 'Age', flex: '10%' },\n    { key: 'created', value: 'Created', flex: '25%' },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list.page.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedCols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'id',\n    'name',\n    'lastname',\n    'department.name',\n    'age',\n    'created',\n    'actions',\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list.page.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            employeeDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EmployeesDataSource\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list.page.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            employeeListFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    searchColumns: ['id', 'name', 'lastname'],\n    sortColumns: {},\n    itemsPerPage: 5,\n    page: 0,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list.page.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            employees\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Employee[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list.page.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            employeesLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list.page.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listItemActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ItemAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      name: 'Delete',\n      action: this.delete,\n      icon: 'delete',\n    },\n    {\n      name: 'Edit',\n      action: this.edit,\n      icon: 'edit',\n    },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list.page.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mainButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ItemAction\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    name: 'Add Employee',\n    icon: 'add',\n    action: this.add,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list.page.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Employee } from '../../../../core/models/employee.model';\nimport { EmployeesDataSource } from './list-datasource';\nimport { QueryOptions } from 'src/app/core/models/api.interface';\nimport { EmployeeService } from 'src/app/core/http/employee/employee.service';\nimport { DepartmentService } from 'src/app/core/http/department/department.service';\nimport { ToastService } from 'src/app/core/services/toast.service';\nimport { ItemAction } from '../../../../shared/components/list/list.component';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './list.page.pug',\n  styleUrls: ['./list.page.scss'],\n})\n// tslint:disable-next-line: component-class-suffix\nexport class EmployeeListPage {\n  employeeDataSource: EmployeesDataSource;\n  employeeListFilter: QueryOptions = {\n    searchColumns: ['id', 'name', 'lastname'],\n    sortColumns: {},\n    itemsPerPage: 5,\n    page: 0,\n  };\n  employees: Employee[];\n  employeesLength: number;\n  listItemActions: ItemAction[] = [\n    {\n      name: 'Delete',\n      action: this.delete,\n      icon: 'delete',\n    },\n    {\n      name: 'Edit',\n      action: this.edit,\n      icon: 'edit',\n    },\n  ];\n  mainButton: ItemAction = {\n    name: 'Add Employee',\n    icon: 'add',\n    action: this.add,\n  };\n\n  cols = [\n    { key: 'id', value: 'Id', flex: '9%' },\n    { key: 'name', value: 'Name', flex: '17%' },\n    { key: 'lastname', value: 'Lastname', flex: '17%' },\n    { key: 'department.name', value: 'Department', flex: '22%' },\n    { key: 'age', value: 'Age', flex: '10%' },\n    { key: 'created', value: 'Created', flex: '25%' },\n  ];\n\n  displayedCols = [\n    'id',\n    'name',\n    'lastname',\n    'department.name',\n    'age',\n    'created',\n    'actions',\n  ];\n\n  constructor(\n    private employeeService: EmployeeService,\n    private departmenService: DepartmentService,\n    private toastService: ToastService,\n  ) {\n    this.employeeDataSource = new EmployeesDataSource(\n      this.departmenService,\n      this.employeeService,\n    );\n  }\n\n  onListDataLoaded(status: boolean) {\n    if (status) {\n      this.toastService.info('Data loaded correctly!');\n    } else {\n      this.toastService.error(\n        'Ups...something went wrong when loading the data!',\n      );\n    }\n  }\n\n  add(event) {\n    // TODO: Add event implementation for adding new employee\n  }\n\n  edit(event) {\n    // TODO: Add event implementation for employee edit\n  }\n\n  delete(event) {\n    // TODO: Add event implementation for delete employee event\n  }\n}\n\n    \n\n    \n        app-list(\n  [cols]='cols',\n  [displayedCols]='displayedCols',\n  [listFilter]='employeeListFilter',\n  [(datasource)]='employeeDataSource',\n  [actions]='listItemActions',\n  [mainButton]='mainButton',\n  (list-data-loaded)='onListDataLoaded($event)')\n\n    \n\n    \n                \n                    ./list.page.scss\n                \n                @import 'global';\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'app-list(  [cols]=\\'cols\\',  [displayedCols]=\\'displayedCols\\',  [listFilter]=\\'employeeListFilter\\',  [(datasource)]=\\'employeeDataSource\\',  [actions]=\\'listItemActions\\',  [mainButton]=\\'mainButton\\',  (list-data-loaded)=\\'onListDataLoaded($event)\\')'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmployeeListPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_declarations\n\n\n\ncluster_EmployeeModule_imports\n\n\n\ncluster_EmployeeModule_exports\n\n\n\n\nEmployeeEditPage\n\nEmployeeEditPage\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nEmployeeEditPage->EmployeeModule\n\n\n\n\n\nEmployeeListPage\n\nEmployeeListPage\n\nEmployeeModule -->\n\nEmployeeListPage->EmployeeModule\n\n\n\n\n\nEmployeeNewPage\n\nEmployeeNewPage\n\nEmployeeModule -->\n\nEmployeeNewPage->EmployeeModule\n\n\n\n\n\nModalDeleteComponent\n\nModalDeleteComponent\n\nEmployeeModule -->\n\nModalDeleteComponent->EmployeeModule\n\n\n\n\n\nEmployeeRoutingModule \n\nEmployeeRoutingModule \n\nEmployeeRoutingModule  -->\n\nEmployeeModule->EmployeeRoutingModule \n\n\n\n\n\nEmployeeRoutingModule\n\nEmployeeRoutingModule\n\nEmployeeModule -->\n\nEmployeeRoutingModule->EmployeeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEmployeeModule -->\n\nSharedModule->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/employee/employee.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EmployeeEditPage\n                        \n                        \n                            EmployeeListPage\n                        \n                        \n                            EmployeeNewPage\n                        \n                        \n                            ModalDeleteComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            EmployeeEditPage\n                        \n                        \n                            EmployeeListPage\n                        \n                        \n                            EmployeeNewPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmployeeRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmployeeRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { EmployeeListPage } from 'src/app/modules/employee/pages/list/list.page';\nimport { EmployeeNewPage } from 'src/app/modules/employee/pages/new/new.page';\nimport { EmployeeEditPage } from 'src/app/modules/employee/pages/edit/edit.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EmployeeRoutingModule } from './employee.routing';\nimport { ModalDeleteComponent } from './components/modal-delete/modal-delete.component';\n\n@NgModule({\n  imports: [\n    EmployeeRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n  ],\n  declarations: [\n    EmployeeListPage,\n    EmployeeNewPage,\n    EmployeeEditPage,\n    ModalDeleteComponent,\n  ],\n  entryComponents: [EmployeeListPage, EmployeeNewPage, EmployeeEditPage],\n  exports: [EmployeeRoutingModule],\n})\nexport class EmployeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmployeeNewPage.html":{"url":"components/EmployeeNewPage.html","title":"component - EmployeeNewPage","body":"\n                   \n\n\n\n\n\n  Components\n  EmployeeNewPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/employee/pages/new/new.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                employee-new\n            \n\n            \n                styleUrls\n                ./new.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./new.page.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/employee/pages/new/new.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/employee/pages/new/new.page.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'employee-new',\n  templateUrl: './new.page.pug',\n  styleUrls: ['./new.page.scss'],\n})\nexport class EmployeeNewPage implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        div\n\n    \n\n    \n                \n                    ./new.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'div'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmployeeNewPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeRoutingModule.html":{"url":"modules/EmployeeRoutingModule.html","title":"module - EmployeeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/employee/employee.routing.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListPage } from 'src/app/modules/employee/pages/list/list.page';\nimport { EmployeeEditPage } from 'src/app/modules/employee/pages/edit/edit.page';\nimport { EmployeeNewPage } from 'src/app/modules/employee/pages/new/new.page';\n\nexport const EMPLOYEE_ROUTES: Routes = [\n  {\n    path: '',\n    component: EmployeeListPage\n  },\n  {\n    path: 'edit',\n    component: EmployeeEditPage,\n    data: {\n      breadcrumb: 'edit',\n    }\n  },\n  {\n    path: 'new',\n    component: EmployeeNewPage,\n    data: {\n      breadcrumb: 'new',\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(EMPLOYEE_ROUTES)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeService.html":{"url":"injectables/EmployeeService.html","title":"injectable - EmployeeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/employee/employee.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/employee/employee.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(employee: Employee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/employee/employee.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    employee\n                                    \n                                                Employee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(employee: Employee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/employee/employee.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    employee\n                                    \n                                                Employee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            query\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    query(params: QueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/employee/employee.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                QueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(employee: Employee)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/http/employee/employee.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    employee\n                                    \n                                                Employee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/http/employee/employee.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/http/employee/employee.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Employee } from 'src/app/core/models/employee.model';\nimport {\n  ModelResponse,\n  EntityPostRequest,\n  BooleanResponse,\n  EntityPutRequest,\n} from '../../models/api.interface';\nimport { QueryOptions, API_URIS } from 'src/app/core/models/api.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmployeeService {\n  private loadingSubject: BehaviorSubject;\n  public loading$: Observable;\n\n  constructor(private apiService: ApiService) {\n    this.loadingSubject = new BehaviorSubject(false);\n    this.loading$ = this.loadingSubject.asObservable();\n  }\n\n  public query(params: QueryOptions = {}): Observable {\n    return this.apiService.getAll(\n      API_URIS.EMPLOYEE,\n      params,\n      this.loadingSubject,\n      Employee,\n    );\n  }\n\n  public save(employee: Employee): Observable {\n    return this.apiService.put(\n      `${API_URIS.EMPLOYEE}/${employee.id}`,\n      new EntityPutRequest(employee),\n      this.loadingSubject,\n      Employee,\n    );\n  }\n\n  public create(employee: Employee): Observable {\n    return this.apiService.post(\n      `${API_URIS.EMPLOYEE}/`,\n      new EntityPostRequest(employee),\n      this.loadingSubject,\n      Employee,\n    );\n  }\n\n  public delete(employee: Employee): Observable {\n    return this.apiService.delete(\n      `${API_URIS.EMPLOYEE}/${employee.id}`,\n      this.loadingSubject,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeesDataSource.html":{"url":"classes/EmployeesDataSource.html","title":"class - EmployeesDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeesDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/employee/pages/list/list-datasource.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n            \n                Implements\n            \n            \n                            ListDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataSourceSubjData\n                            \n                            \n                                    Public\n                                dataSourceSubjData$\n                            \n                            \n                                    Private\n                                dataSourceSubject\n                            \n                            \n                                    Private\n                                employeesDataSourceSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                    Public\n                                loadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(departmentService: DepartmentService, employeeService: EmployeeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/employee/pages/list/list-datasource.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        departmentService\n                                                  \n                                                        \n                                                                        DepartmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataSourceSubjData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DataSourceSubjData(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list-datasource.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataSourceSubjData$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.dataSourceSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list-datasource.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dataSourceSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(\n    this.dataSourceSubjData,\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list-datasource.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            employeesDataSourceSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/employee/pages/list/list-datasource.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \nconnect(collectionViewer: CollectionViewer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/employee/pages/list/list-datasource.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionViewer\n                                    \n                                            CollectionViewer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnect\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnect(collectionViewer: CollectionViewer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/employee/pages/list/list-datasource.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionViewer\n                                    \n                                            CollectionViewer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadData(options: QueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/employee/pages/list/list-datasource.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                QueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\nimport { DepartmentService } from 'src/app/core/http/department/department.service';\nimport { Employee } from 'src/app/core/models/employee.model';\nimport { EmployeeService } from 'src/app/core/http/employee/employee.service';\nimport { QueryOptions } from 'src/app/core/models/api.interface';\nimport { UtilsService } from 'src/app/core/services/utils.service';\nimport { DataSourceSubjData } from 'src/app/core/models/app.interface';\nimport { ListDataSource } from '~shared/components/list/list.component';\nimport { Department } from 'src/app/core/models/department.model';\n\nexport class EmployeesDataSource extends DataSource\n  implements ListDataSource {\n  private employeesDataSourceSubject = new BehaviorSubject([]);\n  private dataSourceSubjData = new DataSourceSubjData(false);\n  private dataSourceSubject = new BehaviorSubject(\n    this.dataSourceSubjData,\n  );\n  public dataSourceSubjData$ = this.dataSourceSubject.asObservable();\n\n  constructor(\n    private departmentService: DepartmentService,\n    private employeeService: EmployeeService,\n  ) {\n    super();\n  }\n\n  public loadData(options: QueryOptions) {\n    this.dataSourceSubject.next(this.dataSourceSubjData.reset());\n\n    forkJoin({\n      employees: this.employeeService.query(options).pipe(map((res) => res)),\n      departments: this.departmentService.query({ mapping: 'id' }),\n    }).subscribe((results) => {\n      this.dataSourceSubjData.setErrors(results.departments, results.employees);\n      if (!this.dataSourceSubjData.hasErrors()) {\n        results.employees.joinOneToOneRelation(\n          results.departments.data,\n          'departmentId',\n          'department',\n        );\n        this.employeesDataSourceSubject.next(\n          results.employees.data[0] as Employee[],\n        );\n      }\n\n      this.dataSourceSubject.next(\n        this.dataSourceSubjData.set(false, results.employees.count),\n      );\n    });\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable {\n    return this.employeesDataSourceSubject.asObservable();\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.employeesDataSourceSubject.complete();\n    this.dataSourceSubject.complete();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityPostRequest.html":{"url":"classes/EntityPostRequest.html","title":"class - EntityPostRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityPostRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                Class for entity service POST requests\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: BaseEntityModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/api.interface.ts:352\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        BaseEntityModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntityModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/api.interface.ts:352\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityPutRequest.html":{"url":"classes/EntityPutRequest.html","title":"class - EntityPutRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityPutRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                Class for entity service PUT requests\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: BaseIdModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/api.interface.ts:363\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        BaseIdModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseIdModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/api.interface.ts:363\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                Base server error response.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: Error)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/api.interface.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    Error\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/api.interface.ts:33\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/api.interface.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.pug',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        mat-toolbar.footer\n  mat-toolbar-row\n    a(target=\"_blank\" href=\"https://material.angular.io/\") Angular Material\n    a(target=\"_blank\" href=\"https://www.npmjs.com/package/@angular/flex-layout\") Flex Layout\n    a(target=\"_blank\" href=\"#\") Link\n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                @import 'global';\n\nmat-toolbar {\n  &.footer {\n    position: sticky;\n    opacity: .5;\n    @include flex-direction(row, true);\n    @include justify-content(center);\n    @include align-items(center);\n  }\n\n  mat-toolbar-row {\n    &.mat-toolbar-row {\n      @include justify-content(flex-end);\n      align-items: center;\n      @include layout-bp(xs) {\n        @include justify-content(center);\n      }\n\n      a {\n        text-transform: uppercase;\n        color: $color_white;\n        font-size: .5em;\n        text-decoration: none;\n        padding: 0px 8px;\n        background-color: rgba($color_secondary, .7);\n        border-width: 1px;\n        border-style: solid;\n        border-color: rgba($color_gray, .2);\n\n        &:hover {\n          background-color: rgba($color_main, .7);\n          // color: rgba(#797373, .6);\n          text-decoration: none;\n          font-weight: bold;\n        }\n        margin-right: .8em;\n      }\n\n      a:last-child {\n        margin: 0;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'mat-toolbar.footer  mat-toolbar-row    a(target=\"_blank\" href=\"https://material.angular.io/\") Angular Material    a(target=\"_blank\" href=\"https://www.npmjs.com/package/@angular/flex-layout\") Flex Layout    a(target=\"_blank\" href=\"#\") Link'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBreadCrumb.html":{"url":"interfaces/IBreadCrumb.html","title":"interface - IBreadCrumb","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBreadCrumb\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/breadcrumb/breadcrumb.component.ts\n        \n\n            \n                Description\n            \n            \n                Breadcrumb item interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  Router,\n  ActivatedRoute,\n  NavigationEnd,\n  RouterEvent,\n} from '@angular/router';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\n\n\n/**\n * Breadcrumb item interface\n * @export\n */\nexport interface IBreadCrumb {\n  label: string;\n  url: string;\n}\n\n\n/**\n * Breadcrumb navigation component\n * @export\n */\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.pug',\n  styleUrls: ['./breadcrumb.component.scss'],\n})\nexport class BreadcrumbComponent implements OnInit {\n  public breadcrumbs: IBreadCrumb[];\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {\n    this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n  }\n\n  ngOnInit() {\n    this.router.events\n      .pipe(\n        filter((event: RouterEvent) => event instanceof NavigationEnd),\n        distinctUntilChanged(),\n      )\n      .subscribe(() => {\n        this.breadcrumbs = this.buildBreadCrumb(this.activatedRoute.root);\n      });\n  }\n\n  buildBreadCrumb(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: IBreadCrumb[] = [],\n  ): IBreadCrumb[] {\n    let label =\n      route.routeConfig && route.routeConfig.data\n        ? route.routeConfig.data.breadcrumb\n        : '';\n    let path =\n      route.routeConfig && route.routeConfig.data ? route.routeConfig.path : '';\n\n    // Remove dynamic route if any exist\n    const lastRoutePart = path.split('/').pop();\n    const isDynamicRoute = lastRoutePart.startsWith(':');\n    if (isDynamicRoute && !!route.snapshot) {\n      const paramName = lastRoutePart.split(':')[1];\n      path = path.replace(lastRoutePart, route.snapshot.params[paramName]);\n      label = route.snapshot.params[paramName];\n    }\n\n    // Get next url path\n    const nextUrl = path ? `${url}/${path}` : url;\n\n    const breadcrumb: IBreadCrumb = {\n      label,\n      url: nextUrl,\n    };\n\n    const newBreadcrumbs = breadcrumb.label\n      ? [...breadcrumbs, breadcrumb]\n      : [...breadcrumbs];\n\n    if (route.firstChild) {\n      return this.buildBreadCrumb(route.firstChild, nextUrl, newBreadcrumbs);\n    }\n\n    return newBreadcrumbs;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IToast.html":{"url":"interfaces/IToast.html","title":"interface - IToast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IToast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/toast.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        style\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         ToastOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ToastOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                    \n                                \n                                \n                                    \n                                        style:         ToastStyles\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ToastStyles\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IToast {\n  id: string;\n  message: string;\n  style: ToastStyles;\n  options?: ToastOptions;\n}\n\nexport interface ToastOptions {\n  duration?: number;\n  closeString?: string;\n}\n\nexport enum ToastStyles {\n  SUCCESS = 'toast-success',\n  INFO = 'toast-info',\n  WARNING = 'toast-warning',\n  ERROR = 'toast-error'\n}\n\nexport const ToastDefaults = {\n  CLOSE_STR: 'Close',\n  DURATION: 500,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemAction.html":{"url":"interfaces/ItemAction.html","title":"interface - ItemAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/list/list.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        icon\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewInit,\n  OnDestroy,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  ElementRef,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport {\n  BaseEntityModel,\n  QueryOptions,\n} from '../../../core/models/api.interface';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { Subscription, Observable, fromEvent } from 'rxjs';\nimport { DatePipe } from '@angular/common';\nimport { DataSourceSubjData } from '~core/models/app.interface';\nimport { UtilsService } from '../../../core/services/utils.service';\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { Pipe } from '@angular/compiler/src/core';\n\nexport interface ListDataSource\n  extends DataSource {\n  dataSourceSubjData$: Observable;\n  loadData(options: QueryOptions);\n}\n\nexport interface ItemAction {\n  name: string;\n  action: (event) => void;\n  icon: string;\n}\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.pug',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent\n  implements AfterViewInit, OnInit, OnDestroy {\n  @Output() listDataLoaded = new EventEmitter();\n  subscriptions: Subscription[] = [];\n  datePipe: DatePipe = new DatePipe('en-US');\n  listLength: number;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChildren(MatSort) multiSorts!: QueryList;\n  @ViewChild('input') searchInput: ElementRef;\n  @Input() cols: [{ key: string; value: string; pipe?: Pipe; flex: string }];\n  @Input() displayedCols: string[];\n  @Input() actions: ItemAction[];\n  @Input() mainButton: ItemAction;\n  @Input() datasource: ListDataSource;\n  @Input() listFilter: QueryOptions;\n\n  constructor(private utilsService: UtilsService) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.datasource.dataSourceSubjData$.subscribe(\n        (subjectData: DataSourceSubjData) => {\n          this.utilsService.loading(subjectData.loading);\n          if (!subjectData.hasErrors()) {\n            this.listLength = subjectData.count;\n            this.listDataLoaded.emit(true);\n          } else {\n            this.listLength = 0;\n            this.utilsService.loading(subjectData.loading);\n            this.listDataLoaded.emit(false);\n          }\n        },\n      ),\n    );\n    this.datasource.loadData(this.listFilter);\n  }\n\n  ngAfterViewInit(): void {\n    // Search filter event\n    fromEvent(this.searchInput.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(150),\n        distinctUntilChanged(),\n        tap(() => {\n          this.paginator.pageIndex = 0;\n          this.loadPage();\n        }),\n      )\n      .subscribe();\n    // Paginator page event\n    this.paginator.page.pipe(tap(() => this.loadPage())).subscribe();\n  }\n  ngOnDestroy(): void {\n    this.unsubscribeObservable();\n  }\n\n  sortData(sort: Sort) {\n    if (sort.direction === '') {\n      delete this.listFilter.sortColumns[sort.active];\n    } else {\n      this.listFilter.sortColumns[sort.active] = sort.direction;\n    }\n\n    this.paginator.pageIndex = 0;\n    this.loadPage();\n  }\n\n  loadPage() {\n    this.datasource.loadData({\n      itemsPerPage: this.paginator.pageSize,\n      page: this.paginator.pageIndex,\n      searchColumns: this.listFilter.searchColumns,\n      searchValue: this.searchInput.nativeElement.value,\n      sortColumns: this.listFilter.sortColumns,\n    });\n  }\n\n  getCol(row, key) {\n    const keyLevel = key.split('.');\n    if (keyLevel.length === 1) {\n      return row[key];\n    } else {\n      return this.getColValue(row, keyLevel);\n    }\n  }\n\n  getColValue(row, keys: string[]) {\n    if (!keys || !keys.length) {\n      return row;\n    }\n\n    return this.getColValue(row[keys[0]], keys.slice(1, keys.length));\n  }\n\n  getSearchParams() {\n    return this.listFilter.searchColumns.join(', ');\n  }\n\n  getCellColStyle(colName: string) {\n    return colName.replace(/\\./g, '-');\n  }\n\n  unsubscribeObservable() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/list/list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-list\n            \n\n            \n                styleUrls\n                ./list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePipe\n                            \n                            \n                                listLength\n                            \n                            \n                                multiSorts\n                            \n                            \n                                paginator\n                            \n                            \n                                searchInput\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCellColStyle\n                            \n                            \n                                getCol\n                            \n                            \n                                getColValue\n                            \n                            \n                                getSearchParams\n                            \n                            \n                                loadPage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sortData\n                            \n                            \n                                unsubscribeObservable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                cols\n                            \n                            \n                                datasource\n                            \n                            \n                                displayedCols\n                            \n                            \n                                listFilter\n                            \n                            \n                                mainButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                listDataLoaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(utilsService: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/list/list.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utilsService\n                                                  \n                                                        \n                                                                        UtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actions\n                    \n                \n                \n                    \n                        Type :         ItemAction[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cols\n                    \n                \n                \n                    \n                        Type :     [literal type]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        datasource\n                    \n                \n                \n                    \n                        Type :         ListDataSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayedCols\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listFilter\n                    \n                \n                \n                    \n                        Type :         QueryOptions\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mainButton\n                    \n                \n                \n                    \n                        Type :         ItemAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:57\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        listDataLoaded\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCellColStyle\n                        \n                        \n                    \n                \n            \n            \n                \ngetCellColStyle(colName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    colName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCol\n                        \n                        \n                    \n                \n            \n            \n                \ngetCol(row, key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getColValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetColValue(row, keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchParams\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchParams()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadPage\n                        \n                        \n                    \n                \n            \n            \n                \nloadPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortData\n                        \n                        \n                    \n                \n            \n            \n                \nsortData(sort: Sort)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sort\n                                    \n                                            Sort\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeObservable\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeObservable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePipe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DatePipe\n\n                        \n                    \n                    \n                        \n                            Default value : new DatePipe('en-US')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multiSorts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren(MatSort)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('input')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/list/list.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewInit,\n  OnDestroy,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  ElementRef,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport {\n  BaseEntityModel,\n  QueryOptions,\n} from '../../../core/models/api.interface';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { Subscription, Observable, fromEvent } from 'rxjs';\nimport { DatePipe } from '@angular/common';\nimport { DataSourceSubjData } from '~core/models/app.interface';\nimport { UtilsService } from '../../../core/services/utils.service';\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { Pipe } from '@angular/compiler/src/core';\n\nexport interface ListDataSource\n  extends DataSource {\n  dataSourceSubjData$: Observable;\n  loadData(options: QueryOptions);\n}\n\nexport interface ItemAction {\n  name: string;\n  action: (event) => void;\n  icon: string;\n}\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.pug',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent\n  implements AfterViewInit, OnInit, OnDestroy {\n  @Output() listDataLoaded = new EventEmitter();\n  subscriptions: Subscription[] = [];\n  datePipe: DatePipe = new DatePipe('en-US');\n  listLength: number;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChildren(MatSort) multiSorts!: QueryList;\n  @ViewChild('input') searchInput: ElementRef;\n  @Input() cols: [{ key: string; value: string; pipe?: Pipe; flex: string }];\n  @Input() displayedCols: string[];\n  @Input() actions: ItemAction[];\n  @Input() mainButton: ItemAction;\n  @Input() datasource: ListDataSource;\n  @Input() listFilter: QueryOptions;\n\n  constructor(private utilsService: UtilsService) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.datasource.dataSourceSubjData$.subscribe(\n        (subjectData: DataSourceSubjData) => {\n          this.utilsService.loading(subjectData.loading);\n          if (!subjectData.hasErrors()) {\n            this.listLength = subjectData.count;\n            this.listDataLoaded.emit(true);\n          } else {\n            this.listLength = 0;\n            this.utilsService.loading(subjectData.loading);\n            this.listDataLoaded.emit(false);\n          }\n        },\n      ),\n    );\n    this.datasource.loadData(this.listFilter);\n  }\n\n  ngAfterViewInit(): void {\n    // Search filter event\n    fromEvent(this.searchInput.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(150),\n        distinctUntilChanged(),\n        tap(() => {\n          this.paginator.pageIndex = 0;\n          this.loadPage();\n        }),\n      )\n      .subscribe();\n    // Paginator page event\n    this.paginator.page.pipe(tap(() => this.loadPage())).subscribe();\n  }\n  ngOnDestroy(): void {\n    this.unsubscribeObservable();\n  }\n\n  sortData(sort: Sort) {\n    if (sort.direction === '') {\n      delete this.listFilter.sortColumns[sort.active];\n    } else {\n      this.listFilter.sortColumns[sort.active] = sort.direction;\n    }\n\n    this.paginator.pageIndex = 0;\n    this.loadPage();\n  }\n\n  loadPage() {\n    this.datasource.loadData({\n      itemsPerPage: this.paginator.pageSize,\n      page: this.paginator.pageIndex,\n      searchColumns: this.listFilter.searchColumns,\n      searchValue: this.searchInput.nativeElement.value,\n      sortColumns: this.listFilter.sortColumns,\n    });\n  }\n\n  getCol(row, key) {\n    const keyLevel = key.split('.');\n    if (keyLevel.length === 1) {\n      return row[key];\n    } else {\n      return this.getColValue(row, keyLevel);\n    }\n  }\n\n  getColValue(row, keys: string[]) {\n    if (!keys || !keys.length) {\n      return row;\n    }\n\n    return this.getColValue(row[keys[0]], keys.slice(1, keys.length));\n  }\n\n  getSearchParams() {\n    return this.listFilter.searchColumns.join(', ');\n  }\n\n  getCellColStyle(colName: string) {\n    return colName.replace(/\\./g, '-');\n  }\n\n  unsubscribeObservable() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i \n    \n\n    \n        .container__row.m-t-2\n  .container__col-12(*ngIf='listFilter.searchColumns && listFilter.searchColumns.length')\n    mat-card.mat-elevation-z2\n      mat-form-field( appearance=\"outline\")\n        mat-label Search\n        input(matInput, placeholder=\"Search\" #input)\n        mat-icon.filter-icon(matSuffix, mdSuffix) search\n        mat-hint You can search by {{ getSearchParams() }}\n.container__row(*ngIf='mainButton', fxLayoutAlign='end end').p-b-3\n  .container__col-12.container__col-sm-1\n    button(mat-raised-button, (click)='mainButton.action($event)', fxFlex)\n      mat-icon {{ mainButton.icon }}\n      span {{ mainButton.name }}\n.container__row.opacity\n  .container__col-12\n    .mat-elevation-z8\n      mat-table#table([dataSource]='datasource', matSort, matSortActive=\"{{ cols[0].key }}\", matSortDirection=\"desc\", )\n        ng-container(*ngFor=\"let col of cols\", matColumnDef='{{col.key}}')\n          mat-header-cell(*matHeaderCellDef, mat-sort-header, matSort, (matSortChange)=\"sortData($event)\", [fxFlex]=\"col.flex ? 'calc(' + col.flex + '- 40px)' : 1\") {{col.value}}\n          mat-cell(*matCellDef=\"let row\", [ngClass]=\"getCellColStyle(col.key) + '-cell'\", [fxFlex]=\"col.flex ? 'calc(' + col.flex + '- 40px)' : 1\") {{ getCol(row, col.key) }}\n        ng-container(matColumnDef='actions')\n          mat-header-cell(*matHeaderCellDef, class='actions-header-cell') -\n          mat-cell(*matCellDef=\"let row\", class='actions-cell')\n            button(mat-icon-button, [matMenuTriggerFor]='menu')\n              mat-icon more_vert\n            mat-menu(#menu='matMenu')\n              button(mat-menu-item, *ngFor=\"let action of actions\", (click)='action.action($event)')\n                mat-icon {{ action.icon }}\n                span {{ action.name }}\n        mat-header-row(*matHeaderRowDef=\"displayedCols\")\n        mat-row(*matRowDef=\"let row; columns: displayedCols;\")\n      mat-paginator([length]='listLength', [pageSizeOptions]=\"[5, 10, 25, 100]\")\n\n    \n\n    \n                \n                    ./list.component.scss\n                \n                @import 'global';\n\nmat-table {\n  mat-cell {\n    &.actions-cell {\n      justify-content: center;\n      max-width: 40px;\n    }\n\n    &.department-name-cell {\n      font-weight: $font_weight_bold;\n      color: $color_secondary;\n    }\n\n    &.id-cell {\n      font-style: italic;\n      font-weight: $font_weight_thinner;\n      color: $color_main;\n    }\n\n    &.name-cell {\n      font-weight: $font_weight_bold;\n      color: $gradient_color2;\n    }\n  }\n\n  mat-header-row {\n    mat-header-cell {\n      &.actions-header-cell {\n        max-width: 40px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '.container__row.m-t-2  .container__col-12(*ngIf=\\'listFilter.searchColumns && listFilter.searchColumns.length\\')    mat-card.mat-elevation-z2      mat-form-field( appearance=\"outline\")        mat-label Search        input(matInput, placeholder=\"Search\" #input)        mat-icon.filter-icon(matSuffix, mdSuffix) search        mat-hint You can search by {{ getSearchParams() }}.container__row(*ngIf=\\'mainButton\\', fxLayoutAlign=\\'end end\\').p-b-3  .container__col-12.container__col-sm-1    button(mat-raised-button, (click)=\\'mainButton.action($event)\\', fxFlex)      mat-icon {{ mainButton.icon }}      span {{ mainButton.name }}.container__row.opacity  .container__col-12    .mat-elevation-z8      mat-table#table([dataSource]=\\'datasource\\', matSort, matSortActive=\"{{ cols[0].key }}\", matSortDirection=\"desc\", )        ng-container(*ngFor=\"let col of cols\", matColumnDef=\\'{{col.key}}\\')          mat-header-cell(*matHeaderCellDef, mat-sort-header, matSort, (matSortChange)=\"sortData($event)\", [fxFlex]=\"col.flex ? \\'calc(\\' + col.flex + \\'- 40px)\\' : 1\") {{col.value}}          mat-cell(*matCellDef=\"let row\", [ngClass]=\"getCellColStyle(col.key) + \\'-cell\\'\", [fxFlex]=\"col.flex ? \\'calc(\\' + col.flex + \\'- 40px)\\' : 1\") {{ getCol(row, col.key) }}        ng-container(matColumnDef=\\'actions\\')          mat-header-cell(*matHeaderCellDef, class=\\'actions-header-cell\\') -          mat-cell(*matCellDef=\"let row\", class=\\'actions-cell\\')            button(mat-icon-button, [matMenuTriggerFor]=\\'menu\\')              mat-icon more_vert            mat-menu(#menu=\\'matMenu\\')              button(mat-menu-item, *ngFor=\"let action of actions\", (click)=\\'action.action($event)\\')                mat-icon {{ action.icon }}                span {{ action.name }}        mat-header-row(*matHeaderRowDef=\"displayedCols\")        mat-row(*matRowDef=\"let row; columns: displayedCols;\")      mat-paginator([length]=\\'listLength\\', [pageSizeOptions]=\"[5, 10, 25, 100]\")'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListDataSource.html":{"url":"interfaces/ListDataSource.html","title":"interface - ListDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/list/list.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DataSource\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dataSourceSubjData$\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loadData\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadData\n                        \n                        \n                    \n                \n            \n            \n                \nloadData(options: QueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/list/list.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                QueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataSourceSubjData$\n                                    \n                                \n                                \n                                    \n                                        dataSourceSubjData$:         Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewInit,\n  OnDestroy,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  ElementRef,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport {\n  BaseEntityModel,\n  QueryOptions,\n} from '../../../core/models/api.interface';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { Subscription, Observable, fromEvent } from 'rxjs';\nimport { DatePipe } from '@angular/common';\nimport { DataSourceSubjData } from '~core/models/app.interface';\nimport { UtilsService } from '../../../core/services/utils.service';\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { Pipe } from '@angular/compiler/src/core';\n\nexport interface ListDataSource\n  extends DataSource {\n  dataSourceSubjData$: Observable;\n  loadData(options: QueryOptions);\n}\n\nexport interface ItemAction {\n  name: string;\n  action: (event) => void;\n  icon: string;\n}\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.pug',\n  styleUrls: ['./list.component.scss'],\n})\nexport class ListComponent\n  implements AfterViewInit, OnInit, OnDestroy {\n  @Output() listDataLoaded = new EventEmitter();\n  subscriptions: Subscription[] = [];\n  datePipe: DatePipe = new DatePipe('en-US');\n  listLength: number;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChildren(MatSort) multiSorts!: QueryList;\n  @ViewChild('input') searchInput: ElementRef;\n  @Input() cols: [{ key: string; value: string; pipe?: Pipe; flex: string }];\n  @Input() displayedCols: string[];\n  @Input() actions: ItemAction[];\n  @Input() mainButton: ItemAction;\n  @Input() datasource: ListDataSource;\n  @Input() listFilter: QueryOptions;\n\n  constructor(private utilsService: UtilsService) {}\n\n  ngOnInit(): void {\n    this.subscriptions.push(\n      this.datasource.dataSourceSubjData$.subscribe(\n        (subjectData: DataSourceSubjData) => {\n          this.utilsService.loading(subjectData.loading);\n          if (!subjectData.hasErrors()) {\n            this.listLength = subjectData.count;\n            this.listDataLoaded.emit(true);\n          } else {\n            this.listLength = 0;\n            this.utilsService.loading(subjectData.loading);\n            this.listDataLoaded.emit(false);\n          }\n        },\n      ),\n    );\n    this.datasource.loadData(this.listFilter);\n  }\n\n  ngAfterViewInit(): void {\n    // Search filter event\n    fromEvent(this.searchInput.nativeElement, 'keyup')\n      .pipe(\n        debounceTime(150),\n        distinctUntilChanged(),\n        tap(() => {\n          this.paginator.pageIndex = 0;\n          this.loadPage();\n        }),\n      )\n      .subscribe();\n    // Paginator page event\n    this.paginator.page.pipe(tap(() => this.loadPage())).subscribe();\n  }\n  ngOnDestroy(): void {\n    this.unsubscribeObservable();\n  }\n\n  sortData(sort: Sort) {\n    if (sort.direction === '') {\n      delete this.listFilter.sortColumns[sort.active];\n    } else {\n      this.listFilter.sortColumns[sort.active] = sort.direction;\n    }\n\n    this.paginator.pageIndex = 0;\n    this.loadPage();\n  }\n\n  loadPage() {\n    this.datasource.loadData({\n      itemsPerPage: this.paginator.pageSize,\n      page: this.paginator.pageIndex,\n      searchColumns: this.listFilter.searchColumns,\n      searchValue: this.searchInput.nativeElement.value,\n      sortColumns: this.listFilter.sortColumns,\n    });\n  }\n\n  getCol(row, key) {\n    const keyLevel = key.split('.');\n    if (keyLevel.length === 1) {\n      return row[key];\n    } else {\n      return this.getColValue(row, keyLevel);\n    }\n  }\n\n  getColValue(row, keys: string[]) {\n    if (!keys || !keys.length) {\n      return row;\n    }\n\n    return this.getColValue(row[keys[0]], keys.slice(1, keys.length));\n  }\n\n  getSearchParams() {\n    return this.listFilter.searchColumns.join(', ');\n  }\n\n  getCellColStyle(colName: string) {\n    return colName.replace(/\\./g, '-');\n  }\n\n  unsubscribeObservable() {\n    // tslint:disable-next-line: prefer-for-of\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/logger.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/logger.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n  log(msg: string) {\n    console.log(msg);\n  }\n\n  error(msg: string) {\n    console.error(msg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalDeleteComponent.html":{"url":"components/ModalDeleteComponent.html","title":"component - ModalDeleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalDeleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/employee/components/modal-delete/modal-delete.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-delete\n            \n\n            \n                styleUrls\n                ./modal-delete.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal-delete.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/employee/components/modal-delete/modal-delete.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/employee/components/modal-delete/modal-delete.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-delete',\n  templateUrl: './modal-delete.component.pug',\n  styleUrls: ['./modal-delete.component.scss']\n})\nexport class ModalDeleteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        span my modal\n\n    \n\n    \n                \n                    ./modal-delete.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'span my modal'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalDeleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelMap.html":{"url":"classes/ModelMap.html","title":"class - ModelMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/app.interface.ts\n        \n\n            \n                Description\n            \n            \n                ModelMap extended Map for Entity models\n\n            \n\n            \n                Extends\n            \n            \n                    Map\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mappedBy\n                            \n                            \n                                    Protected\n                                modelRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forEach\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(map: Map, mappingColumn: string, model)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/app.interface.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                    Map\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mappingColumn\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mappedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/app.interface.ts:28\n                            \n                        \n\n                \n                    \n                        Entity key mapped by\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            modelRef\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/core/models/app.interface.ts:23\n                            \n                        \n\n                \n                    \n                        Entity model class reference\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forEach\n                        \n                        \n                    \n                \n            \n            \n                \nforEach(callbackfn: (value: T[],key: string,map: ModelMap) => void, thisArg?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/app.interface.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    callbackfn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thisArg\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/app.interface.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityModel, ServerResponse } from './api.interface';\n\n/**\n * ModelMap extended Map for Entity models\n *\n * @export\n * @extends {Map}\n */\nexport class ModelMap extends Map {\n  constructor(\n    map: Map,\n    mappingColumn: string,\n    model: new () => T,\n  ) {\n    super(map);\n    this.mappedBy = mappingColumn;\n    this.modelRef = model;\n  }\n\n  /**\n   * Entity model class reference\n   */\n  protected modelRef: new () => T;\n\n  /**\n   * Entity key mapped by\n   */\n  public mappedBy: string;\n\n  forEach(\n    callbackfn: (value: T[], key: string, map: ModelMap) => void,\n    thisArg?: any,\n  ): void {\n    for (const [key, value] of this.entries()) {\n      callbackfn.call(thisArg, value, key, this);\n    }\n  }\n\n  get(key: string): T[] {\n    const arrValue = super.get(key);\n    return arrValue.map((item) => Object.assign(new this.modelRef(), item));\n  }\n}\n\n/**\n * Data source subject data class.\n * Base data source class for entities from server responses\n * @export\n */\nexport class DataSourceSubjData {\n  public loading: boolean;\n  public count = 0;\n  public errors: Error[] = [];\n\n  constructor(loading: boolean) {\n    this.loading = loading;\n  }\n\n  public set(\n    loading: boolean,\n    count: number,\n    ...responses: ServerResponse[]\n  ): DataSourceSubjData {\n    this.loading = loading;\n    this.count = count;\n    this.setErrors(...responses);\n    return this;\n  }\n\n  public reset(): DataSourceSubjData {\n    this.loading = !this.loading;\n    this.count = 0;\n    this.errors = [];\n    return this;\n  }\n\n  public hasErrors() {\n    return !!this.errors && this.errors.length;\n  }\n\n  public setErrors(...responses: ServerResponse[]) {\n    this.errors = responses\n      .map((response) => response.getError())\n      .filter((err) => !!err);\n  }\n\n  public getErrors(): Error[] {\n    return this.errors;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModelResponse.html":{"url":"classes/ModelResponse.html","title":"class - ModelResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModelResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                Entity model server response\n\n            \n\n            \n                Extends\n            \n            \n                        ServerResponse\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                params\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                joinOneToOneRelation\n                            \n                            \n                                    Private\n                                    Static\n                                joinOneToOneRelationFromArray\n                            \n                            \n                                    Private\n                                    Static\n                                joinOneToOneRelationFromMap\n                            \n                            \n                                    Private\n                                    Static\n                                mapArrayToModel\n                            \n                            \n                                    Private\n                                    Static\n                                mapMapToModel\n                            \n                            \n                                    Private\n                                    Static\n                                mapSingleToModel\n                            \n                            \n                                    Static\n                                parseToModel\n                            \n                            \n                                getError\n                            \n                            \n                                getError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: RawResponseData, count: number, error: Error, model, params: QueryOptions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/api.interface.ts:128\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        RawResponseData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        count\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    Error\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        model\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        QueryOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/api.interface.ts:128\n                            \n                        \n\n                \n                    \n                        server response entity count\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/api.interface.ts:124\n                            \n                        \n\n                \n                    \n                        Request query options params\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ServerResponse\n\n                                \n                            \n                        \n                            \n                                    Defined in         ServerResponse:50\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ServerResponse\n\n                                \n                            \n                        \n                            \n                                    Defined in         ServerResponse:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ErrorResponse\n\n                                \n                            \n                        \n                            \n                                    Defined in         ErrorResponse:33\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            joinOneToOneRelation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    joinOneToOneRelation(from: ModelResponseData, toRelation: string, toNewRelation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/api.interface.ts:320\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ModelResponseData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entity array/ModelMap where the relation data is located\n\n                                    \n                                \n                                \n                                    toRelation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key name of entity relation reference col\n\n                                    \n                                \n                                \n                                    toNewRelation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of entity where relation data will be saved (be carefully with overrides!)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModelResponseData\n\n                    \n                    \n                        Entity model server response with model relation data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            joinOneToOneRelationFromArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    joinOneToOneRelationFromArray(from: T[], to: ModelResponseData, toRelation: string, toNewRelation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/api.interface.ts:201\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entity array where the relation data is located\n\n                                    \n                                \n                                \n                                    to\n                                    \n                                                ModelResponseData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entity model server response where relation reference are located\n\n                                    \n                                \n                                \n                                    toRelation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key name of entity relation reference col\n\n                                    \n                                \n                                \n                                    toNewRelation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of entity where relation data will be saved (be carefully with overrides!)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModelResponseData\n\n                    \n                    \n                        Entity model server response with model relation data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            joinOneToOneRelationFromMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    joinOneToOneRelationFromMap(from: ModelMap, to: ModelResponseData, toRelation: string, toNewRelation: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/api.interface.ts:248\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ModelMap\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entity ModelMap where the relation data is located\n\n                                    \n                                \n                                \n                                    to\n                                    \n                                                ModelResponseData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entity model server response where relation reference are located\n\n                                    \n                                \n                                \n                                    toRelation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key name of entity relation reference col\n\n                                    \n                                \n                                \n                                    toNewRelation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Key of entity where relation data will be saved (be carefully with overrides!)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModelResponseData\n\n                    \n                    \n                        Entity model server response with model relation data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            mapArrayToModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapArrayToModel(arrayResponseData: [[]], model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/api.interface.ts:162\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Map raw array response result to entity model\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    arrayResponseData\n                                    \n                                            [[]]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Raw array response data\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entity model ref\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            mapMapToModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapMapToModel(mapResponseData: [Map, string], params: QueryOptions, model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/api.interface.ts:180\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Map raw map response result to entity model map\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mapResponseData\n                                    \n                                            [Map, string]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Raw map response data\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                QueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request query options params\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entity model ref\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            mapSingleToModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapSingleToModel(values: Partial, model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/api.interface.ts:148\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Map raw single result to entity model\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        raw entity object data\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Entity model ref\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        Entity model instance\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            parseToModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseToModel(rawResponseData: RawResponseData, params: QueryOptions, model)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/models/api.interface.ts:288\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Parse Raw server response data to Model response data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rawResponseData\n                                    \n                                                RawResponseData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Raw server response data\n\n                                    \n                                \n                                \n                                    params\n                                    \n                                                QueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request query params options\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        To model class reference\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModelResponseData\n\n                    \n                    \n                        Model response data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError()\n                \n            \n\n\n            \n                \n                    Inherited from         ServerResponse\n\n                \n            \n            \n                \n                        Defined in         ServerResponse:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError()\n                \n            \n\n\n            \n                \n                    Inherited from         ErrorResponse\n\n                \n            \n            \n                \n                        Defined in         ErrorResponse:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.pug',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        .container__row.m-t-2\n  .container__col-12\n    mat-card.mat-elevation-z4\n      div(fxFlex)\n        h1 Error 404\n      div(fxFlex)\n        p Page not found\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                .container-404 {\n  margin: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '.container__row.m-t-2  .container__col-12    mat-card.mat-elevation-z4      div(fxFlex)        h1 Error 404      div(fxFlex)        p Page not found'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryOptions.html":{"url":"interfaces/QueryOptions.html","title":"interface - QueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                REST Api query options interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        itemsPerPage\n                                \n                                \n                                            Optional\n                                        mapping\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        searchColumns\n                                \n                                \n                                            Optional\n                                        searchValue\n                                \n                                \n                                            Optional\n                                        sortColumns\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapping\n                                    \n                                \n                                \n                                    \n                                        mapping:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchColumns\n                                    \n                                \n                                \n                                    \n                                        searchColumns:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchValue\n                                    \n                                \n                                \n                                    \n                                        searchValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortColumns\n                                    \n                                \n                                \n                                    \n                                        sortColumns:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RawResponse.html":{"url":"classes/RawResponse.html","title":"class - RawResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RawResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                Raw server http response\n\n            \n\n            \n                Extends\n            \n            \n                        ServerResponse\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                count\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getError\n                            \n                            \n                                getError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: RawResponseData, count: number, error: Error)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/api.interface.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        RawResponseData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        count\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    Error\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/api.interface.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ServerResponse\n\n                                \n                            \n                        \n                            \n                                    Defined in         ServerResponse:50\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ServerResponse\n\n                                \n                            \n                        \n                            \n                                    Defined in         ServerResponse:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ErrorResponse\n\n                                \n                            \n                        \n                            \n                                    Defined in         ErrorResponse:33\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError()\n                \n            \n\n\n            \n                \n                    Inherited from         ServerResponse\n\n                \n            \n            \n                \n                        Defined in         ServerResponse:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError()\n                \n            \n\n\n            \n                \n                    Inherited from         ErrorResponse\n\n                \n            \n            \n                \n                        Defined in         ErrorResponse:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerResponse.html":{"url":"classes/ServerResponse.html","title":"class - ServerResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/api.interface.ts\n        \n\n            \n                Description\n            \n            \n                Base server response from api service.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(error: Error, data: T)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/models/api.interface.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                    Error\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/models/api.interface.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ErrorResponse\n\n                                \n                            \n                        \n                            \n                                    Defined in         ErrorResponse:33\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getError\n                        \n                        \n                    \n                \n            \n            \n                \ngetError()\n                \n            \n\n\n            \n                \n                    Inherited from         ErrorResponse\n\n                \n            \n            \n                \n                        Defined in         ErrorResponse:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SortDirection } from '@angular/material/sort';\nimport { ModelMap } from '~core/models/app.interface';\n\n/**\n * Specific server REST api URIs\n * @export\n */\nexport enum API_URIS {\n  EMPLOYEE = '/employee',\n  DEPARTMENT = '/department',\n}\n\n/**\n * REST Api query options interface\n *\n * @export\n */\nexport interface QueryOptions {\n  sortColumns?: { [key: string]: SortDirection | '' };\n  mapping?: string;\n  itemsPerPage?: number;\n  page?: number;\n  searchValue?: string;\n  searchColumns?: string[];\n}\n\n/**\n *\n * Base server error response.\n * @export\n */\nexport abstract class ErrorResponse {\n  public error: Error;\n  constructor(error: Error) {\n    this.error = error;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\n/**\n * Base server response from api service.\n *\n * @export\n * @extends {ErrorResponse}\n */\nexport abstract class ServerResponse extends ErrorResponse {\n  public data: T;\n  constructor(error: Error, data: T) {\n    super(error);\n    this.data = data;\n  }\n}\n\n/**\n * Server BooleanResponse data type interface\n *\n * @export\n */\nexport interface BooleanResponseData {\n  status: boolean;\n}\n\n/**\n * Server boolean response interface\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class BooleanResponse extends ServerResponse {\n  constructor(data: BooleanResponseData, error: Error) {\n    super(error, data);\n  }\n}\n\n/**\n * Raw server http response type\n *\n * @export\n */\nexport type RawResponseData =\n  | [BaseEntityModel[]]\n  | [{ [key: string]: [] }, string]\n  | []\n  | null;\n\n/**\n * Raw server http response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport abstract class RawResponse extends ServerResponse {\n  public count = 0;\n  constructor(data: RawResponseData, count: number, error: Error) {\n    super(error, data);\n    this.count = count ? count : 0;\n  }\n}\n\n/**\n * Entity model server response type\n *\n * @export\n */\nexport type ModelResponseData =\n  | [BaseEntityModel[]]\n  | [ModelMap, string]\n  | []\n  | null;\n\n/**\n * Entity model server response\n *\n * @export\n * @extends {ServerResponse}\n */\nexport class ModelResponse extends ServerResponse {\n  /**\n   * Request query options params\n   */\n  public params: QueryOptions = {};\n  /**\n   * server response entity count\n   */\n  public count = 0;\n  constructor(\n    data: RawResponseData,\n    count: number,\n    error: Error,\n    model: new () => BaseEntityModel,\n    params: QueryOptions = {},\n  ) {\n    super(error, ModelResponse.parseToModel(data, params, model));\n    this.count = count ? count : 0;\n    this.params = params;\n  }\n\n  /**\n   * Map raw single result to entity model\n   * @template T Entity model class type\n   * @param values raw entity object data\n   * @param model Entity model ref\n   * @returns Entity model instance\n   */\n  private static mapSingleToModel(\n    values: Partial,\n    model: new () => T,\n  ): T {\n    return Object.assign(new model(), values);\n  }\n\n  /**\n   * Map raw array response result to entity model\n   * @template T Entity model class type\n   * @param arrayResponseData Raw array response data\n   * @param model Entity model ref\n   * @returns [Entity model array]\n   */\n  private static mapArrayToModel(\n    arrayResponseData: [T[]],\n    model: new () => T,\n  ): [T[]] {\n    const modelArray = arrayResponseData[0].map((values) =>\n      this.mapSingleToModel(values, model),\n    );\n    return [modelArray];\n  }\n\n  /**\n   * Map raw map response result to entity model map\n   * @template T Entity model class type\n   * @param mapResponseData Raw map response data\n   * @param params Request query options params\n   * @param model Entity model ref\n   * @returns [Entity ModelMap]\n   */\n  private static mapMapToModel(\n    mapResponseData: [Map, string],\n    params: QueryOptions,\n    model: new () => T,\n  ): [ModelMap, string] {\n    return [\n      new ModelMap(mapResponseData[0], params.mapping, model),\n      mapResponseData[1],\n    ];\n  }\n\n  /**\n   *\n   * Join one-to-one relation: from relation array to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromArray(\n    from: T[],\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.find(\n            (relationItem) => relationItem.id === modelItem[toRelation],\n          );\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    }\n\n    if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i  relationItem.id === to[0][i][toRelation],\n        );\n      }\n    }\n\n    return to;\n  }\n\n  /**\n   * Join one-to-one relation: from relation map to entity (map or array) 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity ModelMap where the relation data is located\n   * @param to Entity model server response where relation reference are located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  private static joinOneToOneRelationFromMap(\n    from: ModelMap,\n    to: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (to[0] instanceof Map) {\n      const mapKeysIt = to[0].keys();\n      const mapValues = to[0].values();\n      let i = 0;\n      for (const mapArrValue of mapValues) {\n        mapArrValue.forEach((modelItem) => {\n          modelItem[toNewRelation] = from.get(String(modelItem[toRelation]))[0];\n        });\n        i++;\n      }\n\n      i = 0;\n      for (const key of mapKeysIt) {\n        to[0].set(key, mapValues[i]);\n        i++;\n      }\n    } else if (to[0] instanceof Array) {\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i (\n    rawResponseData: RawResponseData,\n    params: QueryOptions,\n    model: new () => T,\n  ): ModelResponseData {\n    if (!rawResponseData) {\n      return [[]];\n    }\n\n    if (rawResponseData[0] instanceof Array) {\n      return this.mapArrayToModel(rawResponseData as [T[]], model);\n    } else if (\n      rawResponseData[0] instanceof Object &&\n      rawResponseData.length === 2\n    ) {\n      const map = new Map(\n        Object.entries(rawResponseData[0] as { [key: string]: T[] }),\n      );\n      return this.mapMapToModel([map, rawResponseData[1]], params, model);\n    }\n\n    return [[]];\n  }\n\n  /**\n   * Join one-to-one relation: from relation map/array to entity map/array 'toNewRelation' col.\n   * @template T Entity model class type\n   * @param from Entity array/ModelMap where the relation data is located\n   * @param toRelation Key name of entity relation reference col\n   * @param toNewRelation Key of entity where relation data will be saved (be carefully with overrides!)\n   * @returns Entity model server response with model relation data\n   */\n  public joinOneToOneRelation(\n    from: ModelResponseData,\n    toRelation: string,\n    toNewRelation: string,\n  ): ModelResponseData {\n    if (!this.data || !from) {\n      return;\n    }\n\n    if (from[0] instanceof Map) {\n      return ModelResponse.joinOneToOneRelationFromMap(\n        from[0] as ModelMap,\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    } else if (from[0] instanceof Array) {\n      return ModelResponse.joinOneToOneRelationFromArray(\n        from[0] as T[],\n        this.data,\n        toRelation,\n        toNewRelation,\n      );\n    }\n  }\n}\n\n/**\n * Class for entity service POST requests\n * @export\n */\nexport class EntityPostRequest {\n  data: BaseEntityModel;\n  constructor(data: BaseEntityModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Class for entity service PUT requests\n * @export\n */\nexport class EntityPutRequest {\n  data: BaseIdModel;\n  constructor(data: BaseIdModel) {\n    this.data = data;\n  }\n}\n\n/**\n * Base Entity model object\n * @export\n */\nexport abstract class BaseEntityModel {\n  [key: string]: any;\n}\n\n/**\n * Base Entity ID model object\n * @export\n */\nexport abstract class BaseIdModel {\n  id: number;\n  [key: string]: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nListComponent\n\nListComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nListComponent->SharedModule\n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nSharedModule->ListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ListComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ListComponent } from './components/list/list.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [ListComponent],\n  imports: [\n    CommonModule,\n    LayoutModule,\n    FlexLayoutModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatButtonModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatIconModule,\n    MatMenuModule,\n    MatCardModule,\n  ],\n  exports: [CommonModule, LayoutModule, FlexLayoutModule, ListComponent],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/toast/toast.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n            \n                styleUrls\n                ./toast.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toast.component.pug\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                    Public\n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/toast/toast.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/toast/toast.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open(toast: IToast)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/toast/toast.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toast\n                                    \n                                                IToast\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snackBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBar\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/toast/toast.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IToast\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/toast/toast.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { IToast } from 'src/app/core/models/toast.interface';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-toast',\n  templateUrl: './toast.component.pug',\n  styleUrls: ['./toast.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ToastComponent implements OnInit {\n  public toast: IToast;\n\n  constructor(public snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {}\n\n  public open(toast: IToast) {\n    this.toast = toast;\n    this.snackBar.open(toast.message, toast.options.closeString, {\n      duration: toast.options.duration,\n      panelClass: toast.style,\n    });\n  }\n}\n\n    \n\n    \n        span([class]='toast.style', *ngIf='false')\n  | {{ toast.message }}\n\n    \n\n    \n                \n                    ./toast.component.scss\n                \n                snack-bar-container {\n  &.mat-snack-bar-container.toast-error {\n    background-color: red !important;\n    color: #fefefe !important;\n  }\n\n  &.mat-snack-bar-container.toast-info {\n    background-color: #3f51b5 !important;\n    color: #fefefe !important;\n\n    .mat-simple-snackbar-action {\n      button {\n        span {\n          color: #cccccc !important;\n        }\n      }\n    }\n  }\n\n  &.mat-snack-bar-container.toast-success {\n    background-color: #4cbb68 !important;\n    color: #fefefe !important;\n  }\n\n  &.mat-snack-bar-container.toast-warning {\n    background-color: #e2d735 !important;\n    color: #fefefe !important;\n  }\n\n  .mat-simple-snackbar-action {\n    button {\n      span {\n        color: #3d3d3d;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'span([class]=\\'toast.style\\', *ngIf=\\'false\\')  | {{ toast.message }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'DepartmentListPage', 'selector': 'app-department-list'},{'name': 'DepartmentNewPage', 'selector': 'department-new'},{'name': 'EmployeeEditPage', 'selector': 'employee-edit'},{'name': 'EmployeeListPage', 'selector': 'app-employee-list'},{'name': 'EmployeeNewPage', 'selector': 'employee-new'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ListComponent', 'selector': 'app-list'},{'name': 'ModalDeleteComponent', 'selector': 'app-modal-delete'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToastOptions.html":{"url":"interfaces/ToastOptions.html","title":"interface - ToastOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ToastOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/toast.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        closeString\n                                \n                                \n                                            Optional\n                                        duration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeString\n                                    \n                                \n                                \n                                    \n                                        closeString:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IToast {\n  id: string;\n  message: string;\n  style: ToastStyles;\n  options?: ToastOptions;\n}\n\nexport interface ToastOptions {\n  duration?: number;\n  closeString?: string;\n}\n\nexport enum ToastStyles {\n  SUCCESS = 'toast-success',\n  INFO = 'toast-info',\n  WARNING = 'toast-warning',\n  ERROR = 'toast-error'\n}\n\nexport const ToastDefaults = {\n  CLOSE_STR: 'Close',\n  DURATION: 500,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/toast.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                error\n                            \n                            \n                                generateGuid\n                            \n                            \n                                getToast\n                            \n                            \n                                info\n                            \n                            \n                                success\n                            \n                            \n                                toast\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/toast.service.ts:15\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/toast.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, options?: ToastOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/toast.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ToastOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateGuid\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateGuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/toast.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToast\n                        \n                        \n                    \n                \n            \n            \n                \ngetToast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/toast.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, options?: ToastOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/toast.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ToastOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            success\n                        \n                        \n                    \n                \n            \n            \n                \nsuccess(message: string, options?: ToastOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/toast.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ToastOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toast\n                        \n                        \n                    \n                \n            \n            \n                \ntoast(message: string, style: ToastStyles, options?: ToastOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/toast.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n                                    \n                                                ToastStyles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ToastOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, options?: ToastOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/toast.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ToastOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/toast.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  IToast,\n  ToastDefaults,\n  ToastOptions,\n  ToastStyles,\n} from '../models/toast.interface';\nimport { UtilsService } from './utils.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  private subject = new Subject();\n\n  constructor() {}\n\n  generateGuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  getToast(): Observable {\n    return this.subject.asObservable();\n  }\n\n  success(message: string, options?: ToastOptions): void {\n    this.toast(message, ToastStyles.SUCCESS, options);\n  }\n\n  error(message: string, options?: ToastOptions): void {\n    this.toast(message, ToastStyles.ERROR, options);\n  }\n\n  info(message: string, options?: ToastOptions): void {\n    this.toast(message, ToastStyles.INFO, options);\n  }\n\n  warn(message: string, options?: ToastOptions): void {\n    this.toast(message, ToastStyles.WARNING, options);\n  }\n\n  toast(message: string, style: ToastStyles, options?: ToastOptions): void {\n    options = options || {};\n    options.closeString = options.closeString || ToastDefaults.CLOSE_STR;\n    options.duration = options.duration || ToastDefaults.DURATION;\n    this.subject.next({\n      id: this.generateGuid(),\n      message,\n      style,\n      options,\n    } as IToast);\n  }\n\n  clear() {\n    this.subject.next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilsService.html":{"url":"injectables/UtilsService.html","title":"injectable - UtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/utils.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/utils.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loading(status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/utils.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/utils.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/utils.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  BaseEntityModel,\n  BaseIdModel,\n  ModelResponse,\n} from '../models/api.interface';\nimport { BehaviorSubject } from 'rxjs';\nimport { ModelMap } from '~core/models/app.interface';\nimport { ModelResponseData } from '../models/api.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UtilsService {\n  private loadingSubject = new BehaviorSubject(false);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor() {}\n\n  public loading(status: boolean) {\n    this.loadingSubject.next(status);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/breadcrumb/breadcrumb.component.ts\n            \n            component\n            BreadcrumbComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/breadcrumb/breadcrumb.component.ts\n            \n            interface\n            IBreadCrumb\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/core.guard.ts\n            \n            function\n            throwIfAlreadyLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/http/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/http/department/department.service.ts\n            \n            injectable\n            DepartmentService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/http/employee/employee.service.ts\n            \n            injectable\n            EmployeeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            class\n            BaseEntityModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            class\n            BaseIdModel\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            class\n            BooleanResponse\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            class\n            EntityPostRequest\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            class\n            EntityPutRequest\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            class\n            ErrorResponse\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            class\n            ModelResponse\n            \n                62 %\n                (10/16)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            class\n            RawResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            class\n            ServerResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            interface\n            BooleanResponseData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/models/api.interface.ts\n            \n            interface\n            QueryOptions\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/core/models/app.interface.ts\n            \n            class\n            DataSourceSubjData\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/core/models/app.interface.ts\n            \n            class\n            ModelMap\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/core/models/department.model.ts\n            \n            class\n            Department\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/models/employee.model.ts\n            \n            class\n            Employee\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/core/models/toast.interface.ts\n            \n            interface\n            IToast\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/toast.interface.ts\n            \n            interface\n            ToastOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/toast.interface.ts\n            \n            variable\n            ToastDefaults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/utils.service.ts\n            \n            injectable\n            UtilsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/department/pages/list/list-datasource.ts\n            \n            class\n            DepartmentsDataSource\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/department/pages/list/list.page.ts\n            \n            component\n            DepartmentListPage\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/modules/department/pages/new/new.page.ts\n            \n            component\n            DepartmentNewPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/employee/components/modal-delete/modal-delete.component.ts\n            \n            component\n            ModalDeleteComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/employee/pages/edit/edit.page.ts\n            \n            component\n            EmployeeEditPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/employee/pages/list/list-datasource.ts\n            \n            class\n            EmployeesDataSource\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/employee/pages/list/list.page.ts\n            \n            component\n            EmployeeListPage\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/modules/employee/pages/new/new.page.ts\n            \n            component\n            EmployeeNewPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/list/list.component.ts\n            \n            component\n            ListComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/shared/components/list/list.component.ts\n            \n            interface\n            ItemAction\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/list/list.component.ts\n            \n            interface\n            ListDataSource\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.0.7\n        \n            @angular/cdk : ^9.1.3\n        \n            @angular/common : ~9.0.7\n        \n            @angular/compiler : ~9.0.7\n        \n            @angular/core : ~9.0.7\n        \n            @angular/flex-layout : ^9.0.0-beta.29\n        \n            @angular/forms : ~9.0.7\n        \n            @angular/material : ^9.1.3\n        \n            @angular/platform-browser : ~9.0.7\n        \n            @angular/platform-browser-dynamic : ~9.0.7\n        \n            @angular/router : ~9.0.7\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @types/eslint : ^6.8.0\n        \n            @types/lodash : ^4.14.149\n        \n            @types/npm : ^2.0.31\n        \n            @types/typescript : ^2.0.0\n        \n            @types/webpack : ^4.41.10\n        \n            bourbon : ^7.0.0\n        \n            hammerjs : ^2.0.8\n        \n            lodash : ^4.17.15\n        \n            ng-cli-pug-loader : ^0.2.2\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URIS   (src/.../api.interface.ts)\n                        \n                        \n                            ToastStyles   (src/.../toast.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/models/api.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        API_URIS\n                    \n                \n                    \n                        \n                            Specific server REST api URIs\n\n                        \n                    \n                        \n                            \n                                 EMPLOYEE\n                            \n                        \n                        \n                            \n                                Value : /employee\n                            \n                        \n                        \n                            \n                                 DEPARTMENT\n                            \n                        \n                        \n                            \n                                Value : /department\n                            \n                        \n            \n        \n\n    src/app/core/models/toast.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        ToastStyles\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : toast-success\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : toast-info\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : toast-warning\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : toast-error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            throwIfAlreadyLoaded   (src/.../core.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/core.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            throwIfAlreadyLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nthrowIfAlreadyLoaded(parentModule: any, moduleName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentModule\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    moduleName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 9.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DepartmentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DepartmentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DepartmentModule\n\n\n\ncluster_DepartmentModule_declarations\n\n\n\ncluster_DepartmentModule_imports\n\n\n\ncluster_DepartmentModule_exports\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_declarations\n\n\n\ncluster_EmployeeModule_imports\n\n\n\ncluster_EmployeeModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nBreadcrumbComponent \n\nBreadcrumbComponent \n\nBreadcrumbComponent  -->\n\nCoreModule->BreadcrumbComponent \n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nCoreModule->FooterComponent \n\n\n\n\n\nNotFoundComponent \n\nNotFoundComponent \n\nNotFoundComponent  -->\n\nCoreModule->NotFoundComponent \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nCoreModule->ToastComponent \n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\nCoreModule -->\n\nBreadcrumbComponent->CoreModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nCoreModule -->\n\nNotFoundComponent->CoreModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nCoreModule -->\n\nToastComponent->CoreModule\n\n\n\n\n\nDepartmentListPage\n\nDepartmentListPage\n\n\n\nDepartmentModule\n\nDepartmentModule\n\nDepartmentModule -->\n\nDepartmentListPage->DepartmentModule\n\n\n\n\n\nDepartmentNewPage\n\nDepartmentNewPage\n\nDepartmentModule -->\n\nDepartmentNewPage->DepartmentModule\n\n\n\n\n\nDepartmentRoutingModule \n\nDepartmentRoutingModule \n\nDepartmentRoutingModule  -->\n\nDepartmentModule->DepartmentRoutingModule \n\n\n\n\n\nDepartmentRoutingModule\n\nDepartmentRoutingModule\n\nDepartmentModule -->\n\nDepartmentRoutingModule->DepartmentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDepartmentModule -->\n\nSharedModule->DepartmentModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nSharedModule->EmployeeModule\n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nSharedModule->ListComponent \n\n\n\n\n\nEmployeeEditPage\n\nEmployeeEditPage\n\nEmployeeModule -->\n\nEmployeeEditPage->EmployeeModule\n\n\n\n\n\nEmployeeListPage\n\nEmployeeListPage\n\nEmployeeModule -->\n\nEmployeeListPage->EmployeeModule\n\n\n\n\n\nEmployeeNewPage\n\nEmployeeNewPage\n\nEmployeeModule -->\n\nEmployeeNewPage->EmployeeModule\n\n\n\n\n\nModalDeleteComponent\n\nModalDeleteComponent\n\nEmployeeModule -->\n\nModalDeleteComponent->EmployeeModule\n\n\n\n\n\nEmployeeRoutingModule \n\nEmployeeRoutingModule \n\nEmployeeRoutingModule  -->\n\nEmployeeModule->EmployeeRoutingModule \n\n\n\n\n\nEmployeeRoutingModule\n\nEmployeeRoutingModule\n\nEmployeeModule -->\n\nEmployeeRoutingModule->EmployeeModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nSharedModule -->\n\nListComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        14 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ModelResponseData   (src/.../api.interface.ts)\n                        \n                        \n                            RawResponseData   (src/.../api.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/models/api.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ModelResponseData\n                \n            \n            \n                \n                    Entity model server response type\n\n                \n            \n            \n                \n                         |  |  | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RawResponseData\n                \n            \n            \n                \n                    Raw server http response type\n\n                \n            \n            \n                \n                         |  |  | null\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            ToastDefaults   (src/.../toast.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  api_url: 'http://localhost:3000/api',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/models/toast.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ToastDefaults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  CLOSE_STR: 'Close',\n  DURATION: 500,\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
